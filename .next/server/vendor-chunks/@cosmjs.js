"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@cosmjs";
exports.ids = ["vendor-chunks/@cosmjs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/addresses.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/addresses.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// See https://github.com/tendermint/tendermint/blob/f2ada0a604b4c0763bda2f64fac53d506d3beca7/docs/spec/blockchain/encoding.md#public-key-cryptography\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst encoding_2 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\nfunction rawEd25519PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 32) {\n        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n}\nexports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;\nfunction rawSecp256k1PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 33) {\n        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));\n}\nexports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;\n// For secp256k1 this assumes we already have a compressed pubkey.\nfunction pubkeyToRawAddress(pubkey) {\n    if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {\n        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);\n        return rawSecp256k1PubkeyToRawAddress(pubkeyData);\n    }\n    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {\n        const pubkeyData = (0, encoding_1.fromBase64)(pubkey.value);\n        return rawEd25519PubkeyToRawAddress(pubkeyData);\n    }\n    else if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {\n        // https://github.com/tendermint/tendermint/blob/38b401657e4ad7a7eeb3c30a3cbf512037df3740/crypto/multisig/threshold_pubkey.go#L71-L74\n        const pubkeyData = (0, encoding_2.encodeAminoPubkey)(pubkey);\n        return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n    }\n    else {\n        throw new Error(\"Unsupported public key type\");\n    }\n}\nexports.pubkeyToRawAddress = pubkeyToRawAddress;\nfunction pubkeyToAddress(pubkey, prefix) {\n    return (0, encoding_1.toBech32)(prefix, pubkeyToRawAddress(pubkey));\n}\nexports.pubkeyToAddress = pubkeyToAddress;\n//# sourceMappingURL=addresses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9hZGRyZXNzZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUIsR0FBRywwQkFBMEIsR0FBRyxzQ0FBc0MsR0FBRyxvQ0FBb0M7QUFDcEksaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxtQkFBbUIsbUJBQU8sQ0FBQyx3RUFBWTtBQUN2QyxrQkFBa0IsbUJBQU8sQ0FBQyxzRUFBVztBQUNyQztBQUNBO0FBQ0EsMERBQTBELGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0M7QUFDcEM7QUFDQTtBQUNBLHlFQUF5RSxrQkFBa0I7QUFDM0Y7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QjtBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9hZGRyZXNzZXMuanM/ZjVjNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvZjJhZGEwYTYwNGI0YzA3NjNiZGEyZjY0ZmFjNTNkNTA2ZDNiZWNhNy9kb2NzL3NwZWMvYmxvY2tjaGFpbi9lbmNvZGluZy5tZCNwdWJsaWMta2V5LWNyeXB0b2dyYXBoeVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5wdWJrZXlUb0FkZHJlc3MgPSBleHBvcnRzLnB1YmtleVRvUmF3QWRkcmVzcyA9IGV4cG9ydHMucmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzID0gZXhwb3J0cy5yYXdFZDI1NTE5UHVia2V5VG9SYXdBZGRyZXNzID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBlbmNvZGluZ18yID0gcmVxdWlyZShcIi4vZW5jb2RpbmdcIik7XG5jb25zdCBwdWJrZXlzXzEgPSByZXF1aXJlKFwiLi9wdWJrZXlzXCIpO1xuZnVuY3Rpb24gcmF3RWQyNTUxOVB1YmtleVRvUmF3QWRkcmVzcyhwdWJrZXlEYXRhKSB7XG4gICAgaWYgKHB1YmtleURhdGEubGVuZ3RoICE9PSAzMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgRWQyNTUxOSBwdWJrZXkgbGVuZ3RoOiAke3B1YmtleURhdGEubGVuZ3RofWApO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGNyeXB0b18xLnNoYTI1NikocHVia2V5RGF0YSkuc2xpY2UoMCwgMjApO1xufVxuZXhwb3J0cy5yYXdFZDI1NTE5UHVia2V5VG9SYXdBZGRyZXNzID0gcmF3RWQyNTUxOVB1YmtleVRvUmF3QWRkcmVzcztcbmZ1bmN0aW9uIHJhd1NlY3AyNTZrMVB1YmtleVRvUmF3QWRkcmVzcyhwdWJrZXlEYXRhKSB7XG4gICAgaWYgKHB1YmtleURhdGEubGVuZ3RoICE9PSAzMykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgU2VjcDI1NmsxIHB1YmtleSBsZW5ndGggKGNvbXByZXNzZWQpOiAke3B1YmtleURhdGEubGVuZ3RofWApO1xuICAgIH1cbiAgICByZXR1cm4gKDAsIGNyeXB0b18xLnJpcGVtZDE2MCkoKDAsIGNyeXB0b18xLnNoYTI1NikocHVia2V5RGF0YSkpO1xufVxuZXhwb3J0cy5yYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MgPSByYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3M7XG4vLyBGb3Igc2VjcDI1NmsxIHRoaXMgYXNzdW1lcyB3ZSBhbHJlYWR5IGhhdmUgYSBjb21wcmVzc2VkIHB1YmtleS5cbmZ1bmN0aW9uIHB1YmtleVRvUmF3QWRkcmVzcyhwdWJrZXkpIHtcbiAgICBpZiAoKDAsIHB1YmtleXNfMS5pc1NlY3AyNTZrMVB1YmtleSkocHVia2V5KSkge1xuICAgICAgICBjb25zdCBwdWJrZXlEYXRhID0gKDAsIGVuY29kaW5nXzEuZnJvbUJhc2U2NCkocHVia2V5LnZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHJhd1NlY3AyNTZrMVB1YmtleVRvUmF3QWRkcmVzcyhwdWJrZXlEYXRhKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoKDAsIHB1YmtleXNfMS5pc0VkMjU1MTlQdWJrZXkpKHB1YmtleSkpIHtcbiAgICAgICAgY29uc3QgcHVia2V5RGF0YSA9ICgwLCBlbmNvZGluZ18xLmZyb21CYXNlNjQpKHB1YmtleS52YWx1ZSk7XG4gICAgICAgIHJldHVybiByYXdFZDI1NTE5UHVia2V5VG9SYXdBZGRyZXNzKHB1YmtleURhdGEpO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgcHVia2V5c18xLmlzTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkpKHB1YmtleSkpIHtcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iLzM4YjQwMTY1N2U0YWQ3YTdlZWIzYzMwYTNjYmY1MTIwMzdkZjM3NDAvY3J5cHRvL211bHRpc2lnL3RocmVzaG9sZF9wdWJrZXkuZ28jTDcxLUw3NFxuICAgICAgICBjb25zdCBwdWJrZXlEYXRhID0gKDAsIGVuY29kaW5nXzIuZW5jb2RlQW1pbm9QdWJrZXkpKHB1YmtleSk7XG4gICAgICAgIHJldHVybiAoMCwgY3J5cHRvXzEuc2hhMjU2KShwdWJrZXlEYXRhKS5zbGljZSgwLCAyMCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBwdWJsaWMga2V5IHR5cGVcIik7XG4gICAgfVxufVxuZXhwb3J0cy5wdWJrZXlUb1Jhd0FkZHJlc3MgPSBwdWJrZXlUb1Jhd0FkZHJlc3M7XG5mdW5jdGlvbiBwdWJrZXlUb0FkZHJlc3MocHVia2V5LCBwcmVmaXgpIHtcbiAgICByZXR1cm4gKDAsIGVuY29kaW5nXzEudG9CZWNoMzIpKHByZWZpeCwgcHVia2V5VG9SYXdBZGRyZXNzKHB1YmtleSkpO1xufVxuZXhwb3J0cy5wdWJrZXlUb0FkZHJlc3MgPSBwdWJrZXlUb0FkZHJlc3M7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hZGRyZXNzZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/coins.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/coins.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.addCoins = exports.parseCoins = exports.coins = exports.coin = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\n/**\n * Creates a coin.\n *\n * If your values do not exceed the safe integer range of JS numbers (53 bit),\n * you can use the number type here. This is the case for all typical Cosmos SDK\n * chains that use the default 6 decimals.\n *\n * In case you need to supportr larger values, use unsigned integer strings instead.\n */\nfunction coin(amount, denom) {\n    let outAmount;\n    if (typeof amount === \"number\") {\n        try {\n            outAmount = new math_1.Uint53(amount).toString();\n        }\n        catch (_err) {\n            throw new Error(\"Given amount is not a safe integer. Consider using a string instead to overcome the limitations of JS numbers.\");\n        }\n    }\n    else {\n        if (!amount.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid unsigned integer string format\");\n        }\n        outAmount = amount.replace(/^0*/, \"\") || \"0\";\n    }\n    return {\n        amount: outAmount,\n        denom: denom,\n    };\n}\nexports.coin = coin;\n/**\n * Creates a list of coins with one element.\n */\nfunction coins(amount, denom) {\n    return [coin(amount, denom)];\n}\nexports.coins = coins;\n/**\n * Takes a coins list like \"819966000ucosm,700000000ustake\" and parses it.\n *\n * Starting with CosmJS 0.32.3, the following imports are all synonym and support\n * a variety of denom types such as IBC denoms or tokenfactory. If you need to\n * restrict the denom to something very minimal, this needs to be implemented\n * separately in the caller.\n *\n * ```\n * import { parseCoins } from \"@cosmjs/proto-signing\";\n * // equals\n * import { parseCoins } from \"@cosmjs/stargate\";\n * // equals\n * import { parseCoins } from \"@cosmjs/amino\";\n * ```\n *\n * This function is not made for supporting decimal amounts and does not support\n * parsing gas prices.\n */\nfunction parseCoins(input) {\n    return input\n        .replace(/\\s/g, \"\")\n        .split(\",\")\n        .filter(Boolean)\n        .map((part) => {\n        // Denom regex from Stargate (https://github.com/cosmos/cosmos-sdk/blob/v0.42.7/types/coin.go#L599-L601)\n        const match = part.match(/^([0-9]+)([a-zA-Z][a-zA-Z0-9/]{2,127})$/);\n        if (!match)\n            throw new Error(\"Got an invalid coin string\");\n        return {\n            amount: match[1].replace(/^0+/, \"\") || \"0\",\n            denom: match[2],\n        };\n    });\n}\nexports.parseCoins = parseCoins;\n/**\n * Function to sum up coins with type Coin\n */\nfunction addCoins(lhs, rhs) {\n    if (lhs.denom !== rhs.denom)\n        throw new Error(\"Trying to add two coins with different denoms\");\n    return {\n        amount: math_1.Decimal.fromAtomics(lhs.amount, 0).plus(math_1.Decimal.fromAtomics(rhs.amount, 0)).atomics,\n        denom: lhs.denom,\n    };\n}\nexports.addCoins = addCoins;\n//# sourceMappingURL=coins.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9jb2lucy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxhQUFhLEdBQUcsWUFBWTtBQUNwRSxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQSxZQUFZLGFBQWE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWlFLE1BQU07QUFDdkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvY29pbnMuanM/YWQzOCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWRkQ29pbnMgPSBleHBvcnRzLnBhcnNlQ29pbnMgPSBleHBvcnRzLmNvaW5zID0gZXhwb3J0cy5jb2luID0gdm9pZCAwO1xuY29uc3QgbWF0aF8xID0gcmVxdWlyZShcIkBjb3NtanMvbWF0aFwiKTtcbi8qKlxuICogQ3JlYXRlcyBhIGNvaW4uXG4gKlxuICogSWYgeW91ciB2YWx1ZXMgZG8gbm90IGV4Y2VlZCB0aGUgc2FmZSBpbnRlZ2VyIHJhbmdlIG9mIEpTIG51bWJlcnMgKDUzIGJpdCksXG4gKiB5b3UgY2FuIHVzZSB0aGUgbnVtYmVyIHR5cGUgaGVyZS4gVGhpcyBpcyB0aGUgY2FzZSBmb3IgYWxsIHR5cGljYWwgQ29zbW9zIFNES1xuICogY2hhaW5zIHRoYXQgdXNlIHRoZSBkZWZhdWx0IDYgZGVjaW1hbHMuXG4gKlxuICogSW4gY2FzZSB5b3UgbmVlZCB0byBzdXBwb3J0ciBsYXJnZXIgdmFsdWVzLCB1c2UgdW5zaWduZWQgaW50ZWdlciBzdHJpbmdzIGluc3RlYWQuXG4gKi9cbmZ1bmN0aW9uIGNvaW4oYW1vdW50LCBkZW5vbSkge1xuICAgIGxldCBvdXRBbW91bnQ7XG4gICAgaWYgKHR5cGVvZiBhbW91bnQgPT09IFwibnVtYmVyXCIpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIG91dEFtb3VudCA9IG5ldyBtYXRoXzEuVWludDUzKGFtb3VudCkudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2Vycikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiR2l2ZW4gYW1vdW50IGlzIG5vdCBhIHNhZmUgaW50ZWdlci4gQ29uc2lkZXIgdXNpbmcgYSBzdHJpbmcgaW5zdGVhZCB0byBvdmVyY29tZSB0aGUgbGltaXRhdGlvbnMgb2YgSlMgbnVtYmVycy5cIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmICghYW1vdW50Lm1hdGNoKC9eWzAtOV0rJC8pKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHVuc2lnbmVkIGludGVnZXIgc3RyaW5nIGZvcm1hdFwiKTtcbiAgICAgICAgfVxuICAgICAgICBvdXRBbW91bnQgPSBhbW91bnQucmVwbGFjZSgvXjAqLywgXCJcIikgfHwgXCIwXCI7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGFtb3VudDogb3V0QW1vdW50LFxuICAgICAgICBkZW5vbTogZGVub20sXG4gICAgfTtcbn1cbmV4cG9ydHMuY29pbiA9IGNvaW47XG4vKipcbiAqIENyZWF0ZXMgYSBsaXN0IG9mIGNvaW5zIHdpdGggb25lIGVsZW1lbnQuXG4gKi9cbmZ1bmN0aW9uIGNvaW5zKGFtb3VudCwgZGVub20pIHtcbiAgICByZXR1cm4gW2NvaW4oYW1vdW50LCBkZW5vbSldO1xufVxuZXhwb3J0cy5jb2lucyA9IGNvaW5zO1xuLyoqXG4gKiBUYWtlcyBhIGNvaW5zIGxpc3QgbGlrZSBcIjgxOTk2NjAwMHVjb3NtLDcwMDAwMDAwMHVzdGFrZVwiIGFuZCBwYXJzZXMgaXQuXG4gKlxuICogU3RhcnRpbmcgd2l0aCBDb3NtSlMgMC4zMi4zLCB0aGUgZm9sbG93aW5nIGltcG9ydHMgYXJlIGFsbCBzeW5vbnltIGFuZCBzdXBwb3J0XG4gKiBhIHZhcmlldHkgb2YgZGVub20gdHlwZXMgc3VjaCBhcyBJQkMgZGVub21zIG9yIHRva2VuZmFjdG9yeS4gSWYgeW91IG5lZWQgdG9cbiAqIHJlc3RyaWN0IHRoZSBkZW5vbSB0byBzb21ldGhpbmcgdmVyeSBtaW5pbWFsLCB0aGlzIG5lZWRzIHRvIGJlIGltcGxlbWVudGVkXG4gKiBzZXBhcmF0ZWx5IGluIHRoZSBjYWxsZXIuXG4gKlxuICogYGBgXG4gKiBpbXBvcnQgeyBwYXJzZUNvaW5zIH0gZnJvbSBcIkBjb3NtanMvcHJvdG8tc2lnbmluZ1wiO1xuICogLy8gZXF1YWxzXG4gKiBpbXBvcnQgeyBwYXJzZUNvaW5zIH0gZnJvbSBcIkBjb3NtanMvc3RhcmdhdGVcIjtcbiAqIC8vIGVxdWFsc1xuICogaW1wb3J0IHsgcGFyc2VDb2lucyB9IGZyb20gXCJAY29zbWpzL2FtaW5vXCI7XG4gKiBgYGBcbiAqXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIG5vdCBtYWRlIGZvciBzdXBwb3J0aW5nIGRlY2ltYWwgYW1vdW50cyBhbmQgZG9lcyBub3Qgc3VwcG9ydFxuICogcGFyc2luZyBnYXMgcHJpY2VzLlxuICovXG5mdW5jdGlvbiBwYXJzZUNvaW5zKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0XG4gICAgICAgIC5yZXBsYWNlKC9cXHMvZywgXCJcIilcbiAgICAgICAgLnNwbGl0KFwiLFwiKVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pXG4gICAgICAgIC5tYXAoKHBhcnQpID0+IHtcbiAgICAgICAgLy8gRGVub20gcmVnZXggZnJvbSBTdGFyZ2F0ZSAoaHR0cHM6Ly9naXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2Jsb2IvdjAuNDIuNy90eXBlcy9jb2luLmdvI0w1OTktTDYwMSlcbiAgICAgICAgY29uc3QgbWF0Y2ggPSBwYXJ0Lm1hdGNoKC9eKFswLTldKykoW2EtekEtWl1bYS16QS1aMC05L117MiwxMjd9KSQvKTtcbiAgICAgICAgaWYgKCFtYXRjaClcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkdvdCBhbiBpbnZhbGlkIGNvaW4gc3RyaW5nXCIpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYW1vdW50OiBtYXRjaFsxXS5yZXBsYWNlKC9eMCsvLCBcIlwiKSB8fCBcIjBcIixcbiAgICAgICAgICAgIGRlbm9tOiBtYXRjaFsyXSxcbiAgICAgICAgfTtcbiAgICB9KTtcbn1cbmV4cG9ydHMucGFyc2VDb2lucyA9IHBhcnNlQ29pbnM7XG4vKipcbiAqIEZ1bmN0aW9uIHRvIHN1bSB1cCBjb2lucyB3aXRoIHR5cGUgQ29pblxuICovXG5mdW5jdGlvbiBhZGRDb2lucyhsaHMsIHJocykge1xuICAgIGlmIChsaHMuZGVub20gIT09IHJocy5kZW5vbSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVHJ5aW5nIHRvIGFkZCB0d28gY29pbnMgd2l0aCBkaWZmZXJlbnQgZGVub21zXCIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGFtb3VudDogbWF0aF8xLkRlY2ltYWwuZnJvbUF0b21pY3MobGhzLmFtb3VudCwgMCkucGx1cyhtYXRoXzEuRGVjaW1hbC5mcm9tQXRvbWljcyhyaHMuYW1vdW50LCAwKSkuYXRvbWljcyxcbiAgICAgICAgZGVub206IGxocy5kZW5vbSxcbiAgICB9O1xufVxuZXhwb3J0cy5hZGRDb2lucyA9IGFkZENvaW5zO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29pbnMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/coins.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/encoding.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/encoding.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.encodeEd25519Pubkey = exports.encodeSecp256k1Pubkey = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\n/**\n * Takes a Secp256k1 public key as raw bytes and returns the Amino JSON\n * representation of it (the type/value wrapper object).\n */\nfunction encodeSecp256k1Pubkey(pubkey) {\n    if (pubkey.length !== 33 || (pubkey[0] !== 0x02 && pubkey[0] !== 0x03)) {\n        throw new Error(\"Public key must be compressed secp256k1, i.e. 33 bytes starting with 0x02 or 0x03\");\n    }\n    return {\n        type: pubkeys_1.pubkeyType.secp256k1,\n        value: (0, encoding_1.toBase64)(pubkey),\n    };\n}\nexports.encodeSecp256k1Pubkey = encodeSecp256k1Pubkey;\n/**\n * Takes an Edd25519 public key as raw bytes and returns the Amino JSON\n * representation of it (the type/value wrapper object).\n */\nfunction encodeEd25519Pubkey(pubkey) {\n    if (pubkey.length !== 32) {\n        throw new Error(\"Ed25519 public key must be 32 bytes long\");\n    }\n    return {\n        type: pubkeys_1.pubkeyType.ed25519,\n        value: (0, encoding_1.toBase64)(pubkey),\n    };\n}\nexports.encodeEd25519Pubkey = encodeEd25519Pubkey;\n// As discussed in https://github.com/binance-chain/javascript-sdk/issues/163\n// Prefixes listed here: https://github.com/tendermint/tendermint/blob/d419fffe18531317c28c29a292ad7d253f6cafdf/docs/spec/blockchain/encoding.md#public-key-cryptography\n// Last bytes is varint-encoded length prefix\nconst pubkeyAminoPrefixSecp256k1 = (0, encoding_1.fromHex)(\"eb5ae987\" + \"21\" /* fixed length */);\nconst pubkeyAminoPrefixEd25519 = (0, encoding_1.fromHex)(\"1624de64\" + \"20\" /* fixed length */);\nconst pubkeyAminoPrefixSr25519 = (0, encoding_1.fromHex)(\"0dfb1005\" + \"20\" /* fixed length */);\n/** See https://github.com/tendermint/tendermint/commit/38b401657e4ad7a7eeb3c30a3cbf512037df3740 */\nconst pubkeyAminoPrefixMultisigThreshold = (0, encoding_1.fromHex)(\"22c1f7e2\" /* variable length not included */);\n/**\n * Decodes a pubkey in the Amino binary format to a type/value object.\n */\nfunction decodeAminoPubkey(data) {\n    if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSecp256k1)) {\n        const rest = data.slice(pubkeyAminoPrefixSecp256k1.length);\n        if (rest.length !== 33) {\n            throw new Error(\"Invalid rest data length. Expected 33 bytes (compressed secp256k1 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.secp256k1,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixEd25519)) {\n        const rest = data.slice(pubkeyAminoPrefixEd25519.length);\n        if (rest.length !== 32) {\n            throw new Error(\"Invalid rest data length. Expected 32 bytes (Ed25519 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.ed25519,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixSr25519)) {\n        const rest = data.slice(pubkeyAminoPrefixSr25519.length);\n        if (rest.length !== 32) {\n            throw new Error(\"Invalid rest data length. Expected 32 bytes (Sr25519 pubkey).\");\n        }\n        return {\n            type: pubkeys_1.pubkeyType.sr25519,\n            value: (0, encoding_1.toBase64)(rest),\n        };\n    }\n    else if ((0, utils_1.arrayContentStartsWith)(data, pubkeyAminoPrefixMultisigThreshold)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        return decodeMultisigPubkey(data);\n    }\n    else {\n        throw new Error(\"Unsupported public key type. Amino data starts with: \" + (0, encoding_1.toHex)(data.slice(0, 5)));\n    }\n}\nexports.decodeAminoPubkey = decodeAminoPubkey;\n/**\n * Decodes a bech32 pubkey to Amino binary, which is then decoded to a type/value object.\n * The bech32 prefix is ignored and discareded.\n *\n * @param bechEncoded the bech32 encoded pubkey\n */\nfunction decodeBech32Pubkey(bechEncoded) {\n    const { data } = (0, encoding_1.fromBech32)(bechEncoded);\n    return decodeAminoPubkey(data);\n}\nexports.decodeBech32Pubkey = decodeBech32Pubkey;\n/**\n * Uvarint decoder for Amino.\n * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/decoder.go#L64-76\n * @returns varint as number, and bytes count occupied by varaint\n */\nfunction decodeUvarint(reader) {\n    if (reader.length < 1) {\n        throw new Error(\"Can't decode varint. EOF\");\n    }\n    if (reader[0] > 127) {\n        throw new Error(\"Decoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.Varint implementation from the Go standard library and write some tests.\");\n    }\n    return [reader[0], 1];\n}\n/**\n * Decodes a multisig pubkey to type object.\n * Pubkey structure [ prefix + const + threshold + loop:(const + pubkeyLength + pubkey            ) ]\n *                  [   4b   + 1b    +  varint   + loop:(1b    +    varint    + pubkeyLength bytes) ]\n * @param data encoded pubkey\n */\nfunction decodeMultisigPubkey(data) {\n    const reader = Array.from(data);\n    // remove multisig amino prefix;\n    const prefixFromReader = reader.splice(0, pubkeyAminoPrefixMultisigThreshold.length);\n    if (!(0, utils_1.arrayContentStartsWith)(prefixFromReader, pubkeyAminoPrefixMultisigThreshold)) {\n        throw new Error(\"Invalid multisig prefix.\");\n    }\n    // remove 0x08 threshold prefix;\n    if (reader.shift() != 0x08) {\n        throw new Error(\"Invalid multisig data. Expecting 0x08 prefix before threshold.\");\n    }\n    // read threshold\n    const [threshold, thresholdBytesLength] = decodeUvarint(reader);\n    reader.splice(0, thresholdBytesLength);\n    // read participants pubkeys\n    const pubkeys = [];\n    while (reader.length > 0) {\n        // remove 0x12 threshold prefix;\n        if (reader.shift() != 0x12) {\n            throw new Error(\"Invalid multisig data. Expecting 0x12 prefix before participant pubkey length.\");\n        }\n        // read pubkey length\n        const [pubkeyLength, pubkeyLengthBytesSize] = decodeUvarint(reader);\n        reader.splice(0, pubkeyLengthBytesSize);\n        // verify that we can read pubkey\n        if (reader.length < pubkeyLength) {\n            throw new Error(\"Invalid multisig data length.\");\n        }\n        // read and decode participant pubkey\n        const encodedPubkey = reader.splice(0, pubkeyLength);\n        const pubkey = decodeAminoPubkey(Uint8Array.from(encodedPubkey));\n        pubkeys.push(pubkey);\n    }\n    return {\n        type: pubkeys_1.pubkeyType.multisigThreshold,\n        value: {\n            threshold: threshold.toString(),\n            pubkeys: pubkeys,\n        },\n    };\n}\n/**\n * Uvarint encoder for Amino. This is the same encoding as `binary.PutUvarint` from the Go\n * standard library.\n *\n * @see https://github.com/tendermint/go-amino/blob/8e779b71f40d175/encoder.go#L77-L85\n */\nfunction encodeUvarint(value) {\n    const checked = math_1.Uint53.fromString(value.toString()).toNumber();\n    if (checked > 127) {\n        throw new Error(\"Encoding numbers > 127 is not supported here. Please tell those lazy CosmJS maintainers to port the binary.PutUvarint implementation from the Go standard library and write some tests.\");\n    }\n    return [checked];\n}\n/**\n * Encodes a public key to binary Amino.\n */\nfunction encodeAminoPubkey(pubkey) {\n    if ((0, pubkeys_1.isMultisigThresholdPubkey)(pubkey)) {\n        const out = Array.from(pubkeyAminoPrefixMultisigThreshold);\n        out.push(0x08); // TODO: What is this?\n        out.push(...encodeUvarint(pubkey.value.threshold));\n        for (const pubkeyData of pubkey.value.pubkeys.map((p) => encodeAminoPubkey(p))) {\n            out.push(0x12); // TODO: What is this?\n            out.push(...encodeUvarint(pubkeyData.length));\n            out.push(...pubkeyData);\n        }\n        return new Uint8Array(out);\n    }\n    else if ((0, pubkeys_1.isEd25519Pubkey)(pubkey)) {\n        return new Uint8Array([...pubkeyAminoPrefixEd25519, ...(0, encoding_1.fromBase64)(pubkey.value)]);\n    }\n    else if ((0, pubkeys_1.isSecp256k1Pubkey)(pubkey)) {\n        return new Uint8Array([...pubkeyAminoPrefixSecp256k1, ...(0, encoding_1.fromBase64)(pubkey.value)]);\n    }\n    else {\n        throw new Error(\"Unsupported pubkey type\");\n    }\n}\nexports.encodeAminoPubkey = encodeAminoPubkey;\n/**\n * Encodes a public key to binary Amino and then to bech32.\n *\n * @param pubkey the public key to encode\n * @param prefix the bech32 prefix (human readable part)\n */\nfunction encodeBech32Pubkey(pubkey, prefix) {\n    return (0, encoding_1.toBech32)(prefix, encodeAminoPubkey(pubkey));\n}\nexports.encodeBech32Pubkey = encodeBech32Pubkey;\n//# sourceMappingURL=encoding.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.executeKdf = exports.makeStdTx = exports.isStdTx = exports.serializeSignDoc = exports.makeSignDoc = exports.encodeSecp256k1Signature = exports.decodeSignature = exports.Secp256k1Wallet = exports.Secp256k1HdWallet = exports.extractKdfConfiguration = exports.pubkeyType = exports.isSinglePubkey = exports.isSecp256k1Pubkey = exports.isMultisigThresholdPubkey = exports.isEd25519Pubkey = exports.makeCosmoshubPath = exports.omitDefault = exports.createMultisigThresholdPubkey = exports.encodeSecp256k1Pubkey = exports.encodeEd25519Pubkey = exports.encodeBech32Pubkey = exports.encodeAminoPubkey = exports.decodeBech32Pubkey = exports.decodeAminoPubkey = exports.parseCoins = exports.coins = exports.coin = exports.addCoins = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;\nvar addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nObject.defineProperty(exports, \"pubkeyToAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToAddress; } }));\nObject.defineProperty(exports, \"pubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawEd25519PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawEd25519PubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawSecp256k1PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawSecp256k1PubkeyToRawAddress; } }));\nvar coins_1 = __webpack_require__(/*! ./coins */ \"(ssr)/./node_modules/@cosmjs/amino/build/coins.js\");\nObject.defineProperty(exports, \"addCoins\", ({ enumerable: true, get: function () { return coins_1.addCoins; } }));\nObject.defineProperty(exports, \"coin\", ({ enumerable: true, get: function () { return coins_1.coin; } }));\nObject.defineProperty(exports, \"coins\", ({ enumerable: true, get: function () { return coins_1.coins; } }));\nObject.defineProperty(exports, \"parseCoins\", ({ enumerable: true, get: function () { return coins_1.parseCoins; } }));\nvar encoding_1 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nObject.defineProperty(exports, \"decodeAminoPubkey\", ({ enumerable: true, get: function () { return encoding_1.decodeAminoPubkey; } }));\nObject.defineProperty(exports, \"decodeBech32Pubkey\", ({ enumerable: true, get: function () { return encoding_1.decodeBech32Pubkey; } }));\nObject.defineProperty(exports, \"encodeAminoPubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeAminoPubkey; } }));\nObject.defineProperty(exports, \"encodeBech32Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeBech32Pubkey; } }));\nObject.defineProperty(exports, \"encodeEd25519Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeEd25519Pubkey; } }));\nObject.defineProperty(exports, \"encodeSecp256k1Pubkey\", ({ enumerable: true, get: function () { return encoding_1.encodeSecp256k1Pubkey; } }));\nvar multisig_1 = __webpack_require__(/*! ./multisig */ \"(ssr)/./node_modules/@cosmjs/amino/build/multisig.js\");\nObject.defineProperty(exports, \"createMultisigThresholdPubkey\", ({ enumerable: true, get: function () { return multisig_1.createMultisigThresholdPubkey; } }));\nvar omitdefault_1 = __webpack_require__(/*! ./omitdefault */ \"(ssr)/./node_modules/@cosmjs/amino/build/omitdefault.js\");\nObject.defineProperty(exports, \"omitDefault\", ({ enumerable: true, get: function () { return omitdefault_1.omitDefault; } }));\nvar paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/amino/build/paths.js\");\nObject.defineProperty(exports, \"makeCosmoshubPath\", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));\nvar pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\nObject.defineProperty(exports, \"isEd25519Pubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isEd25519Pubkey; } }));\nObject.defineProperty(exports, \"isMultisigThresholdPubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isMultisigThresholdPubkey; } }));\nObject.defineProperty(exports, \"isSecp256k1Pubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isSecp256k1Pubkey; } }));\nObject.defineProperty(exports, \"isSinglePubkey\", ({ enumerable: true, get: function () { return pubkeys_1.isSinglePubkey; } }));\nObject.defineProperty(exports, \"pubkeyType\", ({ enumerable: true, get: function () { return pubkeys_1.pubkeyType; } }));\nvar secp256k1hdwallet_1 = __webpack_require__(/*! ./secp256k1hdwallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js\");\nObject.defineProperty(exports, \"extractKdfConfiguration\", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.extractKdfConfiguration; } }));\nObject.defineProperty(exports, \"Secp256k1HdWallet\", ({ enumerable: true, get: function () { return secp256k1hdwallet_1.Secp256k1HdWallet; } }));\nvar secp256k1wallet_1 = __webpack_require__(/*! ./secp256k1wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js\");\nObject.defineProperty(exports, \"Secp256k1Wallet\", ({ enumerable: true, get: function () { return secp256k1wallet_1.Secp256k1Wallet; } }));\nvar signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nObject.defineProperty(exports, \"decodeSignature\", ({ enumerable: true, get: function () { return signature_1.decodeSignature; } }));\nObject.defineProperty(exports, \"encodeSecp256k1Signature\", ({ enumerable: true, get: function () { return signature_1.encodeSecp256k1Signature; } }));\nvar signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\nObject.defineProperty(exports, \"makeSignDoc\", ({ enumerable: true, get: function () { return signdoc_1.makeSignDoc; } }));\nObject.defineProperty(exports, \"serializeSignDoc\", ({ enumerable: true, get: function () { return signdoc_1.serializeSignDoc; } }));\nvar stdtx_1 = __webpack_require__(/*! ./stdtx */ \"(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js\");\nObject.defineProperty(exports, \"isStdTx\", ({ enumerable: true, get: function () { return stdtx_1.isStdTx; } }));\nObject.defineProperty(exports, \"makeStdTx\", ({ enumerable: true, get: function () { return stdtx_1.makeStdTx; } }));\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\");\nObject.defineProperty(exports, \"executeKdf\", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/multisig.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/multisig.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createMultisigThresholdPubkey = exports.compareArrays = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\n/**\n * Compare arrays lexicographically.\n *\n * Returns value < 0 if `a < b`.\n * Returns value > 0 if `a > b`.\n * Returns 0 if `a === b`.\n */\nfunction compareArrays(a, b) {\n    const aHex = (0, encoding_1.toHex)(a);\n    const bHex = (0, encoding_1.toHex)(b);\n    return aHex === bHex ? 0 : aHex < bHex ? -1 : 1;\n}\nexports.compareArrays = compareArrays;\nfunction createMultisigThresholdPubkey(pubkeys, threshold, nosort = false) {\n    const uintThreshold = new math_1.Uint53(threshold);\n    if (uintThreshold.toNumber() > pubkeys.length) {\n        throw new Error(`Threshold k = ${uintThreshold.toNumber()} exceeds number of keys n = ${pubkeys.length}`);\n    }\n    const outPubkeys = nosort\n        ? pubkeys\n        : Array.from(pubkeys).sort((lhs, rhs) => {\n            // https://github.com/cosmos/cosmos-sdk/blob/v0.42.2/client/keys/add.go#L172-L174\n            const addressLhs = (0, addresses_1.pubkeyToRawAddress)(lhs);\n            const addressRhs = (0, addresses_1.pubkeyToRawAddress)(rhs);\n            return compareArrays(addressLhs, addressRhs);\n        });\n    return {\n        type: \"tendermint/PubKeyMultisigThreshold\",\n        value: {\n            threshold: uintThreshold.toString(),\n            pubkeys: outPubkeys,\n        },\n    };\n}\nexports.createMultisigThresholdPubkey = createMultisigThresholdPubkey;\n//# sourceMappingURL=multisig.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9tdWx0aXNpZy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsR0FBRyxxQkFBcUI7QUFDN0QsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBYztBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQywwRUFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLDBCQUEwQiw2QkFBNkIsZUFBZTtBQUMvRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9tdWx0aXNpZy5qcz8wOTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVNdWx0aXNpZ1RocmVzaG9sZFB1YmtleSA9IGV4cG9ydHMuY29tcGFyZUFycmF5cyA9IHZvaWQgMDtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbmNvbnN0IG1hdGhfMSA9IHJlcXVpcmUoXCJAY29zbWpzL21hdGhcIik7XG5jb25zdCBhZGRyZXNzZXNfMSA9IHJlcXVpcmUoXCIuL2FkZHJlc3Nlc1wiKTtcbi8qKlxuICogQ29tcGFyZSBhcnJheXMgbGV4aWNvZ3JhcGhpY2FsbHkuXG4gKlxuICogUmV0dXJucyB2YWx1ZSA8IDAgaWYgYGEgPCBiYC5cbiAqIFJldHVybnMgdmFsdWUgPiAwIGlmIGBhID4gYmAuXG4gKiBSZXR1cm5zIDAgaWYgYGEgPT09IGJgLlxuICovXG5mdW5jdGlvbiBjb21wYXJlQXJyYXlzKGEsIGIpIHtcbiAgICBjb25zdCBhSGV4ID0gKDAsIGVuY29kaW5nXzEudG9IZXgpKGEpO1xuICAgIGNvbnN0IGJIZXggPSAoMCwgZW5jb2RpbmdfMS50b0hleCkoYik7XG4gICAgcmV0dXJuIGFIZXggPT09IGJIZXggPyAwIDogYUhleCA8IGJIZXggPyAtMSA6IDE7XG59XG5leHBvcnRzLmNvbXBhcmVBcnJheXMgPSBjb21wYXJlQXJyYXlzO1xuZnVuY3Rpb24gY3JlYXRlTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkocHVia2V5cywgdGhyZXNob2xkLCBub3NvcnQgPSBmYWxzZSkge1xuICAgIGNvbnN0IHVpbnRUaHJlc2hvbGQgPSBuZXcgbWF0aF8xLlVpbnQ1Myh0aHJlc2hvbGQpO1xuICAgIGlmICh1aW50VGhyZXNob2xkLnRvTnVtYmVyKCkgPiBwdWJrZXlzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRocmVzaG9sZCBrID0gJHt1aW50VGhyZXNob2xkLnRvTnVtYmVyKCl9IGV4Y2VlZHMgbnVtYmVyIG9mIGtleXMgbiA9ICR7cHVia2V5cy5sZW5ndGh9YCk7XG4gICAgfVxuICAgIGNvbnN0IG91dFB1YmtleXMgPSBub3NvcnRcbiAgICAgICAgPyBwdWJrZXlzXG4gICAgICAgIDogQXJyYXkuZnJvbShwdWJrZXlzKS5zb3J0KChsaHMsIHJocykgPT4ge1xuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2Jsb2IvdjAuNDIuMi9jbGllbnQva2V5cy9hZGQuZ28jTDE3Mi1MMTc0XG4gICAgICAgICAgICBjb25zdCBhZGRyZXNzTGhzID0gKDAsIGFkZHJlc3Nlc18xLnB1YmtleVRvUmF3QWRkcmVzcykobGhzKTtcbiAgICAgICAgICAgIGNvbnN0IGFkZHJlc3NSaHMgPSAoMCwgYWRkcmVzc2VzXzEucHVia2V5VG9SYXdBZGRyZXNzKShyaHMpO1xuICAgICAgICAgICAgcmV0dXJuIGNvbXBhcmVBcnJheXMoYWRkcmVzc0xocywgYWRkcmVzc1Jocyk7XG4gICAgICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwidGVuZGVybWludC9QdWJLZXlNdWx0aXNpZ1RocmVzaG9sZFwiLFxuICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgdGhyZXNob2xkOiB1aW50VGhyZXNob2xkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICBwdWJrZXlzOiBvdXRQdWJrZXlzLFxuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZU11bHRpc2lnVGhyZXNob2xkUHVia2V5ID0gY3JlYXRlTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tdWx0aXNpZy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/multisig.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/omitdefault.js":
/*!*********************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/omitdefault.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.omitDefault = void 0;\n/**\n * Returns the given input. If the input is the default value\n * of protobuf, undefined is retunred. Use this when creating Amino JSON converters.\n */\nfunction omitDefault(input) {\n    switch (typeof input) {\n        case \"string\":\n            return input === \"\" ? undefined : input;\n        case \"number\":\n            return input === 0 ? undefined : input;\n        case \"bigint\":\n            return input === BigInt(0) ? undefined : input;\n        case \"boolean\":\n            return !input ? undefined : input;\n        default:\n            throw new Error(`Got unsupported type '${typeof input}'`);\n    }\n}\nexports.omitDefault = omitDefault;\n//# sourceMappingURL=omitdefault.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9vbWl0ZGVmYXVsdC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELGFBQWE7QUFDbEU7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9vbWl0ZGVmYXVsdC5qcz83NmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5vbWl0RGVmYXVsdCA9IHZvaWQgMDtcbi8qKlxuICogUmV0dXJucyB0aGUgZ2l2ZW4gaW5wdXQuIElmIHRoZSBpbnB1dCBpcyB0aGUgZGVmYXVsdCB2YWx1ZVxuICogb2YgcHJvdG9idWYsIHVuZGVmaW5lZCBpcyByZXR1bnJlZC4gVXNlIHRoaXMgd2hlbiBjcmVhdGluZyBBbWlubyBKU09OIGNvbnZlcnRlcnMuXG4gKi9cbmZ1bmN0aW9uIG9taXREZWZhdWx0KGlucHV0KSB7XG4gICAgc3dpdGNoICh0eXBlb2YgaW5wdXQpIHtcbiAgICAgICAgY2FzZSBcInN0cmluZ1wiOlxuICAgICAgICAgICAgcmV0dXJuIGlucHV0ID09PSBcIlwiID8gdW5kZWZpbmVkIDogaW5wdXQ7XG4gICAgICAgIGNhc2UgXCJudW1iZXJcIjpcbiAgICAgICAgICAgIHJldHVybiBpbnB1dCA9PT0gMCA/IHVuZGVmaW5lZCA6IGlucHV0O1xuICAgICAgICBjYXNlIFwiYmlnaW50XCI6XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQgPT09IEJpZ0ludCgwKSA/IHVuZGVmaW5lZCA6IGlucHV0O1xuICAgICAgICBjYXNlIFwiYm9vbGVhblwiOlxuICAgICAgICAgICAgcmV0dXJuICFpbnB1dCA/IHVuZGVmaW5lZCA6IGlucHV0O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBHb3QgdW5zdXBwb3J0ZWQgdHlwZSAnJHt0eXBlb2YgaW5wdXR9J2ApO1xuICAgIH1cbn1cbmV4cG9ydHMub21pdERlZmF1bHQgPSBvbWl0RGVmYXVsdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW9taXRkZWZhdWx0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/omitdefault.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/paths.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/paths.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeCosmoshubPath = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\n/**\n * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`\n * with 0-based account index `a`.\n */\nfunction makeCosmoshubPath(a) {\n    return [\n        crypto_1.Slip10RawIndex.hardened(44),\n        crypto_1.Slip10RawIndex.hardened(118),\n        crypto_1.Slip10RawIndex.hardened(0),\n        crypto_1.Slip10RawIndex.normal(0),\n        crypto_1.Slip10RawIndex.normal(a),\n    ];\n}\nexports.makeCosmoshubPath = makeCosmoshubPath;\n//# sourceMappingURL=paths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9wYXRocy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx5QkFBeUI7QUFDekIsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2FtaW5vL2J1aWxkL3BhdGhzLmpzPzRkYmIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1ha2VDb3Ntb3NodWJQYXRoID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG4vKipcbiAqIFRoZSBDb3Ntb3MgSHViIGRlcml2YXRpb24gcGF0aCBpbiB0aGUgZm9ybSBgbS80NCcvMTE4Jy8wJy8wL2FgXG4gKiB3aXRoIDAtYmFzZWQgYWNjb3VudCBpbmRleCBgYWAuXG4gKi9cbmZ1bmN0aW9uIG1ha2VDb3Ntb3NodWJQYXRoKGEpIHtcbiAgICByZXR1cm4gW1xuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5oYXJkZW5lZCg0NCksXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4LmhhcmRlbmVkKDExOCksXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4LmhhcmRlbmVkKDApLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5ub3JtYWwoMCksXG4gICAgICAgIGNyeXB0b18xLlNsaXAxMFJhd0luZGV4Lm5vcm1hbChhKSxcbiAgICBdO1xufVxuZXhwb3J0cy5tYWtlQ29zbW9zaHViUGF0aCA9IG1ha2VDb3Ntb3NodWJQYXRoO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGF0aHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/pubkeys.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMultisigThresholdPubkey = exports.isSinglePubkey = exports.pubkeyType = exports.isSecp256k1Pubkey = exports.isEd25519Pubkey = void 0;\nfunction isEd25519Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyEd25519\";\n}\nexports.isEd25519Pubkey = isEd25519Pubkey;\nfunction isSecp256k1Pubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeySecp256k1\";\n}\nexports.isSecp256k1Pubkey = isSecp256k1Pubkey;\nexports.pubkeyType = {\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/ed25519/ed25519.go#L22 */\n    secp256k1: \"tendermint/PubKeySecp256k1\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/secp256k1/secp256k1.go#L23 */\n    ed25519: \"tendermint/PubKeyEd25519\",\n    /** @see https://github.com/tendermint/tendermint/blob/v0.33.0/crypto/sr25519/codec.go#L12 */\n    sr25519: \"tendermint/PubKeySr25519\",\n    multisigThreshold: \"tendermint/PubKeyMultisigThreshold\",\n};\nfunction isSinglePubkey(pubkey) {\n    const singPubkeyTypes = [exports.pubkeyType.ed25519, exports.pubkeyType.secp256k1, exports.pubkeyType.sr25519];\n    return singPubkeyTypes.includes(pubkey.type);\n}\nexports.isSinglePubkey = isSinglePubkey;\nfunction isMultisigThresholdPubkey(pubkey) {\n    return pubkey.type === \"tendermint/PubKeyMultisigThreshold\";\n}\nexports.isMultisigThresholdPubkey = isMultisigThresholdPubkey;\n//# sourceMappingURL=pubkeys.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9wdWJrZXlzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQyxHQUFHLHNCQUFzQixHQUFHLGtCQUFrQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QjtBQUNySTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2FtaW5vL2J1aWxkL3B1YmtleXMuanM/NzA1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNNdWx0aXNpZ1RocmVzaG9sZFB1YmtleSA9IGV4cG9ydHMuaXNTaW5nbGVQdWJrZXkgPSBleHBvcnRzLnB1YmtleVR5cGUgPSBleHBvcnRzLmlzU2VjcDI1NmsxUHVia2V5ID0gZXhwb3J0cy5pc0VkMjU1MTlQdWJrZXkgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc0VkMjU1MTlQdWJrZXkocHVia2V5KSB7XG4gICAgcmV0dXJuIHB1YmtleS50eXBlID09PSBcInRlbmRlcm1pbnQvUHViS2V5RWQyNTUxOVwiO1xufVxuZXhwb3J0cy5pc0VkMjU1MTlQdWJrZXkgPSBpc0VkMjU1MTlQdWJrZXk7XG5mdW5jdGlvbiBpc1NlY3AyNTZrMVB1YmtleShwdWJrZXkpIHtcbiAgICByZXR1cm4gcHVia2V5LnR5cGUgPT09IFwidGVuZGVybWludC9QdWJLZXlTZWNwMjU2azFcIjtcbn1cbmV4cG9ydHMuaXNTZWNwMjU2azFQdWJrZXkgPSBpc1NlY3AyNTZrMVB1YmtleTtcbmV4cG9ydHMucHVia2V5VHlwZSA9IHtcbiAgICAvKiogQHNlZSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvdjAuMzMuMC9jcnlwdG8vZWQyNTUxOS9lZDI1NTE5LmdvI0wyMiAqL1xuICAgIHNlY3AyNTZrMTogXCJ0ZW5kZXJtaW50L1B1YktleVNlY3AyNTZrMVwiLFxuICAgIC8qKiBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi92MC4zMy4wL2NyeXB0by9zZWNwMjU2azEvc2VjcDI1NmsxLmdvI0wyMyAqL1xuICAgIGVkMjU1MTk6IFwidGVuZGVybWludC9QdWJLZXlFZDI1NTE5XCIsXG4gICAgLyoqIEBzZWUgaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL3YwLjMzLjAvY3J5cHRvL3NyMjU1MTkvY29kZWMuZ28jTDEyICovXG4gICAgc3IyNTUxOTogXCJ0ZW5kZXJtaW50L1B1YktleVNyMjU1MTlcIixcbiAgICBtdWx0aXNpZ1RocmVzaG9sZDogXCJ0ZW5kZXJtaW50L1B1YktleU11bHRpc2lnVGhyZXNob2xkXCIsXG59O1xuZnVuY3Rpb24gaXNTaW5nbGVQdWJrZXkocHVia2V5KSB7XG4gICAgY29uc3Qgc2luZ1B1YmtleVR5cGVzID0gW2V4cG9ydHMucHVia2V5VHlwZS5lZDI1NTE5LCBleHBvcnRzLnB1YmtleVR5cGUuc2VjcDI1NmsxLCBleHBvcnRzLnB1YmtleVR5cGUuc3IyNTUxOV07XG4gICAgcmV0dXJuIHNpbmdQdWJrZXlUeXBlcy5pbmNsdWRlcyhwdWJrZXkudHlwZSk7XG59XG5leHBvcnRzLmlzU2luZ2xlUHVia2V5ID0gaXNTaW5nbGVQdWJrZXk7XG5mdW5jdGlvbiBpc011bHRpc2lnVGhyZXNob2xkUHVia2V5KHB1YmtleSkge1xuICAgIHJldHVybiBwdWJrZXkudHlwZSA9PT0gXCJ0ZW5kZXJtaW50L1B1YktleU11bHRpc2lnVGhyZXNob2xkXCI7XG59XG5leHBvcnRzLmlzTXVsdGlzaWdUaHJlc2hvbGRQdWJrZXkgPSBpc011bHRpc2lnVGhyZXNob2xkUHVia2V5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cHVia2V5cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js":
/*!***************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1HdWallet = exports.extractKdfConfiguration = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nconst paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/amino/build/paths.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nconst signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\nconst wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\");\nconst serializationTypeV1 = \"secp256k1wallet-v1\";\n/**\n * A KDF configuration that is not very strong but can be used on the main thread.\n * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.\n */\nconst basicPasswordHashingOptions = {\n    algorithm: \"argon2id\",\n    params: {\n        outputLength: 32,\n        opsLimit: 24,\n        memLimitKib: 12 * 1024,\n    },\n};\nfunction isDerivationJson(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.hdPath !== \"string\")\n        return false;\n    if (typeof thing.prefix !== \"string\")\n        return false;\n    return true;\n}\nfunction extractKdfConfigurationV1(doc) {\n    return doc.kdf;\n}\nfunction extractKdfConfiguration(serialization) {\n    const root = JSON.parse(serialization);\n    if (!(0, utils_1.isNonNullObject)(root))\n        throw new Error(\"Root document is not an object.\");\n    switch (root.type) {\n        case serializationTypeV1:\n            return extractKdfConfigurationV1(root);\n        default:\n            throw new Error(\"Unsupported serialization type\");\n    }\n}\nexports.extractKdfConfiguration = extractKdfConfiguration;\nconst defaultOptions = {\n    bip39Password: \"\",\n    hdPaths: [(0, paths_1.makeCosmoshubPath)(0)],\n    prefix: \"cosmos\",\n};\nclass Secp256k1HdWallet {\n    /**\n     * Restores a wallet from the given BIP39 mnemonic.\n     *\n     * @param mnemonic Any valid English mnemonic.\n     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async fromMnemonic(mnemonic, options = {}) {\n        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);\n        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);\n        return new Secp256k1HdWallet(mnemonicChecked, {\n            ...options,\n            seed: seed,\n        });\n    }\n    /**\n     * Generates a new wallet with a BIP39 mnemonic of the given length.\n     *\n     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).\n     * @param options An optional `Secp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async generate(length = 12, options = {}) {\n        const entropyLength = 4 * Math.floor((11 * length) / 33);\n        const entropy = crypto_1.Random.getBytes(entropyLength);\n        const mnemonic = crypto_1.Bip39.encode(entropy);\n        return Secp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    static async deserialize(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        switch (root.type) {\n            case serializationTypeV1:\n                return Secp256k1HdWallet.deserializeTypeV1(serialization, password);\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows\n     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be\n     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.\n     */\n    static async deserializeWithEncryptionKey(serialization, encryptionKey) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const untypedRoot = root;\n        switch (untypedRoot.type) {\n            case serializationTypeV1: {\n                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);\n                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));\n                const { mnemonic, accounts } = decryptedDocument;\n                (0, utils_1.assert)(typeof mnemonic === \"string\");\n                if (!Array.isArray(accounts))\n                    throw new Error(\"Property 'accounts' is not an array\");\n                if (!accounts.every((account) => isDerivationJson(account))) {\n                    throw new Error(\"Account is not in the correct format.\");\n                }\n                const firstPrefix = accounts[0].prefix;\n                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {\n                    throw new Error(\"Accounts do not all have the same prefix\");\n                }\n                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));\n                return Secp256k1HdWallet.fromMnemonic(mnemonic, {\n                    hdPaths: hdPaths,\n                    prefix: firstPrefix,\n                });\n            }\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    static async deserializeTypeV1(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);\n        return Secp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);\n    }\n    constructor(mnemonic, options) {\n        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;\n        const prefix = options.prefix ?? defaultOptions.prefix;\n        this.secret = mnemonic;\n        this.seed = options.seed;\n        this.accounts = hdPaths.map((hdPath) => ({\n            hdPath: hdPath,\n            prefix,\n        }));\n    }\n    get mnemonic() {\n        return this.secret.toString();\n    }\n    async getAccounts() {\n        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();\n        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({\n            algo: algo,\n            pubkey: pubkey,\n            address: address,\n        }));\n    }\n    async signAmino(signerAddress, signDoc) {\n        const accounts = await this.getAccountsWithPrivkeys();\n        const account = accounts.find(({ address }) => address === signerAddress);\n        if (account === undefined) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const { privkey, pubkey } = account;\n        const message = (0, crypto_1.sha256)((0, signdoc_1.serializeSignDoc)(signDoc));\n        const signature = await crypto_1.Secp256k1.createSignature(message, privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        return {\n            signed: signDoc,\n            signature: (0, signature_1.encodeSecp256k1Signature)(pubkey, signatureBytes),\n        };\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    async serialize(password) {\n        const kdfConfiguration = basicPasswordHashingOptions;\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);\n        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to\n     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF options. If this\n     * is not the case, the wallet cannot be restored with the original password.\n     */\n    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {\n        const dataToEncrypt = {\n            mnemonic: this.mnemonic,\n            accounts: this.accounts.map(({ hdPath, prefix }) => ({\n                hdPath: (0, crypto_1.pathToString)(hdPath),\n                prefix: prefix,\n            })),\n        };\n        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));\n        const encryptionConfiguration = {\n            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,\n        };\n        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);\n        const out = {\n            type: serializationTypeV1,\n            kdf: kdfConfiguration,\n            encryption: encryptionConfiguration,\n            data: (0, encoding_1.toBase64)(encryptedData),\n        };\n        return JSON.stringify(out);\n    }\n    async getKeyPair(hdPath) {\n        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);\n        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);\n        return {\n            privkey: privkey,\n            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),\n        };\n    }\n    async getAccountsWithPrivkeys() {\n        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {\n            const { privkey, pubkey } = await this.getKeyPair(hdPath);\n            const address = (0, encoding_1.toBech32)(prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(pubkey));\n            return {\n                algo: \"secp256k1\",\n                privkey: privkey,\n                pubkey: pubkey,\n                address: address,\n            };\n        }));\n    }\n}\nexports.Secp256k1HdWallet = Secp256k1HdWallet;\n//# sourceMappingURL=secp256k1hdwallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/secp256k1hdwallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/secp256k1wallet.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1Wallet = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/amino/build/addresses.js\");\nconst signature_1 = __webpack_require__(/*! ./signature */ \"(ssr)/./node_modules/@cosmjs/amino/build/signature.js\");\nconst signdoc_1 = __webpack_require__(/*! ./signdoc */ \"(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\");\n/**\n * A wallet that holds a single secp256k1 keypair.\n *\n * If you want to work with BIP39 mnemonics and multiple accounts, use Secp256k1HdWallet.\n */\nclass Secp256k1Wallet {\n    /**\n     * Creates a Secp256k1Wallet from the given private key\n     *\n     * @param privkey The private key.\n     * @param prefix The bech32 address prefix (human readable part). Defaults to \"cosmos\".\n     */\n    static async fromKey(privkey, prefix = \"cosmos\") {\n        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;\n        return new Secp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);\n    }\n    constructor(privkey, pubkey, prefix) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n        this.prefix = prefix;\n    }\n    get address() {\n        return (0, encoding_1.toBech32)(this.prefix, (0, addresses_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));\n    }\n    async getAccounts() {\n        return [\n            {\n                algo: \"secp256k1\",\n                address: this.address,\n                pubkey: this.pubkey,\n            },\n        ];\n    }\n    async signAmino(signerAddress, signDoc) {\n        if (signerAddress !== this.address) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const message = new crypto_1.Sha256((0, signdoc_1.serializeSignDoc)(signDoc)).digest();\n        const signature = await crypto_1.Secp256k1.createSignature(message, this.privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        return {\n            signed: signDoc,\n            signature: (0, signature_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes),\n        };\n    }\n}\nexports.Secp256k1Wallet = Secp256k1Wallet;\n//# sourceMappingURL=secp256k1wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zZWNwMjU2azF3YWxsZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFnQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDN0Msb0JBQW9CLG1CQUFPLENBQUMsMEVBQWE7QUFDekMsb0JBQW9CLG1CQUFPLENBQUMsMEVBQWE7QUFDekMsa0JBQWtCLG1CQUFPLENBQUMsc0VBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGVBQWU7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvc2VjcDI1Nmsxd2FsbGV0LmpzP2M1M2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlNlY3AyNTZrMVdhbGxldCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgYWRkcmVzc2VzXzEgPSByZXF1aXJlKFwiLi9hZGRyZXNzZXNcIik7XG5jb25zdCBzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL3NpZ25hdHVyZVwiKTtcbmNvbnN0IHNpZ25kb2NfMSA9IHJlcXVpcmUoXCIuL3NpZ25kb2NcIik7XG4vKipcbiAqIEEgd2FsbGV0IHRoYXQgaG9sZHMgYSBzaW5nbGUgc2VjcDI1NmsxIGtleXBhaXIuXG4gKlxuICogSWYgeW91IHdhbnQgdG8gd29yayB3aXRoIEJJUDM5IG1uZW1vbmljcyBhbmQgbXVsdGlwbGUgYWNjb3VudHMsIHVzZSBTZWNwMjU2azFIZFdhbGxldC5cbiAqL1xuY2xhc3MgU2VjcDI1NmsxV2FsbGV0IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgU2VjcDI1NmsxV2FsbGV0IGZyb20gdGhlIGdpdmVuIHByaXZhdGUga2V5XG4gICAgICpcbiAgICAgKiBAcGFyYW0gcHJpdmtleSBUaGUgcHJpdmF0ZSBrZXkuXG4gICAgICogQHBhcmFtIHByZWZpeCBUaGUgYmVjaDMyIGFkZHJlc3MgcHJlZml4IChodW1hbiByZWFkYWJsZSBwYXJ0KS4gRGVmYXVsdHMgdG8gXCJjb3Ntb3NcIi5cbiAgICAgKi9cbiAgICBzdGF0aWMgYXN5bmMgZnJvbUtleShwcml2a2V5LCBwcmVmaXggPSBcImNvc21vc1wiKSB7XG4gICAgICAgIGNvbnN0IHVuY29tcHJlc3NlZCA9IChhd2FpdCBjcnlwdG9fMS5TZWNwMjU2azEubWFrZUtleXBhaXIocHJpdmtleSkpLnB1YmtleTtcbiAgICAgICAgcmV0dXJuIG5ldyBTZWNwMjU2azFXYWxsZXQocHJpdmtleSwgY3J5cHRvXzEuU2VjcDI1NmsxLmNvbXByZXNzUHVia2V5KHVuY29tcHJlc3NlZCksIHByZWZpeCk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHByaXZrZXksIHB1YmtleSwgcHJlZml4KSB7XG4gICAgICAgIHRoaXMucHJpdmtleSA9IHByaXZrZXk7XG4gICAgICAgIHRoaXMucHVia2V5ID0gcHVia2V5O1xuICAgICAgICB0aGlzLnByZWZpeCA9IHByZWZpeDtcbiAgICB9XG4gICAgZ2V0IGFkZHJlc3MoKSB7XG4gICAgICAgIHJldHVybiAoMCwgZW5jb2RpbmdfMS50b0JlY2gzMikodGhpcy5wcmVmaXgsICgwLCBhZGRyZXNzZXNfMS5yYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MpKHRoaXMucHVia2V5KSk7XG4gICAgfVxuICAgIGFzeW5jIGdldEFjY291bnRzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFsZ286IFwic2VjcDI1NmsxXCIsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIHB1YmtleTogdGhpcy5wdWJrZXksXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xuICAgIH1cbiAgICBhc3luYyBzaWduQW1pbm8oc2lnbmVyQWRkcmVzcywgc2lnbkRvYykge1xuICAgICAgICBpZiAoc2lnbmVyQWRkcmVzcyAhPT0gdGhpcy5hZGRyZXNzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFkZHJlc3MgJHtzaWduZXJBZGRyZXNzfSBub3QgZm91bmQgaW4gd2FsbGV0YCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IG5ldyBjcnlwdG9fMS5TaGEyNTYoKDAsIHNpZ25kb2NfMS5zZXJpYWxpemVTaWduRG9jKShzaWduRG9jKSkuZGlnZXN0KCk7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZSA9IGF3YWl0IGNyeXB0b18xLlNlY3AyNTZrMS5jcmVhdGVTaWduYXR1cmUobWVzc2FnZSwgdGhpcy5wcml2a2V5KTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlQnl0ZXMgPSBuZXcgVWludDhBcnJheShbLi4uc2lnbmF0dXJlLnIoMzIpLCAuLi5zaWduYXR1cmUucygzMildKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNpZ25lZDogc2lnbkRvYyxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogKDAsIHNpZ25hdHVyZV8xLmVuY29kZVNlY3AyNTZrMVNpZ25hdHVyZSkodGhpcy5wdWJrZXksIHNpZ25hdHVyZUJ5dGVzKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLlNlY3AyNTZrMVdhbGxldCA9IFNlY3AyNTZrMVdhbGxldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlY3AyNTZrMXdhbGxldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/secp256k1wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/signature.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signature.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeSignature = exports.encodeSecp256k1Signature = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst encoding_2 = __webpack_require__(/*! ./encoding */ \"(ssr)/./node_modules/@cosmjs/amino/build/encoding.js\");\nconst pubkeys_1 = __webpack_require__(/*! ./pubkeys */ \"(ssr)/./node_modules/@cosmjs/amino/build/pubkeys.js\");\n/**\n * Takes a binary pubkey and signature to create a signature object\n *\n * @param pubkey a compressed secp256k1 public key\n * @param signature a 64 byte fixed length representation of secp256k1 signature components r and s\n */\nfunction encodeSecp256k1Signature(pubkey, signature) {\n    if (signature.length !== 64) {\n        throw new Error(\"Signature must be 64 bytes long. Cosmos SDK uses a 2x32 byte fixed length encoding for the secp256k1 signature integers r and s.\");\n    }\n    return {\n        pub_key: (0, encoding_2.encodeSecp256k1Pubkey)(pubkey),\n        signature: (0, encoding_1.toBase64)(signature),\n    };\n}\nexports.encodeSecp256k1Signature = encodeSecp256k1Signature;\nfunction decodeSignature(signature) {\n    switch (signature.pub_key.type) {\n        // Note: please don't add cases here without writing additional unit tests\n        case pubkeys_1.pubkeyType.secp256k1:\n            return {\n                pubkey: (0, encoding_1.fromBase64)(signature.pub_key.value),\n                signature: (0, encoding_1.fromBase64)(signature.signature),\n            };\n        default:\n            throw new Error(\"Unsupported pubkey type\");\n    }\n}\nexports.decodeSignature = decodeSignature;\n//# sourceMappingURL=signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsZ0NBQWdDO0FBQzFEO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLG1CQUFtQixtQkFBTyxDQUFDLHdFQUFZO0FBQ3ZDLGtCQUFrQixtQkFBTyxDQUFDLHNFQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvc2lnbmF0dXJlLmpzPzc4MTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZVNpZ25hdHVyZSA9IGV4cG9ydHMuZW5jb2RlU2VjcDI1NmsxU2lnbmF0dXJlID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBlbmNvZGluZ18yID0gcmVxdWlyZShcIi4vZW5jb2RpbmdcIik7XG5jb25zdCBwdWJrZXlzXzEgPSByZXF1aXJlKFwiLi9wdWJrZXlzXCIpO1xuLyoqXG4gKiBUYWtlcyBhIGJpbmFyeSBwdWJrZXkgYW5kIHNpZ25hdHVyZSB0byBjcmVhdGUgYSBzaWduYXR1cmUgb2JqZWN0XG4gKlxuICogQHBhcmFtIHB1YmtleSBhIGNvbXByZXNzZWQgc2VjcDI1NmsxIHB1YmxpYyBrZXlcbiAqIEBwYXJhbSBzaWduYXR1cmUgYSA2NCBieXRlIGZpeGVkIGxlbmd0aCByZXByZXNlbnRhdGlvbiBvZiBzZWNwMjU2azEgc2lnbmF0dXJlIGNvbXBvbmVudHMgciBhbmQgc1xuICovXG5mdW5jdGlvbiBlbmNvZGVTZWNwMjU2azFTaWduYXR1cmUocHVia2V5LCBzaWduYXR1cmUpIHtcbiAgICBpZiAoc2lnbmF0dXJlLmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiU2lnbmF0dXJlIG11c3QgYmUgNjQgYnl0ZXMgbG9uZy4gQ29zbW9zIFNESyB1c2VzIGEgMngzMiBieXRlIGZpeGVkIGxlbmd0aCBlbmNvZGluZyBmb3IgdGhlIHNlY3AyNTZrMSBzaWduYXR1cmUgaW50ZWdlcnMgciBhbmQgcy5cIik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHB1Yl9rZXk6ICgwLCBlbmNvZGluZ18yLmVuY29kZVNlY3AyNTZrMVB1YmtleSkocHVia2V5KSxcbiAgICAgICAgc2lnbmF0dXJlOiAoMCwgZW5jb2RpbmdfMS50b0Jhc2U2NCkoc2lnbmF0dXJlKSxcbiAgICB9O1xufVxuZXhwb3J0cy5lbmNvZGVTZWNwMjU2azFTaWduYXR1cmUgPSBlbmNvZGVTZWNwMjU2azFTaWduYXR1cmU7XG5mdW5jdGlvbiBkZWNvZGVTaWduYXR1cmUoc2lnbmF0dXJlKSB7XG4gICAgc3dpdGNoIChzaWduYXR1cmUucHViX2tleS50eXBlKSB7XG4gICAgICAgIC8vIE5vdGU6IHBsZWFzZSBkb24ndCBhZGQgY2FzZXMgaGVyZSB3aXRob3V0IHdyaXRpbmcgYWRkaXRpb25hbCB1bml0IHRlc3RzXG4gICAgICAgIGNhc2UgcHVia2V5c18xLnB1YmtleVR5cGUuc2VjcDI1NmsxOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBwdWJrZXk6ICgwLCBlbmNvZGluZ18xLmZyb21CYXNlNjQpKHNpZ25hdHVyZS5wdWJfa2V5LnZhbHVlKSxcbiAgICAgICAgICAgICAgICBzaWduYXR1cmU6ICgwLCBlbmNvZGluZ18xLmZyb21CYXNlNjQpKHNpZ25hdHVyZS5zaWduYXR1cmUpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHB1YmtleSB0eXBlXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVjb2RlU2lnbmF0dXJlID0gZGVjb2RlU2lnbmF0dXJlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/signdoc.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.serializeSignDoc = exports.escapeCharacters = exports.makeSignDoc = exports.sortedJsonStringify = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nfunction sortedObject(obj) {\n    if (typeof obj !== \"object\" || obj === null) {\n        return obj;\n    }\n    if (Array.isArray(obj)) {\n        return obj.map(sortedObject);\n    }\n    const sortedKeys = Object.keys(obj).sort();\n    const result = {};\n    // NOTE: Use forEach instead of reduce for performance with large objects eg Wasm code\n    sortedKeys.forEach((key) => {\n        result[key] = sortedObject(obj[key]);\n    });\n    return result;\n}\n/** Returns a JSON string with objects sorted by key */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction sortedJsonStringify(obj) {\n    return JSON.stringify(sortedObject(obj));\n}\nexports.sortedJsonStringify = sortedJsonStringify;\nfunction makeSignDoc(msgs, fee, chainId, memo, accountNumber, sequence, timeout_height) {\n    return {\n        chain_id: chainId,\n        account_number: math_1.Uint53.fromString(accountNumber.toString()).toString(),\n        sequence: math_1.Uint53.fromString(sequence.toString()).toString(),\n        fee: fee,\n        msgs: msgs,\n        memo: memo || \"\",\n        ...(timeout_height && { timeout_height: timeout_height.toString() }),\n    };\n}\nexports.makeSignDoc = makeSignDoc;\n/**\n * Takes a valid JSON document and performs the following escapings in string values:\n *\n * `&` -> `\\u0026`\n * `<` -> `\\u003c`\n * `>` -> `\\u003e`\n *\n * Since those characters do not occur in other places of the JSON document, only\n * string values are affected.\n *\n * If the input is invalid JSON, the behaviour is undefined.\n */\nfunction escapeCharacters(input) {\n    // When we migrate to target es2021 or above, we can use replaceAll instead of global patterns.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll\n    const amp = /&/g;\n    const lt = /</g;\n    const gt = />/g;\n    return input.replace(amp, \"\\\\u0026\").replace(lt, \"\\\\u003c\").replace(gt, \"\\\\u003e\");\n}\nexports.escapeCharacters = escapeCharacters;\nfunction serializeSignDoc(signDoc) {\n    const serialized = escapeCharacters(sortedJsonStringify(signDoc));\n    return (0, encoding_1.toUtf8)(serialized);\n}\nexports.serializeSignDoc = serializeSignDoc;\n//# sourceMappingURL=signdoc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduZG9jLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QixHQUFHLHdCQUF3QixHQUFHLG1CQUFtQixHQUFHLDJCQUEyQjtBQUN2RztBQUNBLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMkNBQTJDO0FBQzNFO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zaWduZG9jLmpzPzEyMjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNlcmlhbGl6ZVNpZ25Eb2MgPSBleHBvcnRzLmVzY2FwZUNoYXJhY3RlcnMgPSBleHBvcnRzLm1ha2VTaWduRG9jID0gZXhwb3J0cy5zb3J0ZWRKc29uU3RyaW5naWZ5ID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuZnVuY3Rpb24gc29ydGVkT2JqZWN0KG9iaikge1xuICAgIGlmICh0eXBlb2Ygb2JqICE9PSBcIm9iamVjdFwiIHx8IG9iaiA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH1cbiAgICBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XG4gICAgICAgIHJldHVybiBvYmoubWFwKHNvcnRlZE9iamVjdCk7XG4gICAgfVxuICAgIGNvbnN0IHNvcnRlZEtleXMgPSBPYmplY3Qua2V5cyhvYmopLnNvcnQoKTtcbiAgICBjb25zdCByZXN1bHQgPSB7fTtcbiAgICAvLyBOT1RFOiBVc2UgZm9yRWFjaCBpbnN0ZWFkIG9mIHJlZHVjZSBmb3IgcGVyZm9ybWFuY2Ugd2l0aCBsYXJnZSBvYmplY3RzIGVnIFdhc20gY29kZVxuICAgIHNvcnRlZEtleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgIHJlc3VsdFtrZXldID0gc29ydGVkT2JqZWN0KG9ialtrZXldKTtcbiAgICB9KTtcbiAgICByZXR1cm4gcmVzdWx0O1xufVxuLyoqIFJldHVybnMgYSBKU09OIHN0cmluZyB3aXRoIG9iamVjdHMgc29ydGVkIGJ5IGtleSAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbmZ1bmN0aW9uIHNvcnRlZEpzb25TdHJpbmdpZnkob2JqKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHNvcnRlZE9iamVjdChvYmopKTtcbn1cbmV4cG9ydHMuc29ydGVkSnNvblN0cmluZ2lmeSA9IHNvcnRlZEpzb25TdHJpbmdpZnk7XG5mdW5jdGlvbiBtYWtlU2lnbkRvYyhtc2dzLCBmZWUsIGNoYWluSWQsIG1lbW8sIGFjY291bnROdW1iZXIsIHNlcXVlbmNlLCB0aW1lb3V0X2hlaWdodCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGNoYWluX2lkOiBjaGFpbklkLFxuICAgICAgICBhY2NvdW50X251bWJlcjogbWF0aF8xLlVpbnQ1My5mcm9tU3RyaW5nKGFjY291bnROdW1iZXIudG9TdHJpbmcoKSkudG9TdHJpbmcoKSxcbiAgICAgICAgc2VxdWVuY2U6IG1hdGhfMS5VaW50NTMuZnJvbVN0cmluZyhzZXF1ZW5jZS50b1N0cmluZygpKS50b1N0cmluZygpLFxuICAgICAgICBmZWU6IGZlZSxcbiAgICAgICAgbXNnczogbXNncyxcbiAgICAgICAgbWVtbzogbWVtbyB8fCBcIlwiLFxuICAgICAgICAuLi4odGltZW91dF9oZWlnaHQgJiYgeyB0aW1lb3V0X2hlaWdodDogdGltZW91dF9oZWlnaHQudG9TdHJpbmcoKSB9KSxcbiAgICB9O1xufVxuZXhwb3J0cy5tYWtlU2lnbkRvYyA9IG1ha2VTaWduRG9jO1xuLyoqXG4gKiBUYWtlcyBhIHZhbGlkIEpTT04gZG9jdW1lbnQgYW5kIHBlcmZvcm1zIHRoZSBmb2xsb3dpbmcgZXNjYXBpbmdzIGluIHN0cmluZyB2YWx1ZXM6XG4gKlxuICogYCZgIC0+IGBcXHUwMDI2YFxuICogYDxgIC0+IGBcXHUwMDNjYFxuICogYD5gIC0+IGBcXHUwMDNlYFxuICpcbiAqIFNpbmNlIHRob3NlIGNoYXJhY3RlcnMgZG8gbm90IG9jY3VyIGluIG90aGVyIHBsYWNlcyBvZiB0aGUgSlNPTiBkb2N1bWVudCwgb25seVxuICogc3RyaW5nIHZhbHVlcyBhcmUgYWZmZWN0ZWQuXG4gKlxuICogSWYgdGhlIGlucHV0IGlzIGludmFsaWQgSlNPTiwgdGhlIGJlaGF2aW91ciBpcyB1bmRlZmluZWQuXG4gKi9cbmZ1bmN0aW9uIGVzY2FwZUNoYXJhY3RlcnMoaW5wdXQpIHtcbiAgICAvLyBXaGVuIHdlIG1pZ3JhdGUgdG8gdGFyZ2V0IGVzMjAyMSBvciBhYm92ZSwgd2UgY2FuIHVzZSByZXBsYWNlQWxsIGluc3RlYWQgb2YgZ2xvYmFsIHBhdHRlcm5zLlxuICAgIC8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL1N0cmluZy9yZXBsYWNlQWxsXG4gICAgY29uc3QgYW1wID0gLyYvZztcbiAgICBjb25zdCBsdCA9IC88L2c7XG4gICAgY29uc3QgZ3QgPSAvPi9nO1xuICAgIHJldHVybiBpbnB1dC5yZXBsYWNlKGFtcCwgXCJcXFxcdTAwMjZcIikucmVwbGFjZShsdCwgXCJcXFxcdTAwM2NcIikucmVwbGFjZShndCwgXCJcXFxcdTAwM2VcIik7XG59XG5leHBvcnRzLmVzY2FwZUNoYXJhY3RlcnMgPSBlc2NhcGVDaGFyYWN0ZXJzO1xuZnVuY3Rpb24gc2VyaWFsaXplU2lnbkRvYyhzaWduRG9jKSB7XG4gICAgY29uc3Qgc2VyaWFsaXplZCA9IGVzY2FwZUNoYXJhY3RlcnMoc29ydGVkSnNvblN0cmluZ2lmeShzaWduRG9jKSk7XG4gICAgcmV0dXJuICgwLCBlbmNvZGluZ18xLnRvVXRmOCkoc2VyaWFsaXplZCk7XG59XG5leHBvcnRzLnNlcmlhbGl6ZVNpZ25Eb2MgPSBzZXJpYWxpemVTaWduRG9jO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmRvYy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/signdoc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/stdtx.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeStdTx = exports.isStdTx = void 0;\nfunction isStdTx(txValue) {\n    const { memo, msg, fee, signatures } = txValue;\n    return (typeof memo === \"string\" && Array.isArray(msg) && typeof fee === \"object\" && Array.isArray(signatures));\n}\nexports.isStdTx = isStdTx;\nfunction makeStdTx(content, signatures) {\n    return {\n        msg: content.msgs,\n        fee: content.fee,\n        memo: content.memo,\n        signatures: Array.isArray(signatures) ? signatures : [signatures],\n    };\n}\nexports.makeStdTx = makeStdTx;\n//# sourceMappingURL=stdtx.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC9zdGR0eC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlO0FBQ25DO0FBQ0EsWUFBWSw2QkFBNkI7QUFDekM7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2FtaW5vL2J1aWxkL3N0ZHR4LmpzPzhlOTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1ha2VTdGRUeCA9IGV4cG9ydHMuaXNTdGRUeCA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzU3RkVHgodHhWYWx1ZSkge1xuICAgIGNvbnN0IHsgbWVtbywgbXNnLCBmZWUsIHNpZ25hdHVyZXMgfSA9IHR4VmFsdWU7XG4gICAgcmV0dXJuICh0eXBlb2YgbWVtbyA9PT0gXCJzdHJpbmdcIiAmJiBBcnJheS5pc0FycmF5KG1zZykgJiYgdHlwZW9mIGZlZSA9PT0gXCJvYmplY3RcIiAmJiBBcnJheS5pc0FycmF5KHNpZ25hdHVyZXMpKTtcbn1cbmV4cG9ydHMuaXNTdGRUeCA9IGlzU3RkVHg7XG5mdW5jdGlvbiBtYWtlU3RkVHgoY29udGVudCwgc2lnbmF0dXJlcykge1xuICAgIHJldHVybiB7XG4gICAgICAgIG1zZzogY29udGVudC5tc2dzLFxuICAgICAgICBmZWU6IGNvbnRlbnQuZmVlLFxuICAgICAgICBtZW1vOiBjb250ZW50Lm1lbW8sXG4gICAgICAgIHNpZ25hdHVyZXM6IEFycmF5LmlzQXJyYXkoc2lnbmF0dXJlcykgPyBzaWduYXR1cmVzIDogW3NpZ25hdHVyZXNdLFxuICAgIH07XG59XG5leHBvcnRzLm1ha2VTdGRUeCA9IG1ha2VTdGRUeDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN0ZHR4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/stdtx.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/amino/build/wallet.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/amino/build/wallet.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A fixed salt is chosen to archive a deterministic password to key derivation.\n * This reduces the scope of a potential rainbow attack to all CosmJS users.\n * Must be 16 bytes due to implementation limitations.\n */\nexports.cosmjsSalt = (0, encoding_1.toAscii)(\"The CosmJS salt.\");\nasync function executeKdf(password, configuration) {\n    switch (configuration.algorithm) {\n        case \"argon2id\": {\n            const options = configuration.params;\n            if (!(0, crypto_1.isArgon2idOptions)(options))\n                throw new Error(\"Invalid format of argon2id params\");\n            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);\n        }\n        default:\n            throw new Error(\"Unsupported KDF algorithm\");\n    }\n}\nexports.executeKdf = executeKdf;\nexports.supportedAlgorithms = {\n    xchacha20poly1305Ietf: \"xchacha20poly1305-ietf\",\n};\nasync function encrypt(plaintext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);\n            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api\n            return new Uint8Array([\n                ...nonce,\n                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),\n            ]);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.encrypt = encrypt;\nasync function decrypt(ciphertext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);\n            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9hbWluby9idWlsZC93YWxsZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGVBQWUsR0FBRywyQkFBMkIsR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0I7QUFDekcsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsaUJBQWlCO0FBQ25GO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrRUFBa0UsaUJBQWlCO0FBQ25GO0FBQ0E7QUFDQSxlQUFlO0FBQ2YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvYW1pbm8vYnVpbGQvd2FsbGV0LmpzP2ZiNDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY3J5cHQgPSBleHBvcnRzLmVuY3J5cHQgPSBleHBvcnRzLnN1cHBvcnRlZEFsZ29yaXRobXMgPSBleHBvcnRzLmV4ZWN1dGVLZGYgPSBleHBvcnRzLmNvc21qc1NhbHQgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2NyeXB0b1wiKTtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbi8qKlxuICogQSBmaXhlZCBzYWx0IGlzIGNob3NlbiB0byBhcmNoaXZlIGEgZGV0ZXJtaW5pc3RpYyBwYXNzd29yZCB0byBrZXkgZGVyaXZhdGlvbi5cbiAqIFRoaXMgcmVkdWNlcyB0aGUgc2NvcGUgb2YgYSBwb3RlbnRpYWwgcmFpbmJvdyBhdHRhY2sgdG8gYWxsIENvc21KUyB1c2Vycy5cbiAqIE11c3QgYmUgMTYgYnl0ZXMgZHVlIHRvIGltcGxlbWVudGF0aW9uIGxpbWl0YXRpb25zLlxuICovXG5leHBvcnRzLmNvc21qc1NhbHQgPSAoMCwgZW5jb2RpbmdfMS50b0FzY2lpKShcIlRoZSBDb3NtSlMgc2FsdC5cIik7XG5hc3luYyBmdW5jdGlvbiBleGVjdXRlS2RmKHBhc3N3b3JkLCBjb25maWd1cmF0aW9uKSB7XG4gICAgc3dpdGNoIChjb25maWd1cmF0aW9uLmFsZ29yaXRobSkge1xuICAgICAgICBjYXNlIFwiYXJnb24yaWRcIjoge1xuICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IGNvbmZpZ3VyYXRpb24ucGFyYW1zO1xuICAgICAgICAgICAgaWYgKCEoMCwgY3J5cHRvXzEuaXNBcmdvbjJpZE9wdGlvbnMpKG9wdGlvbnMpKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZm9ybWF0IG9mIGFyZ29uMmlkIHBhcmFtc1wiKTtcbiAgICAgICAgICAgIHJldHVybiBjcnlwdG9fMS5BcmdvbjJpZC5leGVjdXRlKHBhc3N3b3JkLCBleHBvcnRzLmNvc21qc1NhbHQsIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCBLREYgYWxnb3JpdGhtXCIpO1xuICAgIH1cbn1cbmV4cG9ydHMuZXhlY3V0ZUtkZiA9IGV4ZWN1dGVLZGY7XG5leHBvcnRzLnN1cHBvcnRlZEFsZ29yaXRobXMgPSB7XG4gICAgeGNoYWNoYTIwcG9seTEzMDVJZXRmOiBcInhjaGFjaGEyMHBvbHkxMzA1LWlldGZcIixcbn07XG5hc3luYyBmdW5jdGlvbiBlbmNyeXB0KHBsYWludGV4dCwgZW5jcnlwdGlvbktleSwgY29uZmlnKSB7XG4gICAgc3dpdGNoIChjb25maWcuYWxnb3JpdGhtKSB7XG4gICAgICAgIGNhc2UgZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zLnhjaGFjaGEyMHBvbHkxMzA1SWV0Zjoge1xuICAgICAgICAgICAgY29uc3Qgbm9uY2UgPSBjcnlwdG9fMS5SYW5kb20uZ2V0Qnl0ZXMoY3J5cHRvXzEueGNoYWNoYTIwTm9uY2VMZW5ndGgpO1xuICAgICAgICAgICAgLy8gUHJlcGVuZCBmaXhlZC1sZW5ndGggbm9uY2UgdG8gY2lwaGVydGV4dCBhcyBzdWdnZXN0ZWQgaW4gdGhlIGV4YW1wbGUgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vamVkaXNjdDEvbGlic29kaXVtLmpzI2FwaVxuICAgICAgICAgICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KFtcbiAgICAgICAgICAgICAgICAuLi5ub25jZSxcbiAgICAgICAgICAgICAgICAuLi4oYXdhaXQgY3J5cHRvXzEuWGNoYWNoYTIwcG9seTEzMDVJZXRmLmVuY3J5cHQocGxhaW50ZXh0LCBlbmNyeXB0aW9uS2V5LCBub25jZSkpLFxuICAgICAgICAgICAgXSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZW5jcnlwdGlvbiBhbGdvcml0aG06ICcke2NvbmZpZy5hbGdvcml0aG19J2ApO1xuICAgIH1cbn1cbmV4cG9ydHMuZW5jcnlwdCA9IGVuY3J5cHQ7XG5hc3luYyBmdW5jdGlvbiBkZWNyeXB0KGNpcGhlcnRleHQsIGVuY3J5cHRpb25LZXksIGNvbmZpZykge1xuICAgIHN3aXRjaCAoY29uZmlnLmFsZ29yaXRobSkge1xuICAgICAgICBjYXNlIGV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcy54Y2hhY2hhMjBwb2x5MTMwNUlldGY6IHtcbiAgICAgICAgICAgIGNvbnN0IG5vbmNlID0gY2lwaGVydGV4dC5zbGljZSgwLCBjcnlwdG9fMS54Y2hhY2hhMjBOb25jZUxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuWGNoYWNoYTIwcG9seTEzMDVJZXRmLmRlY3J5cHQoY2lwaGVydGV4dC5zbGljZShjcnlwdG9fMS54Y2hhY2hhMjBOb25jZUxlbmd0aCksIGVuY3J5cHRpb25LZXksIG5vbmNlKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmNyeXB0aW9uIGFsZ29yaXRobTogJyR7Y29uZmlnLmFsZ29yaXRobX0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5kZWNyeXB0ID0gZGVjcnlwdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXdhbGxldC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/amino/build/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/bip39.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Bip39 = exports.EnglishMnemonic = exports.mnemonicToEntropy = exports.entropyToMnemonic = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst pbkdf2_1 = __webpack_require__(/*! ./pbkdf2 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js\");\nconst sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\nconst wordlist = [\n    \"abandon\",\n    \"ability\",\n    \"able\",\n    \"about\",\n    \"above\",\n    \"absent\",\n    \"absorb\",\n    \"abstract\",\n    \"absurd\",\n    \"abuse\",\n    \"access\",\n    \"accident\",\n    \"account\",\n    \"accuse\",\n    \"achieve\",\n    \"acid\",\n    \"acoustic\",\n    \"acquire\",\n    \"across\",\n    \"act\",\n    \"action\",\n    \"actor\",\n    \"actress\",\n    \"actual\",\n    \"adapt\",\n    \"add\",\n    \"addict\",\n    \"address\",\n    \"adjust\",\n    \"admit\",\n    \"adult\",\n    \"advance\",\n    \"advice\",\n    \"aerobic\",\n    \"affair\",\n    \"afford\",\n    \"afraid\",\n    \"again\",\n    \"age\",\n    \"agent\",\n    \"agree\",\n    \"ahead\",\n    \"aim\",\n    \"air\",\n    \"airport\",\n    \"aisle\",\n    \"alarm\",\n    \"album\",\n    \"alcohol\",\n    \"alert\",\n    \"alien\",\n    \"all\",\n    \"alley\",\n    \"allow\",\n    \"almost\",\n    \"alone\",\n    \"alpha\",\n    \"already\",\n    \"also\",\n    \"alter\",\n    \"always\",\n    \"amateur\",\n    \"amazing\",\n    \"among\",\n    \"amount\",\n    \"amused\",\n    \"analyst\",\n    \"anchor\",\n    \"ancient\",\n    \"anger\",\n    \"angle\",\n    \"angry\",\n    \"animal\",\n    \"ankle\",\n    \"announce\",\n    \"annual\",\n    \"another\",\n    \"answer\",\n    \"antenna\",\n    \"antique\",\n    \"anxiety\",\n    \"any\",\n    \"apart\",\n    \"apology\",\n    \"appear\",\n    \"apple\",\n    \"approve\",\n    \"april\",\n    \"arch\",\n    \"arctic\",\n    \"area\",\n    \"arena\",\n    \"argue\",\n    \"arm\",\n    \"armed\",\n    \"armor\",\n    \"army\",\n    \"around\",\n    \"arrange\",\n    \"arrest\",\n    \"arrive\",\n    \"arrow\",\n    \"art\",\n    \"artefact\",\n    \"artist\",\n    \"artwork\",\n    \"ask\",\n    \"aspect\",\n    \"assault\",\n    \"asset\",\n    \"assist\",\n    \"assume\",\n    \"asthma\",\n    \"athlete\",\n    \"atom\",\n    \"attack\",\n    \"attend\",\n    \"attitude\",\n    \"attract\",\n    \"auction\",\n    \"audit\",\n    \"august\",\n    \"aunt\",\n    \"author\",\n    \"auto\",\n    \"autumn\",\n    \"average\",\n    \"avocado\",\n    \"avoid\",\n    \"awake\",\n    \"aware\",\n    \"away\",\n    \"awesome\",\n    \"awful\",\n    \"awkward\",\n    \"axis\",\n    \"baby\",\n    \"bachelor\",\n    \"bacon\",\n    \"badge\",\n    \"bag\",\n    \"balance\",\n    \"balcony\",\n    \"ball\",\n    \"bamboo\",\n    \"banana\",\n    \"banner\",\n    \"bar\",\n    \"barely\",\n    \"bargain\",\n    \"barrel\",\n    \"base\",\n    \"basic\",\n    \"basket\",\n    \"battle\",\n    \"beach\",\n    \"bean\",\n    \"beauty\",\n    \"because\",\n    \"become\",\n    \"beef\",\n    \"before\",\n    \"begin\",\n    \"behave\",\n    \"behind\",\n    \"believe\",\n    \"below\",\n    \"belt\",\n    \"bench\",\n    \"benefit\",\n    \"best\",\n    \"betray\",\n    \"better\",\n    \"between\",\n    \"beyond\",\n    \"bicycle\",\n    \"bid\",\n    \"bike\",\n    \"bind\",\n    \"biology\",\n    \"bird\",\n    \"birth\",\n    \"bitter\",\n    \"black\",\n    \"blade\",\n    \"blame\",\n    \"blanket\",\n    \"blast\",\n    \"bleak\",\n    \"bless\",\n    \"blind\",\n    \"blood\",\n    \"blossom\",\n    \"blouse\",\n    \"blue\",\n    \"blur\",\n    \"blush\",\n    \"board\",\n    \"boat\",\n    \"body\",\n    \"boil\",\n    \"bomb\",\n    \"bone\",\n    \"bonus\",\n    \"book\",\n    \"boost\",\n    \"border\",\n    \"boring\",\n    \"borrow\",\n    \"boss\",\n    \"bottom\",\n    \"bounce\",\n    \"box\",\n    \"boy\",\n    \"bracket\",\n    \"brain\",\n    \"brand\",\n    \"brass\",\n    \"brave\",\n    \"bread\",\n    \"breeze\",\n    \"brick\",\n    \"bridge\",\n    \"brief\",\n    \"bright\",\n    \"bring\",\n    \"brisk\",\n    \"broccoli\",\n    \"broken\",\n    \"bronze\",\n    \"broom\",\n    \"brother\",\n    \"brown\",\n    \"brush\",\n    \"bubble\",\n    \"buddy\",\n    \"budget\",\n    \"buffalo\",\n    \"build\",\n    \"bulb\",\n    \"bulk\",\n    \"bullet\",\n    \"bundle\",\n    \"bunker\",\n    \"burden\",\n    \"burger\",\n    \"burst\",\n    \"bus\",\n    \"business\",\n    \"busy\",\n    \"butter\",\n    \"buyer\",\n    \"buzz\",\n    \"cabbage\",\n    \"cabin\",\n    \"cable\",\n    \"cactus\",\n    \"cage\",\n    \"cake\",\n    \"call\",\n    \"calm\",\n    \"camera\",\n    \"camp\",\n    \"can\",\n    \"canal\",\n    \"cancel\",\n    \"candy\",\n    \"cannon\",\n    \"canoe\",\n    \"canvas\",\n    \"canyon\",\n    \"capable\",\n    \"capital\",\n    \"captain\",\n    \"car\",\n    \"carbon\",\n    \"card\",\n    \"cargo\",\n    \"carpet\",\n    \"carry\",\n    \"cart\",\n    \"case\",\n    \"cash\",\n    \"casino\",\n    \"castle\",\n    \"casual\",\n    \"cat\",\n    \"catalog\",\n    \"catch\",\n    \"category\",\n    \"cattle\",\n    \"caught\",\n    \"cause\",\n    \"caution\",\n    \"cave\",\n    \"ceiling\",\n    \"celery\",\n    \"cement\",\n    \"census\",\n    \"century\",\n    \"cereal\",\n    \"certain\",\n    \"chair\",\n    \"chalk\",\n    \"champion\",\n    \"change\",\n    \"chaos\",\n    \"chapter\",\n    \"charge\",\n    \"chase\",\n    \"chat\",\n    \"cheap\",\n    \"check\",\n    \"cheese\",\n    \"chef\",\n    \"cherry\",\n    \"chest\",\n    \"chicken\",\n    \"chief\",\n    \"child\",\n    \"chimney\",\n    \"choice\",\n    \"choose\",\n    \"chronic\",\n    \"chuckle\",\n    \"chunk\",\n    \"churn\",\n    \"cigar\",\n    \"cinnamon\",\n    \"circle\",\n    \"citizen\",\n    \"city\",\n    \"civil\",\n    \"claim\",\n    \"clap\",\n    \"clarify\",\n    \"claw\",\n    \"clay\",\n    \"clean\",\n    \"clerk\",\n    \"clever\",\n    \"click\",\n    \"client\",\n    \"cliff\",\n    \"climb\",\n    \"clinic\",\n    \"clip\",\n    \"clock\",\n    \"clog\",\n    \"close\",\n    \"cloth\",\n    \"cloud\",\n    \"clown\",\n    \"club\",\n    \"clump\",\n    \"cluster\",\n    \"clutch\",\n    \"coach\",\n    \"coast\",\n    \"coconut\",\n    \"code\",\n    \"coffee\",\n    \"coil\",\n    \"coin\",\n    \"collect\",\n    \"color\",\n    \"column\",\n    \"combine\",\n    \"come\",\n    \"comfort\",\n    \"comic\",\n    \"common\",\n    \"company\",\n    \"concert\",\n    \"conduct\",\n    \"confirm\",\n    \"congress\",\n    \"connect\",\n    \"consider\",\n    \"control\",\n    \"convince\",\n    \"cook\",\n    \"cool\",\n    \"copper\",\n    \"copy\",\n    \"coral\",\n    \"core\",\n    \"corn\",\n    \"correct\",\n    \"cost\",\n    \"cotton\",\n    \"couch\",\n    \"country\",\n    \"couple\",\n    \"course\",\n    \"cousin\",\n    \"cover\",\n    \"coyote\",\n    \"crack\",\n    \"cradle\",\n    \"craft\",\n    \"cram\",\n    \"crane\",\n    \"crash\",\n    \"crater\",\n    \"crawl\",\n    \"crazy\",\n    \"cream\",\n    \"credit\",\n    \"creek\",\n    \"crew\",\n    \"cricket\",\n    \"crime\",\n    \"crisp\",\n    \"critic\",\n    \"crop\",\n    \"cross\",\n    \"crouch\",\n    \"crowd\",\n    \"crucial\",\n    \"cruel\",\n    \"cruise\",\n    \"crumble\",\n    \"crunch\",\n    \"crush\",\n    \"cry\",\n    \"crystal\",\n    \"cube\",\n    \"culture\",\n    \"cup\",\n    \"cupboard\",\n    \"curious\",\n    \"current\",\n    \"curtain\",\n    \"curve\",\n    \"cushion\",\n    \"custom\",\n    \"cute\",\n    \"cycle\",\n    \"dad\",\n    \"damage\",\n    \"damp\",\n    \"dance\",\n    \"danger\",\n    \"daring\",\n    \"dash\",\n    \"daughter\",\n    \"dawn\",\n    \"day\",\n    \"deal\",\n    \"debate\",\n    \"debris\",\n    \"decade\",\n    \"december\",\n    \"decide\",\n    \"decline\",\n    \"decorate\",\n    \"decrease\",\n    \"deer\",\n    \"defense\",\n    \"define\",\n    \"defy\",\n    \"degree\",\n    \"delay\",\n    \"deliver\",\n    \"demand\",\n    \"demise\",\n    \"denial\",\n    \"dentist\",\n    \"deny\",\n    \"depart\",\n    \"depend\",\n    \"deposit\",\n    \"depth\",\n    \"deputy\",\n    \"derive\",\n    \"describe\",\n    \"desert\",\n    \"design\",\n    \"desk\",\n    \"despair\",\n    \"destroy\",\n    \"detail\",\n    \"detect\",\n    \"develop\",\n    \"device\",\n    \"devote\",\n    \"diagram\",\n    \"dial\",\n    \"diamond\",\n    \"diary\",\n    \"dice\",\n    \"diesel\",\n    \"diet\",\n    \"differ\",\n    \"digital\",\n    \"dignity\",\n    \"dilemma\",\n    \"dinner\",\n    \"dinosaur\",\n    \"direct\",\n    \"dirt\",\n    \"disagree\",\n    \"discover\",\n    \"disease\",\n    \"dish\",\n    \"dismiss\",\n    \"disorder\",\n    \"display\",\n    \"distance\",\n    \"divert\",\n    \"divide\",\n    \"divorce\",\n    \"dizzy\",\n    \"doctor\",\n    \"document\",\n    \"dog\",\n    \"doll\",\n    \"dolphin\",\n    \"domain\",\n    \"donate\",\n    \"donkey\",\n    \"donor\",\n    \"door\",\n    \"dose\",\n    \"double\",\n    \"dove\",\n    \"draft\",\n    \"dragon\",\n    \"drama\",\n    \"drastic\",\n    \"draw\",\n    \"dream\",\n    \"dress\",\n    \"drift\",\n    \"drill\",\n    \"drink\",\n    \"drip\",\n    \"drive\",\n    \"drop\",\n    \"drum\",\n    \"dry\",\n    \"duck\",\n    \"dumb\",\n    \"dune\",\n    \"during\",\n    \"dust\",\n    \"dutch\",\n    \"duty\",\n    \"dwarf\",\n    \"dynamic\",\n    \"eager\",\n    \"eagle\",\n    \"early\",\n    \"earn\",\n    \"earth\",\n    \"easily\",\n    \"east\",\n    \"easy\",\n    \"echo\",\n    \"ecology\",\n    \"economy\",\n    \"edge\",\n    \"edit\",\n    \"educate\",\n    \"effort\",\n    \"egg\",\n    \"eight\",\n    \"either\",\n    \"elbow\",\n    \"elder\",\n    \"electric\",\n    \"elegant\",\n    \"element\",\n    \"elephant\",\n    \"elevator\",\n    \"elite\",\n    \"else\",\n    \"embark\",\n    \"embody\",\n    \"embrace\",\n    \"emerge\",\n    \"emotion\",\n    \"employ\",\n    \"empower\",\n    \"empty\",\n    \"enable\",\n    \"enact\",\n    \"end\",\n    \"endless\",\n    \"endorse\",\n    \"enemy\",\n    \"energy\",\n    \"enforce\",\n    \"engage\",\n    \"engine\",\n    \"enhance\",\n    \"enjoy\",\n    \"enlist\",\n    \"enough\",\n    \"enrich\",\n    \"enroll\",\n    \"ensure\",\n    \"enter\",\n    \"entire\",\n    \"entry\",\n    \"envelope\",\n    \"episode\",\n    \"equal\",\n    \"equip\",\n    \"era\",\n    \"erase\",\n    \"erode\",\n    \"erosion\",\n    \"error\",\n    \"erupt\",\n    \"escape\",\n    \"essay\",\n    \"essence\",\n    \"estate\",\n    \"eternal\",\n    \"ethics\",\n    \"evidence\",\n    \"evil\",\n    \"evoke\",\n    \"evolve\",\n    \"exact\",\n    \"example\",\n    \"excess\",\n    \"exchange\",\n    \"excite\",\n    \"exclude\",\n    \"excuse\",\n    \"execute\",\n    \"exercise\",\n    \"exhaust\",\n    \"exhibit\",\n    \"exile\",\n    \"exist\",\n    \"exit\",\n    \"exotic\",\n    \"expand\",\n    \"expect\",\n    \"expire\",\n    \"explain\",\n    \"expose\",\n    \"express\",\n    \"extend\",\n    \"extra\",\n    \"eye\",\n    \"eyebrow\",\n    \"fabric\",\n    \"face\",\n    \"faculty\",\n    \"fade\",\n    \"faint\",\n    \"faith\",\n    \"fall\",\n    \"false\",\n    \"fame\",\n    \"family\",\n    \"famous\",\n    \"fan\",\n    \"fancy\",\n    \"fantasy\",\n    \"farm\",\n    \"fashion\",\n    \"fat\",\n    \"fatal\",\n    \"father\",\n    \"fatigue\",\n    \"fault\",\n    \"favorite\",\n    \"feature\",\n    \"february\",\n    \"federal\",\n    \"fee\",\n    \"feed\",\n    \"feel\",\n    \"female\",\n    \"fence\",\n    \"festival\",\n    \"fetch\",\n    \"fever\",\n    \"few\",\n    \"fiber\",\n    \"fiction\",\n    \"field\",\n    \"figure\",\n    \"file\",\n    \"film\",\n    \"filter\",\n    \"final\",\n    \"find\",\n    \"fine\",\n    \"finger\",\n    \"finish\",\n    \"fire\",\n    \"firm\",\n    \"first\",\n    \"fiscal\",\n    \"fish\",\n    \"fit\",\n    \"fitness\",\n    \"fix\",\n    \"flag\",\n    \"flame\",\n    \"flash\",\n    \"flat\",\n    \"flavor\",\n    \"flee\",\n    \"flight\",\n    \"flip\",\n    \"float\",\n    \"flock\",\n    \"floor\",\n    \"flower\",\n    \"fluid\",\n    \"flush\",\n    \"fly\",\n    \"foam\",\n    \"focus\",\n    \"fog\",\n    \"foil\",\n    \"fold\",\n    \"follow\",\n    \"food\",\n    \"foot\",\n    \"force\",\n    \"forest\",\n    \"forget\",\n    \"fork\",\n    \"fortune\",\n    \"forum\",\n    \"forward\",\n    \"fossil\",\n    \"foster\",\n    \"found\",\n    \"fox\",\n    \"fragile\",\n    \"frame\",\n    \"frequent\",\n    \"fresh\",\n    \"friend\",\n    \"fringe\",\n    \"frog\",\n    \"front\",\n    \"frost\",\n    \"frown\",\n    \"frozen\",\n    \"fruit\",\n    \"fuel\",\n    \"fun\",\n    \"funny\",\n    \"furnace\",\n    \"fury\",\n    \"future\",\n    \"gadget\",\n    \"gain\",\n    \"galaxy\",\n    \"gallery\",\n    \"game\",\n    \"gap\",\n    \"garage\",\n    \"garbage\",\n    \"garden\",\n    \"garlic\",\n    \"garment\",\n    \"gas\",\n    \"gasp\",\n    \"gate\",\n    \"gather\",\n    \"gauge\",\n    \"gaze\",\n    \"general\",\n    \"genius\",\n    \"genre\",\n    \"gentle\",\n    \"genuine\",\n    \"gesture\",\n    \"ghost\",\n    \"giant\",\n    \"gift\",\n    \"giggle\",\n    \"ginger\",\n    \"giraffe\",\n    \"girl\",\n    \"give\",\n    \"glad\",\n    \"glance\",\n    \"glare\",\n    \"glass\",\n    \"glide\",\n    \"glimpse\",\n    \"globe\",\n    \"gloom\",\n    \"glory\",\n    \"glove\",\n    \"glow\",\n    \"glue\",\n    \"goat\",\n    \"goddess\",\n    \"gold\",\n    \"good\",\n    \"goose\",\n    \"gorilla\",\n    \"gospel\",\n    \"gossip\",\n    \"govern\",\n    \"gown\",\n    \"grab\",\n    \"grace\",\n    \"grain\",\n    \"grant\",\n    \"grape\",\n    \"grass\",\n    \"gravity\",\n    \"great\",\n    \"green\",\n    \"grid\",\n    \"grief\",\n    \"grit\",\n    \"grocery\",\n    \"group\",\n    \"grow\",\n    \"grunt\",\n    \"guard\",\n    \"guess\",\n    \"guide\",\n    \"guilt\",\n    \"guitar\",\n    \"gun\",\n    \"gym\",\n    \"habit\",\n    \"hair\",\n    \"half\",\n    \"hammer\",\n    \"hamster\",\n    \"hand\",\n    \"happy\",\n    \"harbor\",\n    \"hard\",\n    \"harsh\",\n    \"harvest\",\n    \"hat\",\n    \"have\",\n    \"hawk\",\n    \"hazard\",\n    \"head\",\n    \"health\",\n    \"heart\",\n    \"heavy\",\n    \"hedgehog\",\n    \"height\",\n    \"hello\",\n    \"helmet\",\n    \"help\",\n    \"hen\",\n    \"hero\",\n    \"hidden\",\n    \"high\",\n    \"hill\",\n    \"hint\",\n    \"hip\",\n    \"hire\",\n    \"history\",\n    \"hobby\",\n    \"hockey\",\n    \"hold\",\n    \"hole\",\n    \"holiday\",\n    \"hollow\",\n    \"home\",\n    \"honey\",\n    \"hood\",\n    \"hope\",\n    \"horn\",\n    \"horror\",\n    \"horse\",\n    \"hospital\",\n    \"host\",\n    \"hotel\",\n    \"hour\",\n    \"hover\",\n    \"hub\",\n    \"huge\",\n    \"human\",\n    \"humble\",\n    \"humor\",\n    \"hundred\",\n    \"hungry\",\n    \"hunt\",\n    \"hurdle\",\n    \"hurry\",\n    \"hurt\",\n    \"husband\",\n    \"hybrid\",\n    \"ice\",\n    \"icon\",\n    \"idea\",\n    \"identify\",\n    \"idle\",\n    \"ignore\",\n    \"ill\",\n    \"illegal\",\n    \"illness\",\n    \"image\",\n    \"imitate\",\n    \"immense\",\n    \"immune\",\n    \"impact\",\n    \"impose\",\n    \"improve\",\n    \"impulse\",\n    \"inch\",\n    \"include\",\n    \"income\",\n    \"increase\",\n    \"index\",\n    \"indicate\",\n    \"indoor\",\n    \"industry\",\n    \"infant\",\n    \"inflict\",\n    \"inform\",\n    \"inhale\",\n    \"inherit\",\n    \"initial\",\n    \"inject\",\n    \"injury\",\n    \"inmate\",\n    \"inner\",\n    \"innocent\",\n    \"input\",\n    \"inquiry\",\n    \"insane\",\n    \"insect\",\n    \"inside\",\n    \"inspire\",\n    \"install\",\n    \"intact\",\n    \"interest\",\n    \"into\",\n    \"invest\",\n    \"invite\",\n    \"involve\",\n    \"iron\",\n    \"island\",\n    \"isolate\",\n    \"issue\",\n    \"item\",\n    \"ivory\",\n    \"jacket\",\n    \"jaguar\",\n    \"jar\",\n    \"jazz\",\n    \"jealous\",\n    \"jeans\",\n    \"jelly\",\n    \"jewel\",\n    \"job\",\n    \"join\",\n    \"joke\",\n    \"journey\",\n    \"joy\",\n    \"judge\",\n    \"juice\",\n    \"jump\",\n    \"jungle\",\n    \"junior\",\n    \"junk\",\n    \"just\",\n    \"kangaroo\",\n    \"keen\",\n    \"keep\",\n    \"ketchup\",\n    \"key\",\n    \"kick\",\n    \"kid\",\n    \"kidney\",\n    \"kind\",\n    \"kingdom\",\n    \"kiss\",\n    \"kit\",\n    \"kitchen\",\n    \"kite\",\n    \"kitten\",\n    \"kiwi\",\n    \"knee\",\n    \"knife\",\n    \"knock\",\n    \"know\",\n    \"lab\",\n    \"label\",\n    \"labor\",\n    \"ladder\",\n    \"lady\",\n    \"lake\",\n    \"lamp\",\n    \"language\",\n    \"laptop\",\n    \"large\",\n    \"later\",\n    \"latin\",\n    \"laugh\",\n    \"laundry\",\n    \"lava\",\n    \"law\",\n    \"lawn\",\n    \"lawsuit\",\n    \"layer\",\n    \"lazy\",\n    \"leader\",\n    \"leaf\",\n    \"learn\",\n    \"leave\",\n    \"lecture\",\n    \"left\",\n    \"leg\",\n    \"legal\",\n    \"legend\",\n    \"leisure\",\n    \"lemon\",\n    \"lend\",\n    \"length\",\n    \"lens\",\n    \"leopard\",\n    \"lesson\",\n    \"letter\",\n    \"level\",\n    \"liar\",\n    \"liberty\",\n    \"library\",\n    \"license\",\n    \"life\",\n    \"lift\",\n    \"light\",\n    \"like\",\n    \"limb\",\n    \"limit\",\n    \"link\",\n    \"lion\",\n    \"liquid\",\n    \"list\",\n    \"little\",\n    \"live\",\n    \"lizard\",\n    \"load\",\n    \"loan\",\n    \"lobster\",\n    \"local\",\n    \"lock\",\n    \"logic\",\n    \"lonely\",\n    \"long\",\n    \"loop\",\n    \"lottery\",\n    \"loud\",\n    \"lounge\",\n    \"love\",\n    \"loyal\",\n    \"lucky\",\n    \"luggage\",\n    \"lumber\",\n    \"lunar\",\n    \"lunch\",\n    \"luxury\",\n    \"lyrics\",\n    \"machine\",\n    \"mad\",\n    \"magic\",\n    \"magnet\",\n    \"maid\",\n    \"mail\",\n    \"main\",\n    \"major\",\n    \"make\",\n    \"mammal\",\n    \"man\",\n    \"manage\",\n    \"mandate\",\n    \"mango\",\n    \"mansion\",\n    \"manual\",\n    \"maple\",\n    \"marble\",\n    \"march\",\n    \"margin\",\n    \"marine\",\n    \"market\",\n    \"marriage\",\n    \"mask\",\n    \"mass\",\n    \"master\",\n    \"match\",\n    \"material\",\n    \"math\",\n    \"matrix\",\n    \"matter\",\n    \"maximum\",\n    \"maze\",\n    \"meadow\",\n    \"mean\",\n    \"measure\",\n    \"meat\",\n    \"mechanic\",\n    \"medal\",\n    \"media\",\n    \"melody\",\n    \"melt\",\n    \"member\",\n    \"memory\",\n    \"mention\",\n    \"menu\",\n    \"mercy\",\n    \"merge\",\n    \"merit\",\n    \"merry\",\n    \"mesh\",\n    \"message\",\n    \"metal\",\n    \"method\",\n    \"middle\",\n    \"midnight\",\n    \"milk\",\n    \"million\",\n    \"mimic\",\n    \"mind\",\n    \"minimum\",\n    \"minor\",\n    \"minute\",\n    \"miracle\",\n    \"mirror\",\n    \"misery\",\n    \"miss\",\n    \"mistake\",\n    \"mix\",\n    \"mixed\",\n    \"mixture\",\n    \"mobile\",\n    \"model\",\n    \"modify\",\n    \"mom\",\n    \"moment\",\n    \"monitor\",\n    \"monkey\",\n    \"monster\",\n    \"month\",\n    \"moon\",\n    \"moral\",\n    \"more\",\n    \"morning\",\n    \"mosquito\",\n    \"mother\",\n    \"motion\",\n    \"motor\",\n    \"mountain\",\n    \"mouse\",\n    \"move\",\n    \"movie\",\n    \"much\",\n    \"muffin\",\n    \"mule\",\n    \"multiply\",\n    \"muscle\",\n    \"museum\",\n    \"mushroom\",\n    \"music\",\n    \"must\",\n    \"mutual\",\n    \"myself\",\n    \"mystery\",\n    \"myth\",\n    \"naive\",\n    \"name\",\n    \"napkin\",\n    \"narrow\",\n    \"nasty\",\n    \"nation\",\n    \"nature\",\n    \"near\",\n    \"neck\",\n    \"need\",\n    \"negative\",\n    \"neglect\",\n    \"neither\",\n    \"nephew\",\n    \"nerve\",\n    \"nest\",\n    \"net\",\n    \"network\",\n    \"neutral\",\n    \"never\",\n    \"news\",\n    \"next\",\n    \"nice\",\n    \"night\",\n    \"noble\",\n    \"noise\",\n    \"nominee\",\n    \"noodle\",\n    \"normal\",\n    \"north\",\n    \"nose\",\n    \"notable\",\n    \"note\",\n    \"nothing\",\n    \"notice\",\n    \"novel\",\n    \"now\",\n    \"nuclear\",\n    \"number\",\n    \"nurse\",\n    \"nut\",\n    \"oak\",\n    \"obey\",\n    \"object\",\n    \"oblige\",\n    \"obscure\",\n    \"observe\",\n    \"obtain\",\n    \"obvious\",\n    \"occur\",\n    \"ocean\",\n    \"october\",\n    \"odor\",\n    \"off\",\n    \"offer\",\n    \"office\",\n    \"often\",\n    \"oil\",\n    \"okay\",\n    \"old\",\n    \"olive\",\n    \"olympic\",\n    \"omit\",\n    \"once\",\n    \"one\",\n    \"onion\",\n    \"online\",\n    \"only\",\n    \"open\",\n    \"opera\",\n    \"opinion\",\n    \"oppose\",\n    \"option\",\n    \"orange\",\n    \"orbit\",\n    \"orchard\",\n    \"order\",\n    \"ordinary\",\n    \"organ\",\n    \"orient\",\n    \"original\",\n    \"orphan\",\n    \"ostrich\",\n    \"other\",\n    \"outdoor\",\n    \"outer\",\n    \"output\",\n    \"outside\",\n    \"oval\",\n    \"oven\",\n    \"over\",\n    \"own\",\n    \"owner\",\n    \"oxygen\",\n    \"oyster\",\n    \"ozone\",\n    \"pact\",\n    \"paddle\",\n    \"page\",\n    \"pair\",\n    \"palace\",\n    \"palm\",\n    \"panda\",\n    \"panel\",\n    \"panic\",\n    \"panther\",\n    \"paper\",\n    \"parade\",\n    \"parent\",\n    \"park\",\n    \"parrot\",\n    \"party\",\n    \"pass\",\n    \"patch\",\n    \"path\",\n    \"patient\",\n    \"patrol\",\n    \"pattern\",\n    \"pause\",\n    \"pave\",\n    \"payment\",\n    \"peace\",\n    \"peanut\",\n    \"pear\",\n    \"peasant\",\n    \"pelican\",\n    \"pen\",\n    \"penalty\",\n    \"pencil\",\n    \"people\",\n    \"pepper\",\n    \"perfect\",\n    \"permit\",\n    \"person\",\n    \"pet\",\n    \"phone\",\n    \"photo\",\n    \"phrase\",\n    \"physical\",\n    \"piano\",\n    \"picnic\",\n    \"picture\",\n    \"piece\",\n    \"pig\",\n    \"pigeon\",\n    \"pill\",\n    \"pilot\",\n    \"pink\",\n    \"pioneer\",\n    \"pipe\",\n    \"pistol\",\n    \"pitch\",\n    \"pizza\",\n    \"place\",\n    \"planet\",\n    \"plastic\",\n    \"plate\",\n    \"play\",\n    \"please\",\n    \"pledge\",\n    \"pluck\",\n    \"plug\",\n    \"plunge\",\n    \"poem\",\n    \"poet\",\n    \"point\",\n    \"polar\",\n    \"pole\",\n    \"police\",\n    \"pond\",\n    \"pony\",\n    \"pool\",\n    \"popular\",\n    \"portion\",\n    \"position\",\n    \"possible\",\n    \"post\",\n    \"potato\",\n    \"pottery\",\n    \"poverty\",\n    \"powder\",\n    \"power\",\n    \"practice\",\n    \"praise\",\n    \"predict\",\n    \"prefer\",\n    \"prepare\",\n    \"present\",\n    \"pretty\",\n    \"prevent\",\n    \"price\",\n    \"pride\",\n    \"primary\",\n    \"print\",\n    \"priority\",\n    \"prison\",\n    \"private\",\n    \"prize\",\n    \"problem\",\n    \"process\",\n    \"produce\",\n    \"profit\",\n    \"program\",\n    \"project\",\n    \"promote\",\n    \"proof\",\n    \"property\",\n    \"prosper\",\n    \"protect\",\n    \"proud\",\n    \"provide\",\n    \"public\",\n    \"pudding\",\n    \"pull\",\n    \"pulp\",\n    \"pulse\",\n    \"pumpkin\",\n    \"punch\",\n    \"pupil\",\n    \"puppy\",\n    \"purchase\",\n    \"purity\",\n    \"purpose\",\n    \"purse\",\n    \"push\",\n    \"put\",\n    \"puzzle\",\n    \"pyramid\",\n    \"quality\",\n    \"quantum\",\n    \"quarter\",\n    \"question\",\n    \"quick\",\n    \"quit\",\n    \"quiz\",\n    \"quote\",\n    \"rabbit\",\n    \"raccoon\",\n    \"race\",\n    \"rack\",\n    \"radar\",\n    \"radio\",\n    \"rail\",\n    \"rain\",\n    \"raise\",\n    \"rally\",\n    \"ramp\",\n    \"ranch\",\n    \"random\",\n    \"range\",\n    \"rapid\",\n    \"rare\",\n    \"rate\",\n    \"rather\",\n    \"raven\",\n    \"raw\",\n    \"razor\",\n    \"ready\",\n    \"real\",\n    \"reason\",\n    \"rebel\",\n    \"rebuild\",\n    \"recall\",\n    \"receive\",\n    \"recipe\",\n    \"record\",\n    \"recycle\",\n    \"reduce\",\n    \"reflect\",\n    \"reform\",\n    \"refuse\",\n    \"region\",\n    \"regret\",\n    \"regular\",\n    \"reject\",\n    \"relax\",\n    \"release\",\n    \"relief\",\n    \"rely\",\n    \"remain\",\n    \"remember\",\n    \"remind\",\n    \"remove\",\n    \"render\",\n    \"renew\",\n    \"rent\",\n    \"reopen\",\n    \"repair\",\n    \"repeat\",\n    \"replace\",\n    \"report\",\n    \"require\",\n    \"rescue\",\n    \"resemble\",\n    \"resist\",\n    \"resource\",\n    \"response\",\n    \"result\",\n    \"retire\",\n    \"retreat\",\n    \"return\",\n    \"reunion\",\n    \"reveal\",\n    \"review\",\n    \"reward\",\n    \"rhythm\",\n    \"rib\",\n    \"ribbon\",\n    \"rice\",\n    \"rich\",\n    \"ride\",\n    \"ridge\",\n    \"rifle\",\n    \"right\",\n    \"rigid\",\n    \"ring\",\n    \"riot\",\n    \"ripple\",\n    \"risk\",\n    \"ritual\",\n    \"rival\",\n    \"river\",\n    \"road\",\n    \"roast\",\n    \"robot\",\n    \"robust\",\n    \"rocket\",\n    \"romance\",\n    \"roof\",\n    \"rookie\",\n    \"room\",\n    \"rose\",\n    \"rotate\",\n    \"rough\",\n    \"round\",\n    \"route\",\n    \"royal\",\n    \"rubber\",\n    \"rude\",\n    \"rug\",\n    \"rule\",\n    \"run\",\n    \"runway\",\n    \"rural\",\n    \"sad\",\n    \"saddle\",\n    \"sadness\",\n    \"safe\",\n    \"sail\",\n    \"salad\",\n    \"salmon\",\n    \"salon\",\n    \"salt\",\n    \"salute\",\n    \"same\",\n    \"sample\",\n    \"sand\",\n    \"satisfy\",\n    \"satoshi\",\n    \"sauce\",\n    \"sausage\",\n    \"save\",\n    \"say\",\n    \"scale\",\n    \"scan\",\n    \"scare\",\n    \"scatter\",\n    \"scene\",\n    \"scheme\",\n    \"school\",\n    \"science\",\n    \"scissors\",\n    \"scorpion\",\n    \"scout\",\n    \"scrap\",\n    \"screen\",\n    \"script\",\n    \"scrub\",\n    \"sea\",\n    \"search\",\n    \"season\",\n    \"seat\",\n    \"second\",\n    \"secret\",\n    \"section\",\n    \"security\",\n    \"seed\",\n    \"seek\",\n    \"segment\",\n    \"select\",\n    \"sell\",\n    \"seminar\",\n    \"senior\",\n    \"sense\",\n    \"sentence\",\n    \"series\",\n    \"service\",\n    \"session\",\n    \"settle\",\n    \"setup\",\n    \"seven\",\n    \"shadow\",\n    \"shaft\",\n    \"shallow\",\n    \"share\",\n    \"shed\",\n    \"shell\",\n    \"sheriff\",\n    \"shield\",\n    \"shift\",\n    \"shine\",\n    \"ship\",\n    \"shiver\",\n    \"shock\",\n    \"shoe\",\n    \"shoot\",\n    \"shop\",\n    \"short\",\n    \"shoulder\",\n    \"shove\",\n    \"shrimp\",\n    \"shrug\",\n    \"shuffle\",\n    \"shy\",\n    \"sibling\",\n    \"sick\",\n    \"side\",\n    \"siege\",\n    \"sight\",\n    \"sign\",\n    \"silent\",\n    \"silk\",\n    \"silly\",\n    \"silver\",\n    \"similar\",\n    \"simple\",\n    \"since\",\n    \"sing\",\n    \"siren\",\n    \"sister\",\n    \"situate\",\n    \"six\",\n    \"size\",\n    \"skate\",\n    \"sketch\",\n    \"ski\",\n    \"skill\",\n    \"skin\",\n    \"skirt\",\n    \"skull\",\n    \"slab\",\n    \"slam\",\n    \"sleep\",\n    \"slender\",\n    \"slice\",\n    \"slide\",\n    \"slight\",\n    \"slim\",\n    \"slogan\",\n    \"slot\",\n    \"slow\",\n    \"slush\",\n    \"small\",\n    \"smart\",\n    \"smile\",\n    \"smoke\",\n    \"smooth\",\n    \"snack\",\n    \"snake\",\n    \"snap\",\n    \"sniff\",\n    \"snow\",\n    \"soap\",\n    \"soccer\",\n    \"social\",\n    \"sock\",\n    \"soda\",\n    \"soft\",\n    \"solar\",\n    \"soldier\",\n    \"solid\",\n    \"solution\",\n    \"solve\",\n    \"someone\",\n    \"song\",\n    \"soon\",\n    \"sorry\",\n    \"sort\",\n    \"soul\",\n    \"sound\",\n    \"soup\",\n    \"source\",\n    \"south\",\n    \"space\",\n    \"spare\",\n    \"spatial\",\n    \"spawn\",\n    \"speak\",\n    \"special\",\n    \"speed\",\n    \"spell\",\n    \"spend\",\n    \"sphere\",\n    \"spice\",\n    \"spider\",\n    \"spike\",\n    \"spin\",\n    \"spirit\",\n    \"split\",\n    \"spoil\",\n    \"sponsor\",\n    \"spoon\",\n    \"sport\",\n    \"spot\",\n    \"spray\",\n    \"spread\",\n    \"spring\",\n    \"spy\",\n    \"square\",\n    \"squeeze\",\n    \"squirrel\",\n    \"stable\",\n    \"stadium\",\n    \"staff\",\n    \"stage\",\n    \"stairs\",\n    \"stamp\",\n    \"stand\",\n    \"start\",\n    \"state\",\n    \"stay\",\n    \"steak\",\n    \"steel\",\n    \"stem\",\n    \"step\",\n    \"stereo\",\n    \"stick\",\n    \"still\",\n    \"sting\",\n    \"stock\",\n    \"stomach\",\n    \"stone\",\n    \"stool\",\n    \"story\",\n    \"stove\",\n    \"strategy\",\n    \"street\",\n    \"strike\",\n    \"strong\",\n    \"struggle\",\n    \"student\",\n    \"stuff\",\n    \"stumble\",\n    \"style\",\n    \"subject\",\n    \"submit\",\n    \"subway\",\n    \"success\",\n    \"such\",\n    \"sudden\",\n    \"suffer\",\n    \"sugar\",\n    \"suggest\",\n    \"suit\",\n    \"summer\",\n    \"sun\",\n    \"sunny\",\n    \"sunset\",\n    \"super\",\n    \"supply\",\n    \"supreme\",\n    \"sure\",\n    \"surface\",\n    \"surge\",\n    \"surprise\",\n    \"surround\",\n    \"survey\",\n    \"suspect\",\n    \"sustain\",\n    \"swallow\",\n    \"swamp\",\n    \"swap\",\n    \"swarm\",\n    \"swear\",\n    \"sweet\",\n    \"swift\",\n    \"swim\",\n    \"swing\",\n    \"switch\",\n    \"sword\",\n    \"symbol\",\n    \"symptom\",\n    \"syrup\",\n    \"system\",\n    \"table\",\n    \"tackle\",\n    \"tag\",\n    \"tail\",\n    \"talent\",\n    \"talk\",\n    \"tank\",\n    \"tape\",\n    \"target\",\n    \"task\",\n    \"taste\",\n    \"tattoo\",\n    \"taxi\",\n    \"teach\",\n    \"team\",\n    \"tell\",\n    \"ten\",\n    \"tenant\",\n    \"tennis\",\n    \"tent\",\n    \"term\",\n    \"test\",\n    \"text\",\n    \"thank\",\n    \"that\",\n    \"theme\",\n    \"then\",\n    \"theory\",\n    \"there\",\n    \"they\",\n    \"thing\",\n    \"this\",\n    \"thought\",\n    \"three\",\n    \"thrive\",\n    \"throw\",\n    \"thumb\",\n    \"thunder\",\n    \"ticket\",\n    \"tide\",\n    \"tiger\",\n    \"tilt\",\n    \"timber\",\n    \"time\",\n    \"tiny\",\n    \"tip\",\n    \"tired\",\n    \"tissue\",\n    \"title\",\n    \"toast\",\n    \"tobacco\",\n    \"today\",\n    \"toddler\",\n    \"toe\",\n    \"together\",\n    \"toilet\",\n    \"token\",\n    \"tomato\",\n    \"tomorrow\",\n    \"tone\",\n    \"tongue\",\n    \"tonight\",\n    \"tool\",\n    \"tooth\",\n    \"top\",\n    \"topic\",\n    \"topple\",\n    \"torch\",\n    \"tornado\",\n    \"tortoise\",\n    \"toss\",\n    \"total\",\n    \"tourist\",\n    \"toward\",\n    \"tower\",\n    \"town\",\n    \"toy\",\n    \"track\",\n    \"trade\",\n    \"traffic\",\n    \"tragic\",\n    \"train\",\n    \"transfer\",\n    \"trap\",\n    \"trash\",\n    \"travel\",\n    \"tray\",\n    \"treat\",\n    \"tree\",\n    \"trend\",\n    \"trial\",\n    \"tribe\",\n    \"trick\",\n    \"trigger\",\n    \"trim\",\n    \"trip\",\n    \"trophy\",\n    \"trouble\",\n    \"truck\",\n    \"true\",\n    \"truly\",\n    \"trumpet\",\n    \"trust\",\n    \"truth\",\n    \"try\",\n    \"tube\",\n    \"tuition\",\n    \"tumble\",\n    \"tuna\",\n    \"tunnel\",\n    \"turkey\",\n    \"turn\",\n    \"turtle\",\n    \"twelve\",\n    \"twenty\",\n    \"twice\",\n    \"twin\",\n    \"twist\",\n    \"two\",\n    \"type\",\n    \"typical\",\n    \"ugly\",\n    \"umbrella\",\n    \"unable\",\n    \"unaware\",\n    \"uncle\",\n    \"uncover\",\n    \"under\",\n    \"undo\",\n    \"unfair\",\n    \"unfold\",\n    \"unhappy\",\n    \"uniform\",\n    \"unique\",\n    \"unit\",\n    \"universe\",\n    \"unknown\",\n    \"unlock\",\n    \"until\",\n    \"unusual\",\n    \"unveil\",\n    \"update\",\n    \"upgrade\",\n    \"uphold\",\n    \"upon\",\n    \"upper\",\n    \"upset\",\n    \"urban\",\n    \"urge\",\n    \"usage\",\n    \"use\",\n    \"used\",\n    \"useful\",\n    \"useless\",\n    \"usual\",\n    \"utility\",\n    \"vacant\",\n    \"vacuum\",\n    \"vague\",\n    \"valid\",\n    \"valley\",\n    \"valve\",\n    \"van\",\n    \"vanish\",\n    \"vapor\",\n    \"various\",\n    \"vast\",\n    \"vault\",\n    \"vehicle\",\n    \"velvet\",\n    \"vendor\",\n    \"venture\",\n    \"venue\",\n    \"verb\",\n    \"verify\",\n    \"version\",\n    \"very\",\n    \"vessel\",\n    \"veteran\",\n    \"viable\",\n    \"vibrant\",\n    \"vicious\",\n    \"victory\",\n    \"video\",\n    \"view\",\n    \"village\",\n    \"vintage\",\n    \"violin\",\n    \"virtual\",\n    \"virus\",\n    \"visa\",\n    \"visit\",\n    \"visual\",\n    \"vital\",\n    \"vivid\",\n    \"vocal\",\n    \"voice\",\n    \"void\",\n    \"volcano\",\n    \"volume\",\n    \"vote\",\n    \"voyage\",\n    \"wage\",\n    \"wagon\",\n    \"wait\",\n    \"walk\",\n    \"wall\",\n    \"walnut\",\n    \"want\",\n    \"warfare\",\n    \"warm\",\n    \"warrior\",\n    \"wash\",\n    \"wasp\",\n    \"waste\",\n    \"water\",\n    \"wave\",\n    \"way\",\n    \"wealth\",\n    \"weapon\",\n    \"wear\",\n    \"weasel\",\n    \"weather\",\n    \"web\",\n    \"wedding\",\n    \"weekend\",\n    \"weird\",\n    \"welcome\",\n    \"west\",\n    \"wet\",\n    \"whale\",\n    \"what\",\n    \"wheat\",\n    \"wheel\",\n    \"when\",\n    \"where\",\n    \"whip\",\n    \"whisper\",\n    \"wide\",\n    \"width\",\n    \"wife\",\n    \"wild\",\n    \"will\",\n    \"win\",\n    \"window\",\n    \"wine\",\n    \"wing\",\n    \"wink\",\n    \"winner\",\n    \"winter\",\n    \"wire\",\n    \"wisdom\",\n    \"wise\",\n    \"wish\",\n    \"witness\",\n    \"wolf\",\n    \"woman\",\n    \"wonder\",\n    \"wood\",\n    \"wool\",\n    \"word\",\n    \"work\",\n    \"world\",\n    \"worry\",\n    \"worth\",\n    \"wrap\",\n    \"wreck\",\n    \"wrestle\",\n    \"wrist\",\n    \"write\",\n    \"wrong\",\n    \"yard\",\n    \"year\",\n    \"yellow\",\n    \"you\",\n    \"young\",\n    \"youth\",\n    \"zebra\",\n    \"zero\",\n    \"zone\",\n    \"zoo\",\n];\nfunction bytesToBitstring(bytes) {\n    return Array.from(bytes)\n        .map((byte) => byte.toString(2).padStart(8, \"0\"))\n        .join(\"\");\n}\nfunction deriveChecksumBits(entropy) {\n    const entropyLengthBits = entropy.length * 8; // \"ENT\" (in bits)\n    const checksumLengthBits = entropyLengthBits / 32; // \"CS\" (in bits)\n    const hash = (0, sha_1.sha256)(entropy);\n    return bytesToBitstring(hash).slice(0, checksumLengthBits);\n}\nfunction bitstringToByte(bin) {\n    return parseInt(bin, 2);\n}\nconst allowedEntropyLengths = [16, 20, 24, 28, 32];\nconst allowedWordLengths = [12, 15, 18, 21, 24];\nfunction entropyToMnemonic(entropy) {\n    if (allowedEntropyLengths.indexOf(entropy.length) === -1) {\n        throw new Error(\"invalid input length\");\n    }\n    const entropyBits = bytesToBitstring(entropy);\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const chunks = bits.match(/(.{11})/g);\n    const words = chunks.map((binary) => {\n        const index = bitstringToByte(binary);\n        return wordlist[index];\n    });\n    return words.join(\" \");\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nconst invalidNumberOfWorks = \"Invalid number of words\";\nconst wordNotInWordlist = \"Found word that is not in the wordlist\";\nconst invalidEntropy = \"Invalid entropy\";\nconst invalidChecksum = \"Invalid mnemonic checksum\";\nfunction normalize(str) {\n    return str.normalize(\"NFKD\");\n}\nfunction mnemonicToEntropy(mnemonic) {\n    const words = normalize(mnemonic).split(\" \");\n    if (!allowedWordLengths.includes(words.length)) {\n        throw new Error(invalidNumberOfWorks);\n    }\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map((word) => {\n        const index = wordlist.indexOf(word);\n        if (index === -1) {\n            throw new Error(wordNotInWordlist);\n        }\n        return index.toString(2).padStart(11, \"0\");\n    })\n        .join(\"\");\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(bitstringToByte);\n    if (entropyBytes.length < 16 || entropyBytes.length > 32 || entropyBytes.length % 4 !== 0) {\n        throw new Error(invalidEntropy);\n    }\n    const entropy = Uint8Array.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits) {\n        throw new Error(invalidChecksum);\n    }\n    return entropy;\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nclass EnglishMnemonic {\n    constructor(mnemonic) {\n        if (!EnglishMnemonic.mnemonicMatcher.test(mnemonic)) {\n            throw new Error(\"Invalid mnemonic format\");\n        }\n        const words = mnemonic.split(\" \");\n        const allowedWordsLengths = [12, 15, 18, 21, 24];\n        if (allowedWordsLengths.indexOf(words.length) === -1) {\n            throw new Error(`Invalid word count in mnemonic (allowed: ${allowedWordsLengths} got: ${words.length})`);\n        }\n        for (const word of words) {\n            if (EnglishMnemonic.wordlist.indexOf(word) === -1) {\n                throw new Error(\"Mnemonic contains invalid word\");\n            }\n        }\n        // Throws with informative error message if mnemonic is not valid\n        mnemonicToEntropy(mnemonic);\n        this.data = mnemonic;\n    }\n    toString() {\n        return this.data;\n    }\n}\nexports.EnglishMnemonic = EnglishMnemonic;\nEnglishMnemonic.wordlist = wordlist;\n// list of space separated lower case words (1 or more)\nEnglishMnemonic.mnemonicMatcher = /^[a-z]+( [a-z]+)*$/;\nclass Bip39 {\n    /**\n     * Encodes raw entropy of length 16, 20, 24, 28 or 32 bytes as an English mnemonic between 12 and 24 words.\n     *\n     * | Entropy            | Words |\n     * |--------------------|-------|\n     * | 128 bit (16 bytes) |    12 |\n     * | 160 bit (20 bytes) |    15 |\n     * | 192 bit (24 bytes) |    18 |\n     * | 224 bit (28 bytes) |    21 |\n     * | 256 bit (32 bytes) |    24 |\n     *\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki#generating-the-mnemonic\n     * @param entropy The entropy to be encoded. This must be cryptographically secure.\n     */\n    static encode(entropy) {\n        return new EnglishMnemonic(entropyToMnemonic(entropy));\n    }\n    static decode(mnemonic) {\n        return mnemonicToEntropy(mnemonic.toString());\n    }\n    static async mnemonicToSeed(mnemonic, password) {\n        const mnemonicBytes = (0, encoding_1.toUtf8)(normalize(mnemonic.toString()));\n        const salt = \"mnemonic\" + (password ? normalize(password) : \"\");\n        const saltBytes = (0, encoding_1.toUtf8)(salt);\n        return (0, pbkdf2_1.pbkdf2Sha512)(mnemonicBytes, saltBytes, 2048, 64);\n    }\n}\nexports.Bip39 = Bip39;\n//# sourceMappingURL=bip39.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/hmac.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Hmac = void 0;\nclass Hmac {\n    constructor(hashFunctionConstructor, originalKey) {\n        // This implementation is based on https://en.wikipedia.org/wiki/HMAC#Implementation\n        // with the addition of incremental hashing support. Thus part of the algorithm\n        // is in the constructor and the rest in digest().\n        const blockSize = new hashFunctionConstructor().blockSize;\n        this.hash = (data) => new hashFunctionConstructor().update(data).digest();\n        let key = originalKey;\n        if (key.length > blockSize) {\n            key = this.hash(key);\n        }\n        if (key.length < blockSize) {\n            const zeroPadding = new Uint8Array(blockSize - key.length);\n            key = new Uint8Array([...key, ...zeroPadding]);\n        }\n        // eslint-disable-next-line no-bitwise\n        this.oKeyPad = key.map((keyByte) => keyByte ^ 0x5c);\n        // eslint-disable-next-line no-bitwise\n        this.iKeyPad = key.map((keyByte) => keyByte ^ 0x36);\n        this.messageHasher = new hashFunctionConstructor();\n        this.blockSize = blockSize;\n        this.update(this.iKeyPad);\n    }\n    update(data) {\n        this.messageHasher.update(data);\n        return this;\n    }\n    digest() {\n        const innerHash = this.messageHasher.digest();\n        return this.hash(new Uint8Array([...this.oKeyPad, ...innerHash]));\n    }\n}\nexports.Hmac = Hmac;\n//# sourceMappingURL=hmac.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvaG1hYy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvaG1hYy5qcz8xYjE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IbWFjID0gdm9pZCAwO1xuY2xhc3MgSG1hYyB7XG4gICAgY29uc3RydWN0b3IoaGFzaEZ1bmN0aW9uQ29uc3RydWN0b3IsIG9yaWdpbmFsS2V5KSB7XG4gICAgICAgIC8vIFRoaXMgaW1wbGVtZW50YXRpb24gaXMgYmFzZWQgb24gaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvSE1BQyNJbXBsZW1lbnRhdGlvblxuICAgICAgICAvLyB3aXRoIHRoZSBhZGRpdGlvbiBvZiBpbmNyZW1lbnRhbCBoYXNoaW5nIHN1cHBvcnQuIFRodXMgcGFydCBvZiB0aGUgYWxnb3JpdGhtXG4gICAgICAgIC8vIGlzIGluIHRoZSBjb25zdHJ1Y3RvciBhbmQgdGhlIHJlc3QgaW4gZGlnZXN0KCkuXG4gICAgICAgIGNvbnN0IGJsb2NrU2l6ZSA9IG5ldyBoYXNoRnVuY3Rpb25Db25zdHJ1Y3RvcigpLmJsb2NrU2l6ZTtcbiAgICAgICAgdGhpcy5oYXNoID0gKGRhdGEpID0+IG5ldyBoYXNoRnVuY3Rpb25Db25zdHJ1Y3RvcigpLnVwZGF0ZShkYXRhKS5kaWdlc3QoKTtcbiAgICAgICAgbGV0IGtleSA9IG9yaWdpbmFsS2V5O1xuICAgICAgICBpZiAoa2V5Lmxlbmd0aCA+IGJsb2NrU2l6ZSkge1xuICAgICAgICAgICAga2V5ID0gdGhpcy5oYXNoKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGtleS5sZW5ndGggPCBibG9ja1NpemUpIHtcbiAgICAgICAgICAgIGNvbnN0IHplcm9QYWRkaW5nID0gbmV3IFVpbnQ4QXJyYXkoYmxvY2tTaXplIC0ga2V5Lmxlbmd0aCk7XG4gICAgICAgICAgICBrZXkgPSBuZXcgVWludDhBcnJheShbLi4ua2V5LCAuLi56ZXJvUGFkZGluZ10pO1xuICAgICAgICB9XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1iaXR3aXNlXG4gICAgICAgIHRoaXMub0tleVBhZCA9IGtleS5tYXAoKGtleUJ5dGUpID0+IGtleUJ5dGUgXiAweDVjKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLWJpdHdpc2VcbiAgICAgICAgdGhpcy5pS2V5UGFkID0ga2V5Lm1hcCgoa2V5Qnl0ZSkgPT4ga2V5Qnl0ZSBeIDB4MzYpO1xuICAgICAgICB0aGlzLm1lc3NhZ2VIYXNoZXIgPSBuZXcgaGFzaEZ1bmN0aW9uQ29uc3RydWN0b3IoKTtcbiAgICAgICAgdGhpcy5ibG9ja1NpemUgPSBibG9ja1NpemU7XG4gICAgICAgIHRoaXMudXBkYXRlKHRoaXMuaUtleVBhZCk7XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIHRoaXMubWVzc2FnZUhhc2hlci51cGRhdGUoZGF0YSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIGNvbnN0IGlubmVySGFzaCA9IHRoaXMubWVzc2FnZUhhc2hlci5kaWdlc3QoKTtcbiAgICAgICAgcmV0dXJuIHRoaXMuaGFzaChuZXcgVWludDhBcnJheShbLi4udGhpcy5vS2V5UGFkLCAuLi5pbm5lckhhc2hdKSk7XG4gICAgfVxufVxuZXhwb3J0cy5IbWFjID0gSG1hYztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhtYWMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToPath = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = exports.Slip10 = exports.pathToString = exports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = exports.Secp256k1Signature = exports.ExtendedSecp256k1Signature = exports.Secp256k1 = exports.ripemd160 = exports.Ripemd160 = exports.Random = exports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.isArgon2idOptions = exports.Ed25519Keypair = exports.Ed25519 = exports.Argon2id = exports.keccak256 = exports.Keccak256 = exports.Hmac = exports.EnglishMnemonic = exports.Bip39 = void 0;\nvar bip39_1 = __webpack_require__(/*! ./bip39 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/bip39.js\");\nObject.defineProperty(exports, \"Bip39\", ({ enumerable: true, get: function () { return bip39_1.Bip39; } }));\nObject.defineProperty(exports, \"EnglishMnemonic\", ({ enumerable: true, get: function () { return bip39_1.EnglishMnemonic; } }));\nvar hmac_1 = __webpack_require__(/*! ./hmac */ \"(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\");\nObject.defineProperty(exports, \"Hmac\", ({ enumerable: true, get: function () { return hmac_1.Hmac; } }));\nvar keccak_1 = __webpack_require__(/*! ./keccak */ \"(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js\");\nObject.defineProperty(exports, \"Keccak256\", ({ enumerable: true, get: function () { return keccak_1.Keccak256; } }));\nObject.defineProperty(exports, \"keccak256\", ({ enumerable: true, get: function () { return keccak_1.keccak256; } }));\nvar libsodium_1 = __webpack_require__(/*! ./libsodium */ \"(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js\");\nObject.defineProperty(exports, \"Argon2id\", ({ enumerable: true, get: function () { return libsodium_1.Argon2id; } }));\nObject.defineProperty(exports, \"Ed25519\", ({ enumerable: true, get: function () { return libsodium_1.Ed25519; } }));\nObject.defineProperty(exports, \"Ed25519Keypair\", ({ enumerable: true, get: function () { return libsodium_1.Ed25519Keypair; } }));\nObject.defineProperty(exports, \"isArgon2idOptions\", ({ enumerable: true, get: function () { return libsodium_1.isArgon2idOptions; } }));\nObject.defineProperty(exports, \"xchacha20NonceLength\", ({ enumerable: true, get: function () { return libsodium_1.xchacha20NonceLength; } }));\nObject.defineProperty(exports, \"Xchacha20poly1305Ietf\", ({ enumerable: true, get: function () { return libsodium_1.Xchacha20poly1305Ietf; } }));\nvar random_1 = __webpack_require__(/*! ./random */ \"(ssr)/./node_modules/@cosmjs/crypto/build/random.js\");\nObject.defineProperty(exports, \"Random\", ({ enumerable: true, get: function () { return random_1.Random; } }));\nvar ripemd_1 = __webpack_require__(/*! ./ripemd */ \"(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js\");\nObject.defineProperty(exports, \"Ripemd160\", ({ enumerable: true, get: function () { return ripemd_1.Ripemd160; } }));\nObject.defineProperty(exports, \"ripemd160\", ({ enumerable: true, get: function () { return ripemd_1.ripemd160; } }));\nvar secp256k1_1 = __webpack_require__(/*! ./secp256k1 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js\");\nObject.defineProperty(exports, \"Secp256k1\", ({ enumerable: true, get: function () { return secp256k1_1.Secp256k1; } }));\nvar secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\");\nObject.defineProperty(exports, \"ExtendedSecp256k1Signature\", ({ enumerable: true, get: function () { return secp256k1signature_1.ExtendedSecp256k1Signature; } }));\nObject.defineProperty(exports, \"Secp256k1Signature\", ({ enumerable: true, get: function () { return secp256k1signature_1.Secp256k1Signature; } }));\nvar sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\nObject.defineProperty(exports, \"Sha256\", ({ enumerable: true, get: function () { return sha_1.Sha256; } }));\nObject.defineProperty(exports, \"sha256\", ({ enumerable: true, get: function () { return sha_1.sha256; } }));\nObject.defineProperty(exports, \"Sha512\", ({ enumerable: true, get: function () { return sha_1.Sha512; } }));\nObject.defineProperty(exports, \"sha512\", ({ enumerable: true, get: function () { return sha_1.sha512; } }));\nvar slip10_1 = __webpack_require__(/*! ./slip10 */ \"(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js\");\nObject.defineProperty(exports, \"pathToString\", ({ enumerable: true, get: function () { return slip10_1.pathToString; } }));\nObject.defineProperty(exports, \"Slip10\", ({ enumerable: true, get: function () { return slip10_1.Slip10; } }));\nObject.defineProperty(exports, \"Slip10Curve\", ({ enumerable: true, get: function () { return slip10_1.Slip10Curve; } }));\nObject.defineProperty(exports, \"slip10CurveFromString\", ({ enumerable: true, get: function () { return slip10_1.slip10CurveFromString; } }));\nObject.defineProperty(exports, \"Slip10RawIndex\", ({ enumerable: true, get: function () { return slip10_1.Slip10RawIndex; } }));\nObject.defineProperty(exports, \"stringToPath\", ({ enumerable: true, get: function () { return slip10_1.stringToPath; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/keccak.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.keccak256 = exports.Keccak256 = void 0;\nconst sha3_1 = __webpack_require__(/*! @noble/hashes/sha3 */ \"(ssr)/./node_modules/@noble/hashes/sha3.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Keccak256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha3_1.keccak_256.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Keccak256 = Keccak256;\n/** Convenience function equivalent to `new Keccak256(data).digest()` */\nfunction keccak256(data) {\n    return new Keccak256(data).digest();\n}\nexports.keccak256 = keccak256;\n//# sourceMappingURL=keccak.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQva2VjY2FrLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQyxlQUFlLG1CQUFPLENBQUMsc0VBQW9CO0FBQzNDLGdCQUFnQixtQkFBTyxDQUFDLG1FQUFTO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2NyeXB0by9idWlsZC9rZWNjYWsuanM/MGRhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMua2VjY2FrMjU2ID0gZXhwb3J0cy5LZWNjYWsyNTYgPSB2b2lkIDA7XG5jb25zdCBzaGEzXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGEzXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY2xhc3MgS2VjY2FrMjU2IHtcbiAgICBjb25zdHJ1Y3RvcihmaXJzdERhdGEpIHtcbiAgICAgICAgdGhpcy5ibG9ja1NpemUgPSA1MTIgLyA4O1xuICAgICAgICB0aGlzLmltcGwgPSBzaGEzXzEua2VjY2FrXzI1Ni5jcmVhdGUoKTtcbiAgICAgICAgaWYgKGZpcnN0RGF0YSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGUoZmlyc3REYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICB0aGlzLmltcGwudXBkYXRlKCgwLCB1dGlsc18xLnRvUmVhbFVpbnQ4QXJyYXkpKGRhdGEpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5kaWdlc3QoKTtcbiAgICB9XG59XG5leHBvcnRzLktlY2NhazI1NiA9IEtlY2NhazI1Njtcbi8qKiBDb252ZW5pZW5jZSBmdW5jdGlvbiBlcXVpdmFsZW50IHRvIGBuZXcgS2VjY2FrMjU2KGRhdGEpLmRpZ2VzdCgpYCAqL1xuZnVuY3Rpb24ga2VjY2FrMjU2KGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IEtlY2NhazI1NihkYXRhKS5kaWdlc3QoKTtcbn1cbmV4cG9ydHMua2VjY2FrMjU2ID0ga2VjY2FrMjU2O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9a2VjY2FrLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/keccak.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/libsodium.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\n// Keep all classes requiring libsodium-js in one file as having multiple\n// requiring of the libsodium-wrappers module currently crashes browsers\n//\n// libsodium.js API: https://gist.github.com/webmaster128/b2dbe6d54d36dd168c9fabf441b9b09c\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Xchacha20poly1305Ietf = exports.xchacha20NonceLength = exports.Ed25519 = exports.Ed25519Keypair = exports.Argon2id = exports.isArgon2idOptions = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\n// Using crypto_pwhash requires sumo. Once we migrate to a standalone\n// Argon2 implementation, we can use the normal libsodium-wrappers\n// again: https://github.com/cosmos/cosmjs/issues/1031\nconst libsodium_wrappers_sumo_1 = __importDefault(__webpack_require__(/*! libsodium-wrappers-sumo */ \"(ssr)/./node_modules/libsodium-wrappers-sumo/dist/modules-sumo/libsodium-wrappers.js\"));\nfunction isArgon2idOptions(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.outputLength !== \"number\")\n        return false;\n    if (typeof thing.opsLimit !== \"number\")\n        return false;\n    if (typeof thing.memLimitKib !== \"number\")\n        return false;\n    return true;\n}\nexports.isArgon2idOptions = isArgon2idOptions;\nclass Argon2id {\n    static async execute(password, salt, options) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        return libsodium_wrappers_sumo_1.default.crypto_pwhash(options.outputLength, password, salt, // libsodium only supports 16 byte salts and will throw when you don't respect that\n        options.opsLimit, options.memLimitKib * 1024, libsodium_wrappers_sumo_1.default.crypto_pwhash_ALG_ARGON2ID13);\n    }\n}\nexports.Argon2id = Argon2id;\nclass Ed25519Keypair {\n    // a libsodium privkey has the format `<ed25519 privkey> + <ed25519 pubkey>`\n    static fromLibsodiumPrivkey(libsodiumPrivkey) {\n        if (libsodiumPrivkey.length !== 64) {\n            throw new Error(`Unexpected key length ${libsodiumPrivkey.length}. Must be 64.`);\n        }\n        return new Ed25519Keypair(libsodiumPrivkey.slice(0, 32), libsodiumPrivkey.slice(32, 64));\n    }\n    constructor(privkey, pubkey) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n    }\n    toLibsodiumPrivkey() {\n        return new Uint8Array([...this.privkey, ...this.pubkey]);\n    }\n}\nexports.Ed25519Keypair = Ed25519Keypair;\nclass Ed25519 {\n    /**\n     * Generates a keypair deterministically from a given 32 bytes seed.\n     *\n     * This seed equals the Ed25519 private key.\n     * For implementation details see crypto_sign_seed_keypair in\n     * https://download.libsodium.org/doc/public-key_cryptography/public-key_signatures.html\n     * and diagram on https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n     */\n    static async makeKeypair(seed) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        const keypair = libsodium_wrappers_sumo_1.default.crypto_sign_seed_keypair(seed);\n        return Ed25519Keypair.fromLibsodiumPrivkey(keypair.privateKey);\n    }\n    static async createSignature(message, keyPair) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        return libsodium_wrappers_sumo_1.default.crypto_sign_detached(message, keyPair.toLibsodiumPrivkey());\n    }\n    static async verifySignature(signature, message, pubkey) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        return libsodium_wrappers_sumo_1.default.crypto_sign_verify_detached(signature, message, pubkey);\n    }\n}\nexports.Ed25519 = Ed25519;\n/**\n * Nonce length in bytes for all flavours of XChaCha20.\n *\n * @see https://libsodium.gitbook.io/doc/advanced/stream_ciphers/xchacha20#notes\n */\nexports.xchacha20NonceLength = 24;\nclass Xchacha20poly1305Ietf {\n    static async encrypt(message, key, nonce) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        const additionalData = null;\n        return libsodium_wrappers_sumo_1.default.crypto_aead_xchacha20poly1305_ietf_encrypt(message, additionalData, null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n        nonce, key);\n    }\n    static async decrypt(ciphertext, key, nonce) {\n        await libsodium_wrappers_sumo_1.default.ready;\n        const additionalData = null;\n        return libsodium_wrappers_sumo_1.default.crypto_aead_xchacha20poly1305_ietf_decrypt(null, // secret nonce: unused and should be null (https://download.libsodium.org/doc/secret-key_cryptography/aead/chacha20-poly1305/xchacha20-poly1305_construction)\n        ciphertext, additionalData, nonce, key);\n    }\n}\nexports.Xchacha20poly1305Ietf = Xchacha20poly1305Ietf;\n//# sourceMappingURL=libsodium.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvbGlic29kaXVtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsR0FBRyw0QkFBNEIsR0FBRyxlQUFlLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCLEdBQUcseUJBQXlCO0FBQ3RKLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxtQkFBTyxDQUFDLHFIQUF5QjtBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHdCQUF3QjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2NyeXB0by9idWlsZC9saWJzb2RpdW0uanM/NGU0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIEtlZXAgYWxsIGNsYXNzZXMgcmVxdWlyaW5nIGxpYnNvZGl1bS1qcyBpbiBvbmUgZmlsZSBhcyBoYXZpbmcgbXVsdGlwbGVcbi8vIHJlcXVpcmluZyBvZiB0aGUgbGlic29kaXVtLXdyYXBwZXJzIG1vZHVsZSBjdXJyZW50bHkgY3Jhc2hlcyBicm93c2Vyc1xuLy9cbi8vIGxpYnNvZGl1bS5qcyBBUEk6IGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL3dlYm1hc3RlcjEyOC9iMmRiZTZkNTRkMzZkZDE2OGM5ZmFiZjQ0MWI5YjA5Y1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5YY2hhY2hhMjBwb2x5MTMwNUlldGYgPSBleHBvcnRzLnhjaGFjaGEyME5vbmNlTGVuZ3RoID0gZXhwb3J0cy5FZDI1NTE5ID0gZXhwb3J0cy5FZDI1NTE5S2V5cGFpciA9IGV4cG9ydHMuQXJnb24yaWQgPSBleHBvcnRzLmlzQXJnb24yaWRPcHRpb25zID0gdm9pZCAwO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAY29zbWpzL3V0aWxzXCIpO1xuLy8gVXNpbmcgY3J5cHRvX3B3aGFzaCByZXF1aXJlcyBzdW1vLiBPbmNlIHdlIG1pZ3JhdGUgdG8gYSBzdGFuZGFsb25lXG4vLyBBcmdvbjIgaW1wbGVtZW50YXRpb24sIHdlIGNhbiB1c2UgdGhlIG5vcm1hbCBsaWJzb2RpdW0td3JhcHBlcnNcbi8vIGFnYWluOiBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21qcy9pc3N1ZXMvMTAzMVxuY29uc3QgbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwibGlic29kaXVtLXdyYXBwZXJzLXN1bW9cIikpO1xuZnVuY3Rpb24gaXNBcmdvbjJpZE9wdGlvbnModGhpbmcpIHtcbiAgICBpZiAoISgwLCB1dGlsc18xLmlzTm9uTnVsbE9iamVjdCkodGhpbmcpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiB0aGluZy5vdXRwdXRMZW5ndGggIT09IFwibnVtYmVyXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIHRoaW5nLm9wc0xpbWl0ICE9PSBcIm51bWJlclwiKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHR5cGVvZiB0aGluZy5tZW1MaW1pdEtpYiAhPT0gXCJudW1iZXJcIilcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiB0cnVlO1xufVxuZXhwb3J0cy5pc0FyZ29uMmlkT3B0aW9ucyA9IGlzQXJnb24yaWRPcHRpb25zO1xuY2xhc3MgQXJnb24yaWQge1xuICAgIHN0YXRpYyBhc3luYyBleGVjdXRlKHBhc3N3b3JkLCBzYWx0LCBvcHRpb25zKSB7XG4gICAgICAgIGF3YWl0IGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5yZWFkeTtcbiAgICAgICAgcmV0dXJuIGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5jcnlwdG9fcHdoYXNoKG9wdGlvbnMub3V0cHV0TGVuZ3RoLCBwYXNzd29yZCwgc2FsdCwgLy8gbGlic29kaXVtIG9ubHkgc3VwcG9ydHMgMTYgYnl0ZSBzYWx0cyBhbmQgd2lsbCB0aHJvdyB3aGVuIHlvdSBkb24ndCByZXNwZWN0IHRoYXRcbiAgICAgICAgb3B0aW9ucy5vcHNMaW1pdCwgb3B0aW9ucy5tZW1MaW1pdEtpYiAqIDEwMjQsIGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5jcnlwdG9fcHdoYXNoX0FMR19BUkdPTjJJRDEzKTtcbiAgICB9XG59XG5leHBvcnRzLkFyZ29uMmlkID0gQXJnb24yaWQ7XG5jbGFzcyBFZDI1NTE5S2V5cGFpciB7XG4gICAgLy8gYSBsaWJzb2RpdW0gcHJpdmtleSBoYXMgdGhlIGZvcm1hdCBgPGVkMjU1MTkgcHJpdmtleT4gKyA8ZWQyNTUxOSBwdWJrZXk+YFxuICAgIHN0YXRpYyBmcm9tTGlic29kaXVtUHJpdmtleShsaWJzb2RpdW1Qcml2a2V5KSB7XG4gICAgICAgIGlmIChsaWJzb2RpdW1Qcml2a2V5Lmxlbmd0aCAhPT0gNjQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBrZXkgbGVuZ3RoICR7bGlic29kaXVtUHJpdmtleS5sZW5ndGh9LiBNdXN0IGJlIDY0LmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRWQyNTUxOUtleXBhaXIobGlic29kaXVtUHJpdmtleS5zbGljZSgwLCAzMiksIGxpYnNvZGl1bVByaXZrZXkuc2xpY2UoMzIsIDY0KSk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHByaXZrZXksIHB1YmtleSkge1xuICAgICAgICB0aGlzLnByaXZrZXkgPSBwcml2a2V5O1xuICAgICAgICB0aGlzLnB1YmtleSA9IHB1YmtleTtcbiAgICB9XG4gICAgdG9MaWJzb2RpdW1Qcml2a2V5KCkge1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoWy4uLnRoaXMucHJpdmtleSwgLi4udGhpcy5wdWJrZXldKTtcbiAgICB9XG59XG5leHBvcnRzLkVkMjU1MTlLZXlwYWlyID0gRWQyNTUxOUtleXBhaXI7XG5jbGFzcyBFZDI1NTE5IHtcbiAgICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYSBrZXlwYWlyIGRldGVybWluaXN0aWNhbGx5IGZyb20gYSBnaXZlbiAzMiBieXRlcyBzZWVkLlxuICAgICAqXG4gICAgICogVGhpcyBzZWVkIGVxdWFscyB0aGUgRWQyNTUxOSBwcml2YXRlIGtleS5cbiAgICAgKiBGb3IgaW1wbGVtZW50YXRpb24gZGV0YWlscyBzZWUgY3J5cHRvX3NpZ25fc2VlZF9rZXlwYWlyIGluXG4gICAgICogaHR0cHM6Ly9kb3dubG9hZC5saWJzb2RpdW0ub3JnL2RvYy9wdWJsaWMta2V5X2NyeXB0b2dyYXBoeS9wdWJsaWMta2V5X3NpZ25hdHVyZXMuaHRtbFxuICAgICAqIGFuZCBkaWFncmFtIG9uIGh0dHBzOi8vYmxvZy5tb3ppbGxhLm9yZy93YXJuZXIvMjAxMS8xMS8yOS9lZDI1NTE5LWtleXMvXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIG1ha2VLZXlwYWlyKHNlZWQpIHtcbiAgICAgICAgYXdhaXQgbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICBjb25zdCBrZXlwYWlyID0gbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LmNyeXB0b19zaWduX3NlZWRfa2V5cGFpcihzZWVkKTtcbiAgICAgICAgcmV0dXJuIEVkMjU1MTlLZXlwYWlyLmZyb21MaWJzb2RpdW1Qcml2a2V5KGtleXBhaXIucHJpdmF0ZUtleSk7XG4gICAgfVxuICAgIHN0YXRpYyBhc3luYyBjcmVhdGVTaWduYXR1cmUobWVzc2FnZSwga2V5UGFpcikge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQucmVhZHk7XG4gICAgICAgIHJldHVybiBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQuY3J5cHRvX3NpZ25fZGV0YWNoZWQobWVzc2FnZSwga2V5UGFpci50b0xpYnNvZGl1bVByaXZrZXkoKSk7XG4gICAgfVxuICAgIHN0YXRpYyBhc3luYyB2ZXJpZnlTaWduYXR1cmUoc2lnbmF0dXJlLCBtZXNzYWdlLCBwdWJrZXkpIHtcbiAgICAgICAgYXdhaXQgbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LnJlYWR5O1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LmNyeXB0b19zaWduX3ZlcmlmeV9kZXRhY2hlZChzaWduYXR1cmUsIG1lc3NhZ2UsIHB1YmtleSk7XG4gICAgfVxufVxuZXhwb3J0cy5FZDI1NTE5ID0gRWQyNTUxOTtcbi8qKlxuICogTm9uY2UgbGVuZ3RoIGluIGJ5dGVzIGZvciBhbGwgZmxhdm91cnMgb2YgWENoYUNoYTIwLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly9saWJzb2RpdW0uZ2l0Ym9vay5pby9kb2MvYWR2YW5jZWQvc3RyZWFtX2NpcGhlcnMveGNoYWNoYTIwI25vdGVzXG4gKi9cbmV4cG9ydHMueGNoYWNoYTIwTm9uY2VMZW5ndGggPSAyNDtcbmNsYXNzIFhjaGFjaGEyMHBvbHkxMzA1SWV0ZiB7XG4gICAgc3RhdGljIGFzeW5jIGVuY3J5cHQobWVzc2FnZSwga2V5LCBub25jZSkge1xuICAgICAgICBhd2FpdCBsaWJzb2RpdW1fd3JhcHBlcnNfc3Vtb18xLmRlZmF1bHQucmVhZHk7XG4gICAgICAgIGNvbnN0IGFkZGl0aW9uYWxEYXRhID0gbnVsbDtcbiAgICAgICAgcmV0dXJuIGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5jcnlwdG9fYWVhZF94Y2hhY2hhMjBwb2x5MTMwNV9pZXRmX2VuY3J5cHQobWVzc2FnZSwgYWRkaXRpb25hbERhdGEsIG51bGwsIC8vIHNlY3JldCBub25jZTogdW51c2VkIGFuZCBzaG91bGQgYmUgbnVsbCAoaHR0cHM6Ly9kb3dubG9hZC5saWJzb2RpdW0ub3JnL2RvYy9zZWNyZXQta2V5X2NyeXB0b2dyYXBoeS9hZWFkL2NoYWNoYTIwLXBvbHkxMzA1L3hjaGFjaGEyMC1wb2x5MTMwNV9jb25zdHJ1Y3Rpb24pXG4gICAgICAgIG5vbmNlLCBrZXkpO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgZGVjcnlwdChjaXBoZXJ0ZXh0LCBrZXksIG5vbmNlKSB7XG4gICAgICAgIGF3YWl0IGxpYnNvZGl1bV93cmFwcGVyc19zdW1vXzEuZGVmYXVsdC5yZWFkeTtcbiAgICAgICAgY29uc3QgYWRkaXRpb25hbERhdGEgPSBudWxsO1xuICAgICAgICByZXR1cm4gbGlic29kaXVtX3dyYXBwZXJzX3N1bW9fMS5kZWZhdWx0LmNyeXB0b19hZWFkX3hjaGFjaGEyMHBvbHkxMzA1X2lldGZfZGVjcnlwdChudWxsLCAvLyBzZWNyZXQgbm9uY2U6IHVudXNlZCBhbmQgc2hvdWxkIGJlIG51bGwgKGh0dHBzOi8vZG93bmxvYWQubGlic29kaXVtLm9yZy9kb2Mvc2VjcmV0LWtleV9jcnlwdG9ncmFwaHkvYWVhZC9jaGFjaGEyMC1wb2x5MTMwNS94Y2hhY2hhMjAtcG9seTEzMDVfY29uc3RydWN0aW9uKVxuICAgICAgICBjaXBoZXJ0ZXh0LCBhZGRpdGlvbmFsRGF0YSwgbm9uY2UsIGtleSk7XG4gICAgfVxufVxuZXhwb3J0cy5YY2hhY2hhMjBwb2x5MTMwNUlldGYgPSBYY2hhY2hhMjBwb2x5MTMwNUlldGY7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1saWJzb2RpdW0uanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/libsodium.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/pbkdf2.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pbkdf2Sha512 = exports.pbkdf2Sha512Noble = exports.pbkdf2Sha512NodeCrypto = exports.pbkdf2Sha512Subtle = exports.getSubtle = exports.getNodeCrypto = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst pbkdf2_1 = __webpack_require__(/*! @noble/hashes/pbkdf2 */ \"(ssr)/./node_modules/@noble/hashes/pbkdf2.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/sha512.js\");\n/**\n * Returns the Node.js crypto module when available and `undefined`\n * otherwise.\n *\n * Detects an unimplemented fallback module from Webpack 5 and returns\n * `undefined` in that case.\n */\nasync function getNodeCrypto() {\n    try {\n        const nodeCrypto = await Promise.resolve().then(() => __importStar(__webpack_require__(/*! crypto */ \"crypto\")));\n        // We get `Object{default: Object{}}` as a fallback when using\n        // `crypto: false` in Webpack 5, which we interprete as unavailable.\n        if (typeof nodeCrypto === \"object\" && Object.keys(nodeCrypto).length <= 1) {\n            return undefined;\n        }\n        return nodeCrypto;\n    }\n    catch {\n        return undefined;\n    }\n}\nexports.getNodeCrypto = getNodeCrypto;\nasync function getSubtle() {\n    // From Node.js 15 onwards, webcrypto is available in globalThis.\n    // In version 15 and 16 this was stored under the webcrypto key.\n    // With Node.js 17 it was moved to the same locations where browsers\n    // make it available.\n    // Loading `require(\"crypto\")` here seems unnecessary since it only\n    // causes issues with bundlers and does not increase compatibility.\n    // Browsers and Node.js 17+\n    let subtle = globalThis?.crypto?.subtle;\n    // Node.js 15+\n    if (!subtle)\n        subtle = globalThis?.crypto?.webcrypto?.subtle;\n    return subtle;\n}\nexports.getSubtle = getSubtle;\nasync function pbkdf2Sha512Subtle(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nsubtle, secret, salt, iterations, keylen) {\n    (0, utils_1.assert)(subtle, \"Argument subtle is falsy\");\n    (0, utils_1.assert)(typeof subtle === \"object\", \"Argument subtle is not of type object\");\n    (0, utils_1.assert)(typeof subtle.importKey === \"function\", \"subtle.importKey is not a function\");\n    (0, utils_1.assert)(typeof subtle.deriveBits === \"function\", \"subtle.deriveBits is not a function\");\n    return subtle.importKey(\"raw\", secret, { name: \"PBKDF2\" }, false, [\"deriveBits\"]).then((key) => subtle\n        .deriveBits({\n        name: \"PBKDF2\",\n        salt: salt,\n        iterations: iterations,\n        hash: { name: \"SHA-512\" },\n    }, key, keylen * 8)\n        .then((buffer) => new Uint8Array(buffer)));\n}\nexports.pbkdf2Sha512Subtle = pbkdf2Sha512Subtle;\n/**\n * Implements pbkdf2-sha512 using the Node.js crypro module (`import \"crypto\"`).\n * This does not use subtle from [Crypto](https://developer.mozilla.org/en-US/docs/Web/API/Crypto).\n */\nasync function pbkdf2Sha512NodeCrypto(\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nnodeCrypto, secret, salt, iterations, keylen) {\n    (0, utils_1.assert)(nodeCrypto, \"Argument nodeCrypto is falsy\");\n    (0, utils_1.assert)(typeof nodeCrypto === \"object\", \"Argument nodeCrypto is not of type object\");\n    (0, utils_1.assert)(typeof nodeCrypto.pbkdf2 === \"function\", \"nodeCrypto.pbkdf2 is not a function\");\n    return new Promise((resolve, reject) => {\n        nodeCrypto.pbkdf2(secret, salt, iterations, keylen, \"sha512\", (error, result) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(Uint8Array.from(result));\n            }\n        });\n    });\n}\nexports.pbkdf2Sha512NodeCrypto = pbkdf2Sha512NodeCrypto;\nasync function pbkdf2Sha512Noble(secret, salt, iterations, keylen) {\n    return (0, pbkdf2_1.pbkdf2Async)(sha512_1.sha512, secret, salt, { c: iterations, dkLen: keylen });\n}\nexports.pbkdf2Sha512Noble = pbkdf2Sha512Noble;\n/**\n * A pbkdf2 implementation for BIP39. This is not exported at package level and thus a private API.\n */\nasync function pbkdf2Sha512(secret, salt, iterations, keylen) {\n    const subtle = await getSubtle();\n    if (subtle) {\n        return pbkdf2Sha512Subtle(subtle, secret, salt, iterations, keylen);\n    }\n    else {\n        const nodeCrypto = await getNodeCrypto();\n        if (nodeCrypto) {\n            return pbkdf2Sha512NodeCrypto(nodeCrypto, secret, salt, iterations, keylen);\n        }\n        else {\n            return pbkdf2Sha512Noble(secret, salt, iterations, keylen);\n        }\n    }\n}\nexports.pbkdf2Sha512 = pbkdf2Sha512;\n//# sourceMappingURL=pbkdf2.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/pbkdf2.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/random.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/random.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Random = void 0;\nclass Random {\n    /**\n     * Returns `count` cryptographically secure random bytes\n     */\n    static getBytes(count) {\n        try {\n            const globalObject = typeof window === \"object\" ? window : self;\n            const cryptoApi = typeof globalObject.crypto !== \"undefined\" ? globalObject.crypto : globalObject.msCrypto;\n            const out = new Uint8Array(count);\n            cryptoApi.getRandomValues(out);\n            return out;\n        }\n        catch {\n            try {\n                // eslint-disable-next-line @typescript-eslint/no-var-requires\n                const crypto = __webpack_require__(/*! crypto */ \"crypto\");\n                return new Uint8Array([...crypto.randomBytes(count)]);\n            }\n            catch {\n                throw new Error(\"No secure random number generator found\");\n            }\n        }\n    }\n}\nexports.Random = Random;\n//# sourceMappingURL=random.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmFuZG9tLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsbUJBQU8sQ0FBQyxzQkFBUTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2NyeXB0by9idWlsZC9yYW5kb20uanM/Mzk3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmFuZG9tID0gdm9pZCAwO1xuY2xhc3MgUmFuZG9tIHtcbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGBjb3VudGAgY3J5cHRvZ3JhcGhpY2FsbHkgc2VjdXJlIHJhbmRvbSBieXRlc1xuICAgICAqL1xuICAgIHN0YXRpYyBnZXRCeXRlcyhjb3VudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgZ2xvYmFsT2JqZWN0ID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJvYmplY3RcIiA/IHdpbmRvdyA6IHNlbGY7XG4gICAgICAgICAgICBjb25zdCBjcnlwdG9BcGkgPSB0eXBlb2YgZ2xvYmFsT2JqZWN0LmNyeXB0byAhPT0gXCJ1bmRlZmluZWRcIiA/IGdsb2JhbE9iamVjdC5jcnlwdG8gOiBnbG9iYWxPYmplY3QubXNDcnlwdG87XG4gICAgICAgICAgICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShjb3VudCk7XG4gICAgICAgICAgICBjcnlwdG9BcGkuZ2V0UmFuZG9tVmFsdWVzKG91dCk7XG4gICAgICAgICAgICByZXR1cm4gb3V0O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby12YXItcmVxdWlyZXNcbiAgICAgICAgICAgICAgICBjb25zdCBjcnlwdG8gPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShbLi4uY3J5cHRvLnJhbmRvbUJ5dGVzKGNvdW50KV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHNlY3VyZSByYW5kb20gbnVtYmVyIGdlbmVyYXRvciBmb3VuZFwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUmFuZG9tID0gUmFuZG9tO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmFuZG9tLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/random.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/ripemd.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ripemd160 = exports.Ripemd160 = void 0;\nconst ripemd160_1 = __webpack_require__(/*! @noble/hashes/ripemd160 */ \"(ssr)/./node_modules/@noble/hashes/ripemd160.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Ripemd160 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = ripemd160_1.ripemd160.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Ripemd160 = Ripemd160;\n/** Convenience function equivalent to `new Ripemd160(data).digest()` */\nfunction ripemd160(data) {\n    return new Ripemd160(data).digest();\n}\nexports.ripemd160 = ripemd160;\n//# sourceMappingURL=ripemd.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvcmlwZW1kLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGlCQUFpQjtBQUNyQyxvQkFBb0IsbUJBQU8sQ0FBQyxnRkFBeUI7QUFDckQsZ0JBQWdCLG1CQUFPLENBQUMsbUVBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvY3J5cHRvL2J1aWxkL3JpcGVtZC5qcz80ZjE4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5yaXBlbWQxNjAgPSBleHBvcnRzLlJpcGVtZDE2MCA9IHZvaWQgMDtcbmNvbnN0IHJpcGVtZDE2MF8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvcmlwZW1kMTYwXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzXCIpO1xuY2xhc3MgUmlwZW1kMTYwIHtcbiAgICBjb25zdHJ1Y3RvcihmaXJzdERhdGEpIHtcbiAgICAgICAgdGhpcy5ibG9ja1NpemUgPSA1MTIgLyA4O1xuICAgICAgICB0aGlzLmltcGwgPSByaXBlbWQxNjBfMS5yaXBlbWQxNjAuY3JlYXRlKCk7XG4gICAgICAgIGlmIChmaXJzdERhdGEpIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlKGZpcnN0RGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBkYXRlKGRhdGEpIHtcbiAgICAgICAgdGhpcy5pbXBsLnVwZGF0ZSgoMCwgdXRpbHNfMS50b1JlYWxVaW50OEFycmF5KShkYXRhKSk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBkaWdlc3QoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmltcGwuZGlnZXN0KCk7XG4gICAgfVxufVxuZXhwb3J0cy5SaXBlbWQxNjAgPSBSaXBlbWQxNjA7XG4vKiogQ29udmVuaWVuY2UgZnVuY3Rpb24gZXF1aXZhbGVudCB0byBgbmV3IFJpcGVtZDE2MChkYXRhKS5kaWdlc3QoKWAgKi9cbmZ1bmN0aW9uIHJpcGVtZDE2MChkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBSaXBlbWQxNjAoZGF0YSkuZGlnZXN0KCk7XG59XG5leHBvcnRzLnJpcGVtZDE2MCA9IHJpcGVtZDE2MDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJpcGVtZC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/ripemd.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Secp256k1 = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst secp256k1signature_1 = __webpack_require__(/*! ./secp256k1signature */ \"(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\");\nconst secp256k1 = new elliptic_1.default.ec(\"secp256k1\");\nconst secp256k1N = new bn_js_1.default(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", \"hex\");\nclass Secp256k1 {\n    /**\n     * Takes a 32 byte private key and returns a privkey/pubkey pair.\n     *\n     * The resulting pubkey is uncompressed. For the use in Cosmos it should\n     * be compressed first using `Secp256k1.compressPubkey`.\n     */\n    static async makeKeypair(privkey) {\n        if (privkey.length !== 32) {\n            // is this check missing in secp256k1.validatePrivateKey?\n            // https://github.com/bitjson/bitcoin-ts/issues/4\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        const keypair = secp256k1.keyFromPrivate(privkey);\n        if (keypair.validate().result !== true) {\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        // range test that is not part of the elliptic implementation\n        const privkeyAsBigInteger = new bn_js_1.default(privkey);\n        if (privkeyAsBigInteger.gte(secp256k1N)) {\n            // not strictly smaller than N\n            throw new Error(\"input data is not a valid secp256k1 private key\");\n        }\n        const out = {\n            privkey: (0, encoding_1.fromHex)(keypair.getPrivate(\"hex\")),\n            // encodes uncompressed as\n            // - 1-byte prefix \"04\"\n            // - 32-byte x coordinate\n            // - 32-byte y coordinate\n            pubkey: Uint8Array.from(keypair.getPublic(\"array\")),\n        };\n        return out;\n    }\n    /**\n     * Creates a signature that is\n     * - deterministic (RFC 6979)\n     * - lowS signature\n     * - DER encoded\n     */\n    static async createSignature(messageHash, privkey) {\n        if (messageHash.length === 0) {\n            throw new Error(\"Message hash must not be empty\");\n        }\n        if (messageHash.length > 32) {\n            throw new Error(\"Message hash length must not exceed 32 bytes\");\n        }\n        const keypair = secp256k1.keyFromPrivate(privkey);\n        // the `canonical` option ensures creation of lowS signature representations\n        const { r, s, recoveryParam } = keypair.sign(messageHash, { canonical: true });\n        if (typeof recoveryParam !== \"number\")\n            throw new Error(\"Recovery param missing\");\n        return new secp256k1signature_1.ExtendedSecp256k1Signature(Uint8Array.from(r.toArray()), Uint8Array.from(s.toArray()), recoveryParam);\n    }\n    static async verifySignature(signature, messageHash, pubkey) {\n        if (messageHash.length === 0) {\n            throw new Error(\"Message hash must not be empty\");\n        }\n        if (messageHash.length > 32) {\n            throw new Error(\"Message hash length must not exceed 32 bytes\");\n        }\n        const keypair = secp256k1.keyFromPublic(pubkey);\n        // From https://github.com/indutny/elliptic:\n        //\n        //     Sign the message's hash (input must be an array, or a hex-string)\n        //\n        //     Signature MUST be either:\n        //     1) DER-encoded signature as hex-string; or\n        //     2) DER-encoded signature as buffer; or\n        //     3) object with two hex-string properties (r and s); or\n        //     4) object with two buffer properties (r and s)\n        //\n        // Uint8Array is not a Buffer, but elliptic seems to be happy with the interface\n        // common to both types. Uint8Array is not an array of ints but the interface is\n        // similar\n        try {\n            return keypair.verify(messageHash, signature.toDer());\n        }\n        catch (error) {\n            return false;\n        }\n    }\n    static recoverPubkey(signature, messageHash) {\n        const signatureForElliptic = { r: (0, encoding_1.toHex)(signature.r()), s: (0, encoding_1.toHex)(signature.s()) };\n        const point = secp256k1.recoverPubKey(messageHash, signatureForElliptic, signature.recovery);\n        const keypair = secp256k1.keyFromPublic(point);\n        return (0, encoding_1.fromHex)(keypair.getPublic(false, \"hex\"));\n    }\n    /**\n     * Takes a compressed or uncompressed pubkey and return a compressed one.\n     *\n     * This function is idempotent.\n     */\n    static compressPubkey(pubkey) {\n        switch (pubkey.length) {\n            case 33:\n                return pubkey;\n            case 65:\n                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, \"array\"));\n            default:\n                throw new Error(\"Invalid pubkey length\");\n        }\n    }\n    /**\n     * Takes a compressed or uncompressed pubkey and returns an uncompressed one.\n     *\n     * This function is idempotent.\n     */\n    static uncompressPubkey(pubkey) {\n        switch (pubkey.length) {\n            case 33:\n                return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(false, \"array\"));\n            case 65:\n                return pubkey;\n            default:\n                throw new Error(\"Invalid pubkey length\");\n        }\n    }\n    static trimRecoveryByte(signature) {\n        switch (signature.length) {\n            case 64:\n                return signature;\n            case 65:\n                return signature.slice(0, 64);\n            default:\n                throw new Error(\"Invalid signature length\");\n        }\n    }\n}\nexports.Secp256k1 = Secp256k1;\n//# sourceMappingURL=secp256k1.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/secp256k1signature.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ExtendedSecp256k1Signature = exports.Secp256k1Signature = void 0;\nfunction trimLeadingNullBytes(inData) {\n    let numberOfLeadingNullBytes = 0;\n    for (const byte of inData) {\n        if (byte === 0x00) {\n            numberOfLeadingNullBytes++;\n        }\n        else {\n            break;\n        }\n    }\n    return inData.slice(numberOfLeadingNullBytes);\n}\nconst derTagInteger = 0x02;\nclass Secp256k1Signature {\n    /**\n     * Takes the pair of integers (r, s) as 2x32 byte of binary data.\n     *\n     * Note: This is the format Cosmos SDK uses natively.\n     *\n     * @param data a 64 byte value containing integers r and s.\n     */\n    static fromFixedLength(data) {\n        if (data.length !== 64) {\n            throw new Error(`Got invalid data length: ${data.length}. Expected 2x 32 bytes for the pair (r, s)`);\n        }\n        return new Secp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)));\n    }\n    static fromDer(data) {\n        let pos = 0;\n        if (data[pos++] !== 0x30) {\n            throw new Error(\"Prefix 0x30 expected\");\n        }\n        const bodyLength = data[pos++];\n        if (data.length - pos !== bodyLength) {\n            throw new Error(\"Data length mismatch detected\");\n        }\n        // r\n        const rTag = data[pos++];\n        if (rTag !== derTagInteger) {\n            throw new Error(\"INTEGER tag expected\");\n        }\n        const rLength = data[pos++];\n        if (rLength >= 0x80) {\n            throw new Error(\"Decoding length values above 127 not supported\");\n        }\n        const rData = data.slice(pos, pos + rLength);\n        pos += rLength;\n        // s\n        const sTag = data[pos++];\n        if (sTag !== derTagInteger) {\n            throw new Error(\"INTEGER tag expected\");\n        }\n        const sLength = data[pos++];\n        if (sLength >= 0x80) {\n            throw new Error(\"Decoding length values above 127 not supported\");\n        }\n        const sData = data.slice(pos, pos + sLength);\n        pos += sLength;\n        return new Secp256k1Signature(\n        // r/s data can contain leading 0 bytes to express integers being non-negative in DER\n        trimLeadingNullBytes(rData), trimLeadingNullBytes(sData));\n    }\n    constructor(r, s) {\n        if (r.length > 32 || r.length === 0 || r[0] === 0x00) {\n            throw new Error(\"Unsigned integer r must be encoded as unpadded big endian.\");\n        }\n        if (s.length > 32 || s.length === 0 || s[0] === 0x00) {\n            throw new Error(\"Unsigned integer s must be encoded as unpadded big endian.\");\n        }\n        this.data = {\n            r: r,\n            s: s,\n        };\n    }\n    r(length) {\n        if (length === undefined) {\n            return this.data.r;\n        }\n        else {\n            const paddingLength = length - this.data.r.length;\n            if (paddingLength < 0) {\n                throw new Error(\"Length too small to hold parameter r\");\n            }\n            const padding = new Uint8Array(paddingLength);\n            return new Uint8Array([...padding, ...this.data.r]);\n        }\n    }\n    s(length) {\n        if (length === undefined) {\n            return this.data.s;\n        }\n        else {\n            const paddingLength = length - this.data.s.length;\n            if (paddingLength < 0) {\n                throw new Error(\"Length too small to hold parameter s\");\n            }\n            const padding = new Uint8Array(paddingLength);\n            return new Uint8Array([...padding, ...this.data.s]);\n        }\n    }\n    toFixedLength() {\n        return new Uint8Array([...this.r(32), ...this.s(32)]);\n    }\n    toDer() {\n        // DER supports negative integers but our data is unsigned. Thus we need to prepend\n        // a leading 0 byte when the higest bit is set to differentiate nagative values\n        const rEncoded = this.data.r[0] >= 0x80 ? new Uint8Array([0, ...this.data.r]) : this.data.r;\n        const sEncoded = this.data.s[0] >= 0x80 ? new Uint8Array([0, ...this.data.s]) : this.data.s;\n        const rLength = rEncoded.length;\n        const sLength = sEncoded.length;\n        const data = new Uint8Array([derTagInteger, rLength, ...rEncoded, derTagInteger, sLength, ...sEncoded]);\n        return new Uint8Array([0x30, data.length, ...data]);\n    }\n}\nexports.Secp256k1Signature = Secp256k1Signature;\n/**\n * A Secp256k1Signature plus the recovery parameter\n */\nclass ExtendedSecp256k1Signature extends Secp256k1Signature {\n    /**\n     * Decode extended signature from the simple fixed length encoding\n     * described in toFixedLength().\n     */\n    static fromFixedLength(data) {\n        if (data.length !== 65) {\n            throw new Error(`Got invalid data length ${data.length}. Expected 32 + 32 + 1`);\n        }\n        return new ExtendedSecp256k1Signature(trimLeadingNullBytes(data.slice(0, 32)), trimLeadingNullBytes(data.slice(32, 64)), data[64]);\n    }\n    constructor(r, s, recovery) {\n        super(r, s);\n        if (!Number.isInteger(recovery)) {\n            throw new Error(\"The recovery parameter must be an integer.\");\n        }\n        if (recovery < 0 || recovery > 4) {\n            throw new Error(\"The recovery parameter must be one of 0, 1, 2, 3.\");\n        }\n        this.recovery = recovery;\n    }\n    /**\n     * A simple custom encoding that encodes the extended signature as\n     * r (32 bytes) | s (32 bytes) | recovery param (1 byte)\n     * where | denotes concatenation of bonary data.\n     */\n    toFixedLength() {\n        return new Uint8Array([...this.r(32), ...this.s(32), this.recovery]);\n    }\n}\nexports.ExtendedSecp256k1Signature = ExtendedSecp256k1Signature;\n//# sourceMappingURL=secp256k1signature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/secp256k1signature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/sha.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/sha.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sha512 = exports.Sha512 = exports.sha256 = exports.Sha256 = void 0;\nconst sha256_1 = __webpack_require__(/*! @noble/hashes/sha256 */ \"(ssr)/./node_modules/@noble/hashes/sha256.js\");\nconst sha512_1 = __webpack_require__(/*! @noble/hashes/sha512 */ \"(ssr)/./node_modules/@noble/hashes/sha512.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\");\nclass Sha256 {\n    constructor(firstData) {\n        this.blockSize = 512 / 8;\n        this.impl = sha256_1.sha256.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Sha256 = Sha256;\n/** Convenience function equivalent to `new Sha256(data).digest()` */\nfunction sha256(data) {\n    return new Sha256(data).digest();\n}\nexports.sha256 = sha256;\nclass Sha512 {\n    constructor(firstData) {\n        this.blockSize = 1024 / 8;\n        this.impl = sha512_1.sha512.create();\n        if (firstData) {\n            this.update(firstData);\n        }\n    }\n    update(data) {\n        this.impl.update((0, utils_1.toRealUint8Array)(data));\n        return this;\n    }\n    digest() {\n        return this.impl.digest();\n    }\n}\nexports.Sha512 = Sha512;\n/** Convenience function equivalent to `new Sha512(data).digest()` */\nfunction sha512(data) {\n    return new Sha512(data).digest();\n}\nexports.sha512 = sha512;\n//# sourceMappingURL=sha.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvc2hhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGNBQWM7QUFDakUsaUJBQWlCLG1CQUFPLENBQUMsMEVBQXNCO0FBQy9DLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFzQjtBQUMvQyxnQkFBZ0IsbUJBQU8sQ0FBQyxtRUFBUztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvc2hhLmpzPzI1MTQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNoYTUxMiA9IGV4cG9ydHMuU2hhNTEyID0gZXhwb3J0cy5zaGEyNTYgPSBleHBvcnRzLlNoYTI1NiA9IHZvaWQgMDtcbmNvbnN0IHNoYTI1Nl8xID0gcmVxdWlyZShcIkBub2JsZS9oYXNoZXMvc2hhMjU2XCIpO1xuY29uc3Qgc2hhNTEyXzEgPSByZXF1aXJlKFwiQG5vYmxlL2hhc2hlcy9zaGE1MTJcIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIi4vdXRpbHNcIik7XG5jbGFzcyBTaGEyNTYge1xuICAgIGNvbnN0cnVjdG9yKGZpcnN0RGF0YSkge1xuICAgICAgICB0aGlzLmJsb2NrU2l6ZSA9IDUxMiAvIDg7XG4gICAgICAgIHRoaXMuaW1wbCA9IHNoYTI1Nl8xLnNoYTI1Ni5jcmVhdGUoKTtcbiAgICAgICAgaWYgKGZpcnN0RGF0YSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGUoZmlyc3REYXRhKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cGRhdGUoZGF0YSkge1xuICAgICAgICB0aGlzLmltcGwudXBkYXRlKCgwLCB1dGlsc18xLnRvUmVhbFVpbnQ4QXJyYXkpKGRhdGEpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIGRpZ2VzdCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuaW1wbC5kaWdlc3QoKTtcbiAgICB9XG59XG5leHBvcnRzLlNoYTI1NiA9IFNoYTI1Njtcbi8qKiBDb252ZW5pZW5jZSBmdW5jdGlvbiBlcXVpdmFsZW50IHRvIGBuZXcgU2hhMjU2KGRhdGEpLmRpZ2VzdCgpYCAqL1xuZnVuY3Rpb24gc2hhMjU2KGRhdGEpIHtcbiAgICByZXR1cm4gbmV3IFNoYTI1NihkYXRhKS5kaWdlc3QoKTtcbn1cbmV4cG9ydHMuc2hhMjU2ID0gc2hhMjU2O1xuY2xhc3MgU2hhNTEyIHtcbiAgICBjb25zdHJ1Y3RvcihmaXJzdERhdGEpIHtcbiAgICAgICAgdGhpcy5ibG9ja1NpemUgPSAxMDI0IC8gODtcbiAgICAgICAgdGhpcy5pbXBsID0gc2hhNTEyXzEuc2hhNTEyLmNyZWF0ZSgpO1xuICAgICAgICBpZiAoZmlyc3REYXRhKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZShmaXJzdERhdGEpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHVwZGF0ZShkYXRhKSB7XG4gICAgICAgIHRoaXMuaW1wbC51cGRhdGUoKDAsIHV0aWxzXzEudG9SZWFsVWludDhBcnJheSkoZGF0YSkpO1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgZGlnZXN0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbXBsLmRpZ2VzdCgpO1xuICAgIH1cbn1cbmV4cG9ydHMuU2hhNTEyID0gU2hhNTEyO1xuLyoqIENvbnZlbmllbmNlIGZ1bmN0aW9uIGVxdWl2YWxlbnQgdG8gYG5ldyBTaGE1MTIoZGF0YSkuZGlnZXN0KClgICovXG5mdW5jdGlvbiBzaGE1MTIoZGF0YSkge1xuICAgIHJldHVybiBuZXcgU2hhNTEyKGRhdGEpLmRpZ2VzdCgpO1xufVxuZXhwb3J0cy5zaGE1MTIgPSBzaGE1MTI7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zaGEuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/slip10.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.stringToPath = exports.pathToString = exports.Slip10 = exports.Slip10RawIndex = exports.slip10CurveFromString = exports.Slip10Curve = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst elliptic_1 = __importDefault(__webpack_require__(/*! elliptic */ \"(ssr)/./node_modules/elliptic/lib/elliptic.js\"));\nconst hmac_1 = __webpack_require__(/*! ./hmac */ \"(ssr)/./node_modules/@cosmjs/crypto/build/hmac.js\");\nconst sha_1 = __webpack_require__(/*! ./sha */ \"(ssr)/./node_modules/@cosmjs/crypto/build/sha.js\");\n/**\n * Raw values must match the curve string in SLIP-0010 master key generation\n *\n * @see https://github.com/satoshilabs/slips/blob/master/slip-0010.md#master-key-generation\n */\nvar Slip10Curve;\n(function (Slip10Curve) {\n    Slip10Curve[\"Secp256k1\"] = \"Bitcoin seed\";\n    Slip10Curve[\"Ed25519\"] = \"ed25519 seed\";\n})(Slip10Curve = exports.Slip10Curve || (exports.Slip10Curve = {}));\n/**\n * Reverse mapping of Slip10Curve\n */\nfunction slip10CurveFromString(curveString) {\n    switch (curveString) {\n        case Slip10Curve.Ed25519:\n            return Slip10Curve.Ed25519;\n        case Slip10Curve.Secp256k1:\n            return Slip10Curve.Secp256k1;\n        default:\n            throw new Error(`Unknown curve string: '${curveString}'`);\n    }\n}\nexports.slip10CurveFromString = slip10CurveFromString;\nclass Slip10RawIndex extends math_1.Uint32 {\n    static hardened(hardenedIndex) {\n        return new Slip10RawIndex(hardenedIndex + 2 ** 31);\n    }\n    static normal(normalIndex) {\n        return new Slip10RawIndex(normalIndex);\n    }\n    isHardened() {\n        return this.data >= 2 ** 31;\n    }\n}\nexports.Slip10RawIndex = Slip10RawIndex;\nconst secp256k1 = new elliptic_1.default.ec(\"secp256k1\");\n// Universal private key derivation accoring to\n// https://github.com/satoshilabs/slips/blob/master/slip-0010.md\nclass Slip10 {\n    static derivePath(curve, seed, path) {\n        let result = this.master(curve, seed);\n        for (const rawIndex of path) {\n            result = this.child(curve, result.privkey, result.chainCode, rawIndex);\n        }\n        return result;\n    }\n    static master(curve, seed) {\n        const i = new hmac_1.Hmac(sha_1.Sha512, (0, encoding_1.toAscii)(curve)).update(seed).digest();\n        const il = i.slice(0, 32);\n        const ir = i.slice(32, 64);\n        if (curve !== Slip10Curve.Ed25519 && (this.isZero(il) || this.isGteN(curve, il))) {\n            return this.master(curve, i);\n        }\n        return {\n            chainCode: ir,\n            privkey: il,\n        };\n    }\n    static child(curve, parentPrivkey, parentChainCode, rawIndex) {\n        let i;\n        if (rawIndex.isHardened()) {\n            const payload = new Uint8Array([0x00, ...parentPrivkey, ...rawIndex.toBytesBigEndian()]);\n            i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(payload).digest();\n        }\n        else {\n            if (curve === Slip10Curve.Ed25519) {\n                throw new Error(\"Normal keys are not allowed with ed25519\");\n            }\n            else {\n                // Step 1 of https://github.com/satoshilabs/slips/blob/master/slip-0010.md#private-parent-key--private-child-key\n                // Calculate I = HMAC-SHA512(Key = c_par, Data = ser_P(point(k_par)) || ser_32(i)).\n                // where the functions point() and ser_p() are defined in BIP-0032\n                const data = new Uint8Array([\n                    ...Slip10.serializedPoint(curve, new bn_js_1.default(parentPrivkey)),\n                    ...rawIndex.toBytesBigEndian(),\n                ]);\n                i = new hmac_1.Hmac(sha_1.Sha512, parentChainCode).update(data).digest();\n            }\n        }\n        return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i);\n    }\n    /**\n     * Implementation of ser_P(point(k_par)) from BIP-0032\n     *\n     * @see https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n     */\n    static serializedPoint(curve, p) {\n        switch (curve) {\n            case Slip10Curve.Secp256k1:\n                return (0, encoding_1.fromHex)(secp256k1.g.mul(p).encodeCompressed(\"hex\"));\n            default:\n                throw new Error(\"curve not supported\");\n        }\n    }\n    static childImpl(curve, parentPrivkey, parentChainCode, rawIndex, i) {\n        // step 2 (of the Private parent key → private child key algorithm)\n        const il = i.slice(0, 32);\n        const ir = i.slice(32, 64);\n        // step 3\n        const returnChainCode = ir;\n        // step 4\n        if (curve === Slip10Curve.Ed25519) {\n            return {\n                chainCode: returnChainCode,\n                privkey: il,\n            };\n        }\n        // step 5\n        const n = this.n(curve);\n        const returnChildKeyAsNumber = new bn_js_1.default(il).add(new bn_js_1.default(parentPrivkey)).mod(n);\n        const returnChildKey = Uint8Array.from(returnChildKeyAsNumber.toArray(\"be\", 32));\n        // step 6\n        if (this.isGteN(curve, il) || this.isZero(returnChildKey)) {\n            const newI = new hmac_1.Hmac(sha_1.Sha512, parentChainCode)\n                .update(new Uint8Array([0x01, ...ir, ...rawIndex.toBytesBigEndian()]))\n                .digest();\n            return this.childImpl(curve, parentPrivkey, parentChainCode, rawIndex, newI);\n        }\n        // step 7\n        return {\n            chainCode: returnChainCode,\n            privkey: returnChildKey,\n        };\n    }\n    static isZero(privkey) {\n        return privkey.every((byte) => byte === 0);\n    }\n    static isGteN(curve, privkey) {\n        const keyAsNumber = new bn_js_1.default(privkey);\n        return keyAsNumber.gte(this.n(curve));\n    }\n    static n(curve) {\n        switch (curve) {\n            case Slip10Curve.Secp256k1:\n                return new bn_js_1.default(\"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141\", 16);\n            default:\n                throw new Error(\"curve not supported\");\n        }\n    }\n}\nexports.Slip10 = Slip10;\nfunction pathToString(path) {\n    return path.reduce((current, component) => {\n        const componentString = component.isHardened()\n            ? `${component.toNumber() - 2 ** 31}'`\n            : component.toString();\n        return current + \"/\" + componentString;\n    }, \"m\");\n}\nexports.pathToString = pathToString;\nfunction stringToPath(input) {\n    if (!input.startsWith(\"m\"))\n        throw new Error(\"Path string must start with 'm'\");\n    let rest = input.slice(1);\n    const out = new Array();\n    while (rest) {\n        const match = rest.match(/^\\/([0-9]+)('?)/);\n        if (!match)\n            throw new Error(\"Syntax error while reading path component\");\n        const [fullMatch, numberString, apostrophe] = match;\n        const value = math_1.Uint53.fromString(numberString).toNumber();\n        if (value >= 2 ** 31)\n            throw new Error(\"Component value too high. Must not exceed 2**31-1.\");\n        if (apostrophe)\n            out.push(Slip10RawIndex.hardened(value));\n        else\n            out.push(Slip10RawIndex.normal(value));\n        rest = rest.slice(fullMatch.length);\n    }\n    return out;\n}\nexports.stringToPath = stringToPath;\n//# sourceMappingURL=slip10.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/slip10.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/crypto/build/utils.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/crypto/build/utils.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toRealUint8Array = void 0;\n// See https://github.com/paulmillr/noble-hashes/issues/25 for why this is needed\nfunction toRealUint8Array(data) {\n    if (data instanceof Uint8Array)\n        return data;\n    else\n        return Uint8Array.from(data);\n}\nexports.toRealUint8Array = toRealUint8Array;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9jcnlwdG8vYnVpbGQvdXRpbHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2NyeXB0by9idWlsZC91dGlscy5qcz80MGQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b1JlYWxVaW50OEFycmF5ID0gdm9pZCAwO1xuLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9wYXVsbWlsbHIvbm9ibGUtaGFzaGVzL2lzc3Vlcy8yNSBmb3Igd2h5IHRoaXMgaXMgbmVlZGVkXG5mdW5jdGlvbiB0b1JlYWxVaW50OEFycmF5KGRhdGEpIHtcbiAgICBpZiAoZGF0YSBpbnN0YW5jZW9mIFVpbnQ4QXJyYXkpXG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbShkYXRhKTtcbn1cbmV4cG9ydHMudG9SZWFsVWludDhBcnJheSA9IHRvUmVhbFVpbnQ4QXJyYXk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD11dGlscy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/crypto/build/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/ascii.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromAscii = exports.toAscii = void 0;\nfunction toAscii(input) {\n    const toNums = (str) => str.split(\"\").map((x) => {\n        const charCode = x.charCodeAt(0);\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (charCode < 0x20 || charCode > 0x7e) {\n            throw new Error(\"Cannot encode character that is out of printable ASCII range: \" + charCode);\n        }\n        return charCode;\n    });\n    return Uint8Array.from(toNums(input));\n}\nexports.toAscii = toAscii;\nfunction fromAscii(data) {\n    const fromNums = (listOfNumbers) => listOfNumbers.map((x) => {\n        // 0x00–0x1F control characters\n        // 0x20–0x7E printable characters\n        // 0x7F delete character\n        // 0x80–0xFF out of 7 bit ascii range\n        if (x < 0x20 || x > 0x7e) {\n            throw new Error(\"Cannot decode character that is out of printable ASCII range: \" + x);\n        }\n        return String.fromCharCode(x);\n    });\n    return fromNums(Array.from(data)).join(\"\");\n}\nexports.fromAscii = fromAscii;\n//# sourceMappingURL=ascii.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9hc2NpaS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL2FzY2lpLmpzPzk0MTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZyb21Bc2NpaSA9IGV4cG9ydHMudG9Bc2NpaSA9IHZvaWQgMDtcbmZ1bmN0aW9uIHRvQXNjaWkoaW5wdXQpIHtcbiAgICBjb25zdCB0b051bXMgPSAoc3RyKSA9PiBzdHIuc3BsaXQoXCJcIikubWFwKCh4KSA9PiB7XG4gICAgICAgIGNvbnN0IGNoYXJDb2RlID0geC5jaGFyQ29kZUF0KDApO1xuICAgICAgICAvLyAweDAw4oCTMHgxRiBjb250cm9sIGNoYXJhY3RlcnNcbiAgICAgICAgLy8gMHgyMOKAkzB4N0UgcHJpbnRhYmxlIGNoYXJhY3RlcnNcbiAgICAgICAgLy8gMHg3RiBkZWxldGUgY2hhcmFjdGVyXG4gICAgICAgIC8vIDB4ODDigJMweEZGIG91dCBvZiA3IGJpdCBhc2NpaSByYW5nZVxuICAgICAgICBpZiAoY2hhckNvZGUgPCAweDIwIHx8IGNoYXJDb2RlID4gMHg3ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGVuY29kZSBjaGFyYWN0ZXIgdGhhdCBpcyBvdXQgb2YgcHJpbnRhYmxlIEFTQ0lJIHJhbmdlOiBcIiArIGNoYXJDb2RlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2hhckNvZGU7XG4gICAgfSk7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh0b051bXMoaW5wdXQpKTtcbn1cbmV4cG9ydHMudG9Bc2NpaSA9IHRvQXNjaWk7XG5mdW5jdGlvbiBmcm9tQXNjaWkoZGF0YSkge1xuICAgIGNvbnN0IGZyb21OdW1zID0gKGxpc3RPZk51bWJlcnMpID0+IGxpc3RPZk51bWJlcnMubWFwKCh4KSA9PiB7XG4gICAgICAgIC8vIDB4MDDigJMweDFGIGNvbnRyb2wgY2hhcmFjdGVyc1xuICAgICAgICAvLyAweDIw4oCTMHg3RSBwcmludGFibGUgY2hhcmFjdGVyc1xuICAgICAgICAvLyAweDdGIGRlbGV0ZSBjaGFyYWN0ZXJcbiAgICAgICAgLy8gMHg4MOKAkzB4RkYgb3V0IG9mIDcgYml0IGFzY2lpIHJhbmdlXG4gICAgICAgIGlmICh4IDwgMHgyMCB8fCB4ID4gMHg3ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGRlY29kZSBjaGFyYWN0ZXIgdGhhdCBpcyBvdXQgb2YgcHJpbnRhYmxlIEFTQ0lJIHJhbmdlOiBcIiArIHgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKHgpO1xuICAgIH0pO1xuICAgIHJldHVybiBmcm9tTnVtcyhBcnJheS5mcm9tKGRhdGEpKS5qb2luKFwiXCIpO1xufVxuZXhwb3J0cy5mcm9tQXNjaWkgPSBmcm9tQXNjaWk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hc2NpaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/base64.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/base64.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromBase64 = exports.toBase64 = void 0;\nconst base64js = __importStar(__webpack_require__(/*! base64-js */ \"(ssr)/./node_modules/base64-js/index.js\"));\nfunction toBase64(data) {\n    return base64js.fromByteArray(data);\n}\nexports.toBase64 = toBase64;\nfunction fromBase64(base64String) {\n    if (!base64String.match(/^[a-zA-Z0-9+/]*={0,2}$/)) {\n        throw new Error(\"Invalid base64 string format\");\n    }\n    return base64js.toByteArray(base64String);\n}\nexports.fromBase64 = fromBase64;\n//# sourceMappingURL=base64.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iYXNlNjQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGdCQUFnQjtBQUNyQyw4QkFBOEIsbUJBQU8sQ0FBQywwREFBVztBQUNqRDtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQSw4Q0FBOEMsSUFBSTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iYXNlNjQuanM/OWQ5NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19zZXRNb2R1bGVEZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX3NldE1vZHVsZURlZmF1bHQpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHYgfSk7XG59KSA6IGZ1bmN0aW9uKG8sIHYpIHtcbiAgICBvW1wiZGVmYXVsdFwiXSA9IHY7XG59KTtcbnZhciBfX2ltcG9ydFN0YXIgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0U3RhcikgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIGlmIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpIHJldHVybiBtb2Q7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIGlmIChtb2QgIT0gbnVsbCkgZm9yICh2YXIgayBpbiBtb2QpIGlmIChrICE9PSBcImRlZmF1bHRcIiAmJiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwobW9kLCBrKSkgX19jcmVhdGVCaW5kaW5nKHJlc3VsdCwgbW9kLCBrKTtcbiAgICBfX3NldE1vZHVsZURlZmF1bHQocmVzdWx0LCBtb2QpO1xuICAgIHJldHVybiByZXN1bHQ7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tQmFzZTY0ID0gZXhwb3J0cy50b0Jhc2U2NCA9IHZvaWQgMDtcbmNvbnN0IGJhc2U2NGpzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJiYXNlNjQtanNcIikpO1xuZnVuY3Rpb24gdG9CYXNlNjQoZGF0YSkge1xuICAgIHJldHVybiBiYXNlNjRqcy5mcm9tQnl0ZUFycmF5KGRhdGEpO1xufVxuZXhwb3J0cy50b0Jhc2U2NCA9IHRvQmFzZTY0O1xuZnVuY3Rpb24gZnJvbUJhc2U2NChiYXNlNjRTdHJpbmcpIHtcbiAgICBpZiAoIWJhc2U2NFN0cmluZy5tYXRjaCgvXlthLXpBLVowLTkrL10qPXswLDJ9JC8pKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgYmFzZTY0IHN0cmluZyBmb3JtYXRcIik7XG4gICAgfVxuICAgIHJldHVybiBiYXNlNjRqcy50b0J5dGVBcnJheShiYXNlNjRTdHJpbmcpO1xufVxuZXhwb3J0cy5mcm9tQmFzZTY0ID0gZnJvbUJhc2U2NDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhc2U2NC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/base64.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/bech32.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.normalizeBech32 = exports.fromBech32 = exports.toBech32 = void 0;\nconst bech32 = __importStar(__webpack_require__(/*! bech32 */ \"(ssr)/./node_modules/bech32/index.js\"));\nfunction toBech32(prefix, data, limit) {\n    const address = bech32.encode(prefix, bech32.toWords(data), limit);\n    return address;\n}\nexports.toBech32 = toBech32;\nfunction fromBech32(address, limit = Infinity) {\n    const decodedAddress = bech32.decode(address, limit);\n    return {\n        prefix: decodedAddress.prefix,\n        data: new Uint8Array(bech32.fromWords(decodedAddress.words)),\n    };\n}\nexports.fromBech32 = fromBech32;\n/**\n * Takes a bech32 address and returns a normalized (i.e. lower case) representation of it.\n *\n * The input is validated along the way, which makes this significantly safer than\n * using `address.toLowerCase()`.\n */\nfunction normalizeBech32(address) {\n    const { prefix, data } = fromBech32(address);\n    return toBech32(prefix, data);\n}\nexports.normalizeBech32 = normalizeBech32;\n//# sourceMappingURL=bech32.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9iZWNoMzIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDBDQUEwQyw0QkFBNEI7QUFDdEUsQ0FBQztBQUNEO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QixHQUFHLGtCQUFrQixHQUFHLGdCQUFnQjtBQUMvRCw0QkFBNEIsbUJBQU8sQ0FBQyxvREFBUTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQjtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL2JlY2gzMi5qcz80ZjFiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm5vcm1hbGl6ZUJlY2gzMiA9IGV4cG9ydHMuZnJvbUJlY2gzMiA9IGV4cG9ydHMudG9CZWNoMzIgPSB2b2lkIDA7XG5jb25zdCBiZWNoMzIgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcImJlY2gzMlwiKSk7XG5mdW5jdGlvbiB0b0JlY2gzMihwcmVmaXgsIGRhdGEsIGxpbWl0KSB7XG4gICAgY29uc3QgYWRkcmVzcyA9IGJlY2gzMi5lbmNvZGUocHJlZml4LCBiZWNoMzIudG9Xb3JkcyhkYXRhKSwgbGltaXQpO1xuICAgIHJldHVybiBhZGRyZXNzO1xufVxuZXhwb3J0cy50b0JlY2gzMiA9IHRvQmVjaDMyO1xuZnVuY3Rpb24gZnJvbUJlY2gzMihhZGRyZXNzLCBsaW1pdCA9IEluZmluaXR5KSB7XG4gICAgY29uc3QgZGVjb2RlZEFkZHJlc3MgPSBiZWNoMzIuZGVjb2RlKGFkZHJlc3MsIGxpbWl0KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcmVmaXg6IGRlY29kZWRBZGRyZXNzLnByZWZpeCxcbiAgICAgICAgZGF0YTogbmV3IFVpbnQ4QXJyYXkoYmVjaDMyLmZyb21Xb3JkcyhkZWNvZGVkQWRkcmVzcy53b3JkcykpLFxuICAgIH07XG59XG5leHBvcnRzLmZyb21CZWNoMzIgPSBmcm9tQmVjaDMyO1xuLyoqXG4gKiBUYWtlcyBhIGJlY2gzMiBhZGRyZXNzIGFuZCByZXR1cm5zIGEgbm9ybWFsaXplZCAoaS5lLiBsb3dlciBjYXNlKSByZXByZXNlbnRhdGlvbiBvZiBpdC5cbiAqXG4gKiBUaGUgaW5wdXQgaXMgdmFsaWRhdGVkIGFsb25nIHRoZSB3YXksIHdoaWNoIG1ha2VzIHRoaXMgc2lnbmlmaWNhbnRseSBzYWZlciB0aGFuXG4gKiB1c2luZyBgYWRkcmVzcy50b0xvd2VyQ2FzZSgpYC5cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplQmVjaDMyKGFkZHJlc3MpIHtcbiAgICBjb25zdCB7IHByZWZpeCwgZGF0YSB9ID0gZnJvbUJlY2gzMihhZGRyZXNzKTtcbiAgICByZXR1cm4gdG9CZWNoMzIocHJlZml4LCBkYXRhKTtcbn1cbmV4cG9ydHMubm9ybWFsaXplQmVjaDMyID0gbm9ybWFsaXplQmVjaDMyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YmVjaDMyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/hex.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/hex.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromHex = exports.toHex = void 0;\nfunction toHex(data) {\n    let out = \"\";\n    for (const byte of data) {\n        out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n    return out;\n}\nexports.toHex = toHex;\nfunction fromHex(hexstring) {\n    if (hexstring.length % 2 !== 0) {\n        throw new Error(\"hex string length must be a multiple of 2\");\n    }\n    const out = new Uint8Array(hexstring.length / 2);\n    for (let i = 0; i < out.length; i++) {\n        const j = 2 * i;\n        const hexByteAsString = hexstring.slice(j, j + 2);\n        if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n            throw new Error(\"hex string contains invalid characters\");\n        }\n        out[i] = parseInt(hexByteAsString, 16);\n    }\n    return out;\n}\nexports.fromHex = fromHex;\n//# sourceMappingURL=hex.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9oZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGFBQWE7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBLDZDQUE2QyxFQUFFO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9oZXguanM/YzViYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbUhleCA9IGV4cG9ydHMudG9IZXggPSB2b2lkIDA7XG5mdW5jdGlvbiB0b0hleChkYXRhKSB7XG4gICAgbGV0IG91dCA9IFwiXCI7XG4gICAgZm9yIChjb25zdCBieXRlIG9mIGRhdGEpIHtcbiAgICAgICAgb3V0ICs9IChcIjBcIiArIGJ5dGUudG9TdHJpbmcoMTYpKS5zbGljZSgtMik7XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5leHBvcnRzLnRvSGV4ID0gdG9IZXg7XG5mdW5jdGlvbiBmcm9tSGV4KGhleHN0cmluZykge1xuICAgIGlmIChoZXhzdHJpbmcubGVuZ3RoICUgMiAhPT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJoZXggc3RyaW5nIGxlbmd0aCBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMlwiKTtcbiAgICB9XG4gICAgY29uc3Qgb3V0ID0gbmV3IFVpbnQ4QXJyYXkoaGV4c3RyaW5nLmxlbmd0aCAvIDIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3V0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGogPSAyICogaTtcbiAgICAgICAgY29uc3QgaGV4Qnl0ZUFzU3RyaW5nID0gaGV4c3RyaW5nLnNsaWNlKGosIGogKyAyKTtcbiAgICAgICAgaWYgKCFoZXhCeXRlQXNTdHJpbmcubWF0Y2goL1swLTlhLWZdezJ9L2kpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJoZXggc3RyaW5nIGNvbnRhaW5zIGludmFsaWQgY2hhcmFjdGVyc1wiKTtcbiAgICAgICAgfVxuICAgICAgICBvdXRbaV0gPSBwYXJzZUludChoZXhCeXRlQXNTdHJpbmcsIDE2KTtcbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbn1cbmV4cG9ydHMuZnJvbUhleCA9IGZyb21IZXg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1oZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/hex.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toUtf8 = exports.fromUtf8 = exports.toRfc3339 = exports.fromRfc3339 = exports.toHex = exports.fromHex = exports.toBech32 = exports.normalizeBech32 = exports.fromBech32 = exports.toBase64 = exports.fromBase64 = exports.toAscii = exports.fromAscii = void 0;\nvar ascii_1 = __webpack_require__(/*! ./ascii */ \"(ssr)/./node_modules/@cosmjs/encoding/build/ascii.js\");\nObject.defineProperty(exports, \"fromAscii\", ({ enumerable: true, get: function () { return ascii_1.fromAscii; } }));\nObject.defineProperty(exports, \"toAscii\", ({ enumerable: true, get: function () { return ascii_1.toAscii; } }));\nvar base64_1 = __webpack_require__(/*! ./base64 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/base64.js\");\nObject.defineProperty(exports, \"fromBase64\", ({ enumerable: true, get: function () { return base64_1.fromBase64; } }));\nObject.defineProperty(exports, \"toBase64\", ({ enumerable: true, get: function () { return base64_1.toBase64; } }));\nvar bech32_1 = __webpack_require__(/*! ./bech32 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/bech32.js\");\nObject.defineProperty(exports, \"fromBech32\", ({ enumerable: true, get: function () { return bech32_1.fromBech32; } }));\nObject.defineProperty(exports, \"normalizeBech32\", ({ enumerable: true, get: function () { return bech32_1.normalizeBech32; } }));\nObject.defineProperty(exports, \"toBech32\", ({ enumerable: true, get: function () { return bech32_1.toBech32; } }));\nvar hex_1 = __webpack_require__(/*! ./hex */ \"(ssr)/./node_modules/@cosmjs/encoding/build/hex.js\");\nObject.defineProperty(exports, \"fromHex\", ({ enumerable: true, get: function () { return hex_1.fromHex; } }));\nObject.defineProperty(exports, \"toHex\", ({ enumerable: true, get: function () { return hex_1.toHex; } }));\nvar rfc3339_1 = __webpack_require__(/*! ./rfc3339 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js\");\nObject.defineProperty(exports, \"fromRfc3339\", ({ enumerable: true, get: function () { return rfc3339_1.fromRfc3339; } }));\nObject.defineProperty(exports, \"toRfc3339\", ({ enumerable: true, get: function () { return rfc3339_1.toRfc3339; } }));\nvar utf8_1 = __webpack_require__(/*! ./utf8 */ \"(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js\");\nObject.defineProperty(exports, \"fromUtf8\", ({ enumerable: true, get: function () { return utf8_1.fromUtf8; } }));\nObject.defineProperty(exports, \"toUtf8\", ({ enumerable: true, get: function () { return utf8_1.toUtf8; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxjQUFjLEdBQUcsZ0JBQWdCLEdBQUcsaUJBQWlCLEdBQUcsbUJBQW1CLEdBQUcsYUFBYSxHQUFHLGVBQWUsR0FBRyxnQkFBZ0IsR0FBRyx1QkFBdUIsR0FBRyxrQkFBa0IsR0FBRyxnQkFBZ0IsR0FBRyxrQkFBa0IsR0FBRyxlQUFlLEdBQUcsaUJBQWlCO0FBQzdQLGNBQWMsbUJBQU8sQ0FBQyxxRUFBUztBQUMvQiw2Q0FBNEMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDakgsMkNBQTBDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzdHLGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsNENBQTJDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQ2hILGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsK0JBQStCLEVBQUM7QUFDcEgsbURBQWtELEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzlILDRDQUEyQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUNoSCxZQUFZLG1CQUFPLENBQUMsaUVBQU87QUFDM0IsMkNBQTBDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQzNHLHlDQUF3QyxFQUFFLHFDQUFxQyx1QkFBdUIsRUFBQztBQUN2RyxnQkFBZ0IsbUJBQU8sQ0FBQyx5RUFBVztBQUNuQywrQ0FBOEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdkgsNkNBQTRDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ25ILGFBQWEsbUJBQU8sQ0FBQyxtRUFBUTtBQUM3Qiw0Q0FBMkMsRUFBRSxxQ0FBcUMsMkJBQTJCLEVBQUM7QUFDOUcsMENBQXlDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQzFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL2luZGV4LmpzP2NmOTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnRvVXRmOCA9IGV4cG9ydHMuZnJvbVV0ZjggPSBleHBvcnRzLnRvUmZjMzMzOSA9IGV4cG9ydHMuZnJvbVJmYzMzMzkgPSBleHBvcnRzLnRvSGV4ID0gZXhwb3J0cy5mcm9tSGV4ID0gZXhwb3J0cy50b0JlY2gzMiA9IGV4cG9ydHMubm9ybWFsaXplQmVjaDMyID0gZXhwb3J0cy5mcm9tQmVjaDMyID0gZXhwb3J0cy50b0Jhc2U2NCA9IGV4cG9ydHMuZnJvbUJhc2U2NCA9IGV4cG9ydHMudG9Bc2NpaSA9IGV4cG9ydHMuZnJvbUFzY2lpID0gdm9pZCAwO1xudmFyIGFzY2lpXzEgPSByZXF1aXJlKFwiLi9hc2NpaVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImZyb21Bc2NpaVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYXNjaWlfMS5mcm9tQXNjaWk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0FzY2lpXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhc2NpaV8xLnRvQXNjaWk7IH0gfSk7XG52YXIgYmFzZTY0XzEgPSByZXF1aXJlKFwiLi9iYXNlNjRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tQmFzZTY0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBiYXNlNjRfMS5mcm9tQmFzZTY0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9CYXNlNjRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJhc2U2NF8xLnRvQmFzZTY0OyB9IH0pO1xudmFyIGJlY2gzMl8xID0gcmVxdWlyZShcIi4vYmVjaDMyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbUJlY2gzMlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYmVjaDMyXzEuZnJvbUJlY2gzMjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm5vcm1hbGl6ZUJlY2gzMlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYmVjaDMyXzEubm9ybWFsaXplQmVjaDMyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwidG9CZWNoMzJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGJlY2gzMl8xLnRvQmVjaDMyOyB9IH0pO1xudmFyIGhleF8xID0gcmVxdWlyZShcIi4vaGV4XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbUhleFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaGV4XzEuZnJvbUhleDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvSGV4XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBoZXhfMS50b0hleDsgfSB9KTtcbnZhciByZmMzMzM5XzEgPSByZXF1aXJlKFwiLi9yZmMzMzM5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbVJmYzMzMzlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJmYzMzMzlfMS5mcm9tUmZjMzMzOTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvUmZjMzMzOVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmZjMzMzOV8xLnRvUmZjMzMzOTsgfSB9KTtcbnZhciB1dGY4XzEgPSByZXF1aXJlKFwiLi91dGY4XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbVV0ZjhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0ZjhfMS5mcm9tVXRmODsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInRvVXRmOFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdXRmOF8xLnRvVXRmODsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/rfc3339.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.toRfc3339 = exports.fromRfc3339 = void 0;\nconst rfc3339Matcher = /^(\\d{4})-(\\d{2})-(\\d{2})[T ](\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,9})?((?:[+-]\\d{2}:\\d{2})|Z)$/;\nfunction padded(integer, length = 2) {\n    return integer.toString().padStart(length, \"0\");\n}\nfunction fromRfc3339(str) {\n    const matches = rfc3339Matcher.exec(str);\n    if (!matches) {\n        throw new Error(\"Date string is not in RFC3339 format\");\n    }\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    const hour = +matches[4];\n    const minute = +matches[5];\n    const second = +matches[6];\n    // fractional seconds match either undefined or a string like \".1\", \".123456789\"\n    const milliSeconds = matches[7] ? Math.floor(+matches[7] * 1000) : 0;\n    let tzOffsetSign;\n    let tzOffsetHours;\n    let tzOffsetMinutes;\n    // if timezone is undefined, it must be Z or nothing (otherwise the group would have captured).\n    if (matches[8] === \"Z\") {\n        tzOffsetSign = 1;\n        tzOffsetHours = 0;\n        tzOffsetMinutes = 0;\n    }\n    else {\n        tzOffsetSign = matches[8].substring(0, 1) === \"-\" ? -1 : 1;\n        tzOffsetHours = +matches[8].substring(1, 3);\n        tzOffsetMinutes = +matches[8].substring(4, 6);\n    }\n    const tzOffset = tzOffsetSign * (tzOffsetHours * 60 + tzOffsetMinutes) * 60; // seconds\n    const date = new Date();\n    date.setUTCFullYear(year, month - 1, day);\n    date.setUTCHours(hour, minute, second, milliSeconds);\n    return new Date(date.getTime() - tzOffset * 1000);\n}\nexports.fromRfc3339 = fromRfc3339;\nfunction toRfc3339(date) {\n    const year = date.getUTCFullYear();\n    const month = padded(date.getUTCMonth() + 1);\n    const day = padded(date.getUTCDate());\n    const hour = padded(date.getUTCHours());\n    const minute = padded(date.getUTCMinutes());\n    const second = padded(date.getUTCSeconds());\n    const ms = padded(date.getUTCMilliseconds(), 3);\n    return `${year}-${month}-${day}T${hour}:${minute}:${second}.${ms}Z`;\n}\nexports.toRfc3339 = toRfc3339;\n//# sourceMappingURL=rfc3339.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC9yZmMzMzM5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG1CQUFtQjtBQUN2Qyw2QkFBNkIsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sSUFBSSxhQUFhLEVBQUUsSUFBSSxFQUFFO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLEtBQUssR0FBRyxNQUFNLEdBQUcsSUFBSSxHQUFHLEtBQUssR0FBRyxPQUFPLEdBQUcsT0FBTyxHQUFHLEdBQUc7QUFDckU7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvZW5jb2RpbmcvYnVpbGQvcmZjMzMzOS5qcz85NDZjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy50b1JmYzMzMzkgPSBleHBvcnRzLmZyb21SZmMzMzM5ID0gdm9pZCAwO1xuY29uc3QgcmZjMzMzOU1hdGNoZXIgPSAvXihcXGR7NH0pLShcXGR7Mn0pLShcXGR7Mn0pW1QgXShcXGR7Mn0pOihcXGR7Mn0pOihcXGR7Mn0pKFxcLlxcZHsxLDl9KT8oKD86WystXVxcZHsyfTpcXGR7Mn0pfFopJC87XG5mdW5jdGlvbiBwYWRkZWQoaW50ZWdlciwgbGVuZ3RoID0gMikge1xuICAgIHJldHVybiBpbnRlZ2VyLnRvU3RyaW5nKCkucGFkU3RhcnQobGVuZ3RoLCBcIjBcIik7XG59XG5mdW5jdGlvbiBmcm9tUmZjMzMzOShzdHIpIHtcbiAgICBjb25zdCBtYXRjaGVzID0gcmZjMzMzOU1hdGNoZXIuZXhlYyhzdHIpO1xuICAgIGlmICghbWF0Y2hlcykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEYXRlIHN0cmluZyBpcyBub3QgaW4gUkZDMzMzOSBmb3JtYXRcIik7XG4gICAgfVxuICAgIGNvbnN0IHllYXIgPSArbWF0Y2hlc1sxXTtcbiAgICBjb25zdCBtb250aCA9ICttYXRjaGVzWzJdO1xuICAgIGNvbnN0IGRheSA9ICttYXRjaGVzWzNdO1xuICAgIGNvbnN0IGhvdXIgPSArbWF0Y2hlc1s0XTtcbiAgICBjb25zdCBtaW51dGUgPSArbWF0Y2hlc1s1XTtcbiAgICBjb25zdCBzZWNvbmQgPSArbWF0Y2hlc1s2XTtcbiAgICAvLyBmcmFjdGlvbmFsIHNlY29uZHMgbWF0Y2ggZWl0aGVyIHVuZGVmaW5lZCBvciBhIHN0cmluZyBsaWtlIFwiLjFcIiwgXCIuMTIzNDU2Nzg5XCJcbiAgICBjb25zdCBtaWxsaVNlY29uZHMgPSBtYXRjaGVzWzddID8gTWF0aC5mbG9vcigrbWF0Y2hlc1s3XSAqIDEwMDApIDogMDtcbiAgICBsZXQgdHpPZmZzZXRTaWduO1xuICAgIGxldCB0ek9mZnNldEhvdXJzO1xuICAgIGxldCB0ek9mZnNldE1pbnV0ZXM7XG4gICAgLy8gaWYgdGltZXpvbmUgaXMgdW5kZWZpbmVkLCBpdCBtdXN0IGJlIFogb3Igbm90aGluZyAob3RoZXJ3aXNlIHRoZSBncm91cCB3b3VsZCBoYXZlIGNhcHR1cmVkKS5cbiAgICBpZiAobWF0Y2hlc1s4XSA9PT0gXCJaXCIpIHtcbiAgICAgICAgdHpPZmZzZXRTaWduID0gMTtcbiAgICAgICAgdHpPZmZzZXRIb3VycyA9IDA7XG4gICAgICAgIHR6T2Zmc2V0TWludXRlcyA9IDA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0ek9mZnNldFNpZ24gPSBtYXRjaGVzWzhdLnN1YnN0cmluZygwLCAxKSA9PT0gXCItXCIgPyAtMSA6IDE7XG4gICAgICAgIHR6T2Zmc2V0SG91cnMgPSArbWF0Y2hlc1s4XS5zdWJzdHJpbmcoMSwgMyk7XG4gICAgICAgIHR6T2Zmc2V0TWludXRlcyA9ICttYXRjaGVzWzhdLnN1YnN0cmluZyg0LCA2KTtcbiAgICB9XG4gICAgY29uc3QgdHpPZmZzZXQgPSB0ek9mZnNldFNpZ24gKiAodHpPZmZzZXRIb3VycyAqIDYwICsgdHpPZmZzZXRNaW51dGVzKSAqIDYwOyAvLyBzZWNvbmRzXG4gICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcih5ZWFyLCBtb250aCAtIDEsIGRheSk7XG4gICAgZGF0ZS5zZXRVVENIb3Vycyhob3VyLCBtaW51dGUsIHNlY29uZCwgbWlsbGlTZWNvbmRzKTtcbiAgICByZXR1cm4gbmV3IERhdGUoZGF0ZS5nZXRUaW1lKCkgLSB0ek9mZnNldCAqIDEwMDApO1xufVxuZXhwb3J0cy5mcm9tUmZjMzMzOSA9IGZyb21SZmMzMzM5O1xuZnVuY3Rpb24gdG9SZmMzMzM5KGRhdGUpIHtcbiAgICBjb25zdCB5ZWFyID0gZGF0ZS5nZXRVVENGdWxsWWVhcigpO1xuICAgIGNvbnN0IG1vbnRoID0gcGFkZGVkKGRhdGUuZ2V0VVRDTW9udGgoKSArIDEpO1xuICAgIGNvbnN0IGRheSA9IHBhZGRlZChkYXRlLmdldFVUQ0RhdGUoKSk7XG4gICAgY29uc3QgaG91ciA9IHBhZGRlZChkYXRlLmdldFVUQ0hvdXJzKCkpO1xuICAgIGNvbnN0IG1pbnV0ZSA9IHBhZGRlZChkYXRlLmdldFVUQ01pbnV0ZXMoKSk7XG4gICAgY29uc3Qgc2Vjb25kID0gcGFkZGVkKGRhdGUuZ2V0VVRDU2Vjb25kcygpKTtcbiAgICBjb25zdCBtcyA9IHBhZGRlZChkYXRlLmdldFVUQ01pbGxpc2Vjb25kcygpLCAzKTtcbiAgICByZXR1cm4gYCR7eWVhcn0tJHttb250aH0tJHtkYXl9VCR7aG91cn06JHttaW51dGV9OiR7c2Vjb25kfS4ke21zfVpgO1xufVxuZXhwb3J0cy50b1JmYzMzMzkgPSB0b1JmYzMzMzk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZmMzMzM5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/rfc3339.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/encoding/build/utf8.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromUtf8 = exports.toUtf8 = void 0;\nfunction toUtf8(str) {\n    return new TextEncoder().encode(str);\n}\nexports.toUtf8 = toUtf8;\n/**\n * Takes UTF-8 data and decodes it to a string.\n *\n * In lossy mode, the [REPLACEMENT CHARACTER](https://en.wikipedia.org/wiki/Specials_(Unicode_block))\n * is used to substitude invalid encodings.\n * By default lossy mode is off and invalid data will lead to exceptions.\n */\nfunction fromUtf8(data, lossy = false) {\n    const fatal = !lossy;\n    return new TextDecoder(\"utf-8\", { fatal }).decode(data);\n}\nexports.fromUtf8 = fromUtf8;\n//# sourceMappingURL=utf8.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9lbmNvZGluZy9idWlsZC91dGY4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGNBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxPQUFPO0FBQzdDO0FBQ0EsZ0JBQWdCO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2VuY29kaW5nL2J1aWxkL3V0ZjguanM/ZjA5MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZnJvbVV0ZjggPSBleHBvcnRzLnRvVXRmOCA9IHZvaWQgMDtcbmZ1bmN0aW9uIHRvVXRmOChzdHIpIHtcbiAgICByZXR1cm4gbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHN0cik7XG59XG5leHBvcnRzLnRvVXRmOCA9IHRvVXRmODtcbi8qKlxuICogVGFrZXMgVVRGLTggZGF0YSBhbmQgZGVjb2RlcyBpdCB0byBhIHN0cmluZy5cbiAqXG4gKiBJbiBsb3NzeSBtb2RlLCB0aGUgW1JFUExBQ0VNRU5UIENIQVJBQ1RFUl0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvU3BlY2lhbHNfKFVuaWNvZGVfYmxvY2spKVxuICogaXMgdXNlZCB0byBzdWJzdGl0dWRlIGludmFsaWQgZW5jb2RpbmdzLlxuICogQnkgZGVmYXVsdCBsb3NzeSBtb2RlIGlzIG9mZiBhbmQgaW52YWxpZCBkYXRhIHdpbGwgbGVhZCB0byBleGNlcHRpb25zLlxuICovXG5mdW5jdGlvbiBmcm9tVXRmOChkYXRhLCBsb3NzeSA9IGZhbHNlKSB7XG4gICAgY29uc3QgZmF0YWwgPSAhbG9zc3k7XG4gICAgcmV0dXJuIG5ldyBUZXh0RGVjb2RlcihcInV0Zi04XCIsIHsgZmF0YWwgfSkuZGVjb2RlKGRhdGEpO1xufVxuZXhwb3J0cy5mcm9tVXRmOCA9IGZyb21VdGY4O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRmOC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/encoding/build/utf8.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/json-rpc/build/compatibility.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/json-rpc/build/compatibility.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isJsonCompatibleDictionary = exports.isJsonCompatibleArray = exports.isJsonCompatibleValue = void 0;\nfunction isJsonCompatibleValue(value) {\n    if (typeof value === \"string\" ||\n        typeof value === \"number\" ||\n        typeof value === \"boolean\" ||\n        value === null ||\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        isJsonCompatibleArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        isJsonCompatibleDictionary(value)) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.isJsonCompatibleValue = isJsonCompatibleValue;\nfunction isJsonCompatibleArray(value) {\n    if (!Array.isArray(value)) {\n        return false;\n    }\n    for (const item of value) {\n        if (!isJsonCompatibleValue(item)) {\n            return false;\n        }\n    }\n    // all items okay\n    return true;\n}\nexports.isJsonCompatibleArray = isJsonCompatibleArray;\nfunction isJsonCompatibleDictionary(data) {\n    if (typeof data !== \"object\" || data === null) {\n        // data must be a non-null object\n        return false;\n    }\n    // Exclude special kind of objects like Array, Date or Uint8Array\n    // Object.prototype.toString() returns a specified value:\n    // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring\n    if (Object.prototype.toString.call(data) !== \"[object Object]\") {\n        return false;\n    }\n    return Object.values(data).every(isJsonCompatibleValue);\n}\nexports.isJsonCompatibleDictionary = isJsonCompatibleDictionary;\n//# sourceMappingURL=compatibility.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9jb21wYXRpYmlsaXR5LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQyxHQUFHLDZCQUE2QixHQUFHLDZCQUE2QjtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2pzb24tcnBjL2J1aWxkL2NvbXBhdGliaWxpdHkuanM/YWFiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNKc29uQ29tcGF0aWJsZURpY3Rpb25hcnkgPSBleHBvcnRzLmlzSnNvbkNvbXBhdGlibGVBcnJheSA9IGV4cG9ydHMuaXNKc29uQ29tcGF0aWJsZVZhbHVlID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNKc29uQ29tcGF0aWJsZVZhbHVlKHZhbHVlKSB7XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIgfHxcbiAgICAgICAgdHlwZW9mIHZhbHVlID09PSBcImJvb2xlYW5cIiB8fFxuICAgICAgICB2YWx1ZSA9PT0gbnVsbCB8fFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVzZS1iZWZvcmUtZGVmaW5lXG4gICAgICAgIGlzSnNvbkNvbXBhdGlibGVBcnJheSh2YWx1ZSkgfHxcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11c2UtYmVmb3JlLWRlZmluZVxuICAgICAgICBpc0pzb25Db21wYXRpYmxlRGljdGlvbmFyeSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZXhwb3J0cy5pc0pzb25Db21wYXRpYmxlVmFsdWUgPSBpc0pzb25Db21wYXRpYmxlVmFsdWU7XG5mdW5jdGlvbiBpc0pzb25Db21wYXRpYmxlQXJyYXkodmFsdWUpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgIGlmICghaXNKc29uQ29tcGF0aWJsZVZhbHVlKGl0ZW0pKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gYWxsIGl0ZW1zIG9rYXlcbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydHMuaXNKc29uQ29tcGF0aWJsZUFycmF5ID0gaXNKc29uQ29tcGF0aWJsZUFycmF5O1xuZnVuY3Rpb24gaXNKc29uQ29tcGF0aWJsZURpY3Rpb25hcnkoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSAhPT0gXCJvYmplY3RcIiB8fCBkYXRhID09PSBudWxsKSB7XG4gICAgICAgIC8vIGRhdGEgbXVzdCBiZSBhIG5vbi1udWxsIG9iamVjdFxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIEV4Y2x1ZGUgc3BlY2lhbCBraW5kIG9mIG9iamVjdHMgbGlrZSBBcnJheSwgRGF0ZSBvciBVaW50OEFycmF5XG4gICAgLy8gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpIHJldHVybnMgYSBzcGVjaWZpZWQgdmFsdWU6XG4gICAgLy8gaHR0cDovL3d3dy5lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC9pbmRleC5odG1sI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChkYXRhKSAhPT0gXCJbb2JqZWN0IE9iamVjdF1cIikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBPYmplY3QudmFsdWVzKGRhdGEpLmV2ZXJ5KGlzSnNvbkNvbXBhdGlibGVWYWx1ZSk7XG59XG5leHBvcnRzLmlzSnNvbkNvbXBhdGlibGVEaWN0aW9uYXJ5ID0gaXNKc29uQ29tcGF0aWJsZURpY3Rpb25hcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1jb21wYXRpYmlsaXR5LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/json-rpc/build/compatibility.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/json-rpc/build/id.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/json-rpc/build/id.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeJsonRpcId = void 0;\n// Start with 10001 to avoid possible collisions with all hand-selected values like e.g. 1,2,3,42,100\nlet counter = 10000;\n/**\n * Creates a new ID to be used for creating a JSON-RPC request.\n *\n * Multiple calls of this produce unique values.\n *\n * The output may be any value compatible to JSON-RPC request IDs with an undefined output format and generation logic.\n */\nfunction makeJsonRpcId() {\n    return (counter += 1);\n}\nexports.makeJsonRpcId = makeJsonRpcId;\n//# sourceMappingURL=id.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9pZC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2pzb24tcnBjL2J1aWxkL2lkLmpzPzdkY2UiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1ha2VKc29uUnBjSWQgPSB2b2lkIDA7XG4vLyBTdGFydCB3aXRoIDEwMDAxIHRvIGF2b2lkIHBvc3NpYmxlIGNvbGxpc2lvbnMgd2l0aCBhbGwgaGFuZC1zZWxlY3RlZCB2YWx1ZXMgbGlrZSBlLmcuIDEsMiwzLDQyLDEwMFxubGV0IGNvdW50ZXIgPSAxMDAwMDtcbi8qKlxuICogQ3JlYXRlcyBhIG5ldyBJRCB0byBiZSB1c2VkIGZvciBjcmVhdGluZyBhIEpTT04tUlBDIHJlcXVlc3QuXG4gKlxuICogTXVsdGlwbGUgY2FsbHMgb2YgdGhpcyBwcm9kdWNlIHVuaXF1ZSB2YWx1ZXMuXG4gKlxuICogVGhlIG91dHB1dCBtYXkgYmUgYW55IHZhbHVlIGNvbXBhdGlibGUgdG8gSlNPTi1SUEMgcmVxdWVzdCBJRHMgd2l0aCBhbiB1bmRlZmluZWQgb3V0cHV0IGZvcm1hdCBhbmQgZ2VuZXJhdGlvbiBsb2dpYy5cbiAqL1xuZnVuY3Rpb24gbWFrZUpzb25ScGNJZCgpIHtcbiAgICByZXR1cm4gKGNvdW50ZXIgKz0gMSk7XG59XG5leHBvcnRzLm1ha2VKc29uUnBjSWQgPSBtYWtlSnNvblJwY0lkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aWQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/json-rpc/build/id.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/json-rpc/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/json-rpc/build/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.jsonRpcCode = exports.isJsonRpcSuccessResponse = exports.isJsonRpcErrorResponse = exports.parseJsonRpcSuccessResponse = exports.parseJsonRpcResponse = exports.parseJsonRpcRequest = exports.parseJsonRpcId = exports.parseJsonRpcErrorResponse = exports.JsonRpcClient = exports.makeJsonRpcId = void 0;\nvar id_1 = __webpack_require__(/*! ./id */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/id.js\");\nObject.defineProperty(exports, \"makeJsonRpcId\", ({ enumerable: true, get: function () { return id_1.makeJsonRpcId; } }));\nvar jsonrpcclient_1 = __webpack_require__(/*! ./jsonrpcclient */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js\");\nObject.defineProperty(exports, \"JsonRpcClient\", ({ enumerable: true, get: function () { return jsonrpcclient_1.JsonRpcClient; } }));\nvar parse_1 = __webpack_require__(/*! ./parse */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/parse.js\");\nObject.defineProperty(exports, \"parseJsonRpcErrorResponse\", ({ enumerable: true, get: function () { return parse_1.parseJsonRpcErrorResponse; } }));\nObject.defineProperty(exports, \"parseJsonRpcId\", ({ enumerable: true, get: function () { return parse_1.parseJsonRpcId; } }));\nObject.defineProperty(exports, \"parseJsonRpcRequest\", ({ enumerable: true, get: function () { return parse_1.parseJsonRpcRequest; } }));\nObject.defineProperty(exports, \"parseJsonRpcResponse\", ({ enumerable: true, get: function () { return parse_1.parseJsonRpcResponse; } }));\nObject.defineProperty(exports, \"parseJsonRpcSuccessResponse\", ({ enumerable: true, get: function () { return parse_1.parseJsonRpcSuccessResponse; } }));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/types.js\");\nObject.defineProperty(exports, \"isJsonRpcErrorResponse\", ({ enumerable: true, get: function () { return types_1.isJsonRpcErrorResponse; } }));\nObject.defineProperty(exports, \"isJsonRpcSuccessResponse\", ({ enumerable: true, get: function () { return types_1.isJsonRpcSuccessResponse; } }));\nObject.defineProperty(exports, \"jsonRpcCode\", ({ enumerable: true, get: function () { return types_1.jsonRpcCode; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxnQ0FBZ0MsR0FBRyw4QkFBOEIsR0FBRyxtQ0FBbUMsR0FBRyw0QkFBNEIsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0IsR0FBRyxpQ0FBaUMsR0FBRyxxQkFBcUIsR0FBRyxxQkFBcUI7QUFDdlMsV0FBVyxtQkFBTyxDQUFDLCtEQUFNO0FBQ3pCLGlEQUFnRCxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUN0SCxzQkFBc0IsbUJBQU8sQ0FBQyxxRkFBaUI7QUFDL0MsaURBQWdELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ2pJLGNBQWMsbUJBQU8sQ0FBQyxxRUFBUztBQUMvQiw2REFBNEQsRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUM7QUFDakosa0RBQWlELEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQzNILHVEQUFzRCxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUNySSx3REFBdUQsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDdkksK0RBQThELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ3JKLGNBQWMsbUJBQU8sQ0FBQyxxRUFBUztBQUMvQiwwREFBeUQsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDM0ksNERBQTJELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQy9JLCtDQUE4QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNySCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9pbmRleC5qcz85NzFkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5qc29uUnBjQ29kZSA9IGV4cG9ydHMuaXNKc29uUnBjU3VjY2Vzc1Jlc3BvbnNlID0gZXhwb3J0cy5pc0pzb25ScGNFcnJvclJlc3BvbnNlID0gZXhwb3J0cy5wYXJzZUpzb25ScGNTdWNjZXNzUmVzcG9uc2UgPSBleHBvcnRzLnBhcnNlSnNvblJwY1Jlc3BvbnNlID0gZXhwb3J0cy5wYXJzZUpzb25ScGNSZXF1ZXN0ID0gZXhwb3J0cy5wYXJzZUpzb25ScGNJZCA9IGV4cG9ydHMucGFyc2VKc29uUnBjRXJyb3JSZXNwb25zZSA9IGV4cG9ydHMuSnNvblJwY0NsaWVudCA9IGV4cG9ydHMubWFrZUpzb25ScGNJZCA9IHZvaWQgMDtcbnZhciBpZF8xID0gcmVxdWlyZShcIi4vaWRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtYWtlSnNvblJwY0lkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpZF8xLm1ha2VKc29uUnBjSWQ7IH0gfSk7XG52YXIganNvbnJwY2NsaWVudF8xID0gcmVxdWlyZShcIi4vanNvbnJwY2NsaWVudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkpzb25ScGNDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGpzb25ycGNjbGllbnRfMS5Kc29uUnBjQ2xpZW50OyB9IH0pO1xudmFyIHBhcnNlXzEgPSByZXF1aXJlKFwiLi9wYXJzZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlSnNvblJwY0Vycm9yUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBhcnNlXzEucGFyc2VKc29uUnBjRXJyb3JSZXNwb25zZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlSnNvblJwY0lkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwYXJzZV8xLnBhcnNlSnNvblJwY0lkOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VKc29uUnBjUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcGFyc2VfMS5wYXJzZUpzb25ScGNSZXF1ZXN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VKc29uUnBjUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBhcnNlXzEucGFyc2VKc29uUnBjUmVzcG9uc2U7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJwYXJzZUpzb25ScGNTdWNjZXNzUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHBhcnNlXzEucGFyc2VKc29uUnBjU3VjY2Vzc1Jlc3BvbnNlOyB9IH0pO1xudmFyIHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzSnNvblJwY0Vycm9yUmVzcG9uc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVzXzEuaXNKc29uUnBjRXJyb3JSZXNwb25zZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzSnNvblJwY1N1Y2Nlc3NSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXNfMS5pc0pzb25ScGNTdWNjZXNzUmVzcG9uc2U7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJqc29uUnBjQ29kZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdHlwZXNfMS5qc29uUnBjQ29kZTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/json-rpc/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.JsonRpcClient = void 0;\nconst stream_1 = __webpack_require__(/*! @cosmjs/stream */ \"(ssr)/./node_modules/@cosmjs/stream/build/index.js\");\nconst types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/types.js\");\n/**\n * A thin wrapper that is used to bring together requests and responses by ID.\n *\n * Using this class is only advised for continous communication channels like\n * WebSockets or WebWorker messaging.\n */\nclass JsonRpcClient {\n    constructor(connection) {\n        this.connection = connection;\n    }\n    async run(request) {\n        const filteredStream = this.connection.responseStream.filter((r) => r.id === request.id);\n        const pendingResponses = (0, stream_1.firstEvent)(filteredStream);\n        this.connection.sendRequest(request);\n        const response = await pendingResponses;\n        if ((0, types_1.isJsonRpcErrorResponse)(response)) {\n            const error = response.error;\n            throw new Error(`JSON RPC error: code=${error.code}; message='${error.message}'`);\n        }\n        return response;\n    }\n}\nexports.JsonRpcClient = JsonRpcClient;\n//# sourceMappingURL=jsonrpcclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9qc29ucnBjY2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixpQkFBaUIsbUJBQU8sQ0FBQywwRUFBZ0I7QUFDekMsZ0JBQWdCLG1CQUFPLENBQUMscUVBQVM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxhQUFhLFdBQVcsY0FBYztBQUMxRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9qc29ucnBjY2xpZW50LmpzP2FmMzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkpzb25ScGNDbGllbnQgPSB2b2lkIDA7XG5jb25zdCBzdHJlYW1fMSA9IHJlcXVpcmUoXCJAY29zbWpzL3N0cmVhbVwiKTtcbmNvbnN0IHR5cGVzXzEgPSByZXF1aXJlKFwiLi90eXBlc1wiKTtcbi8qKlxuICogQSB0aGluIHdyYXBwZXIgdGhhdCBpcyB1c2VkIHRvIGJyaW5nIHRvZ2V0aGVyIHJlcXVlc3RzIGFuZCByZXNwb25zZXMgYnkgSUQuXG4gKlxuICogVXNpbmcgdGhpcyBjbGFzcyBpcyBvbmx5IGFkdmlzZWQgZm9yIGNvbnRpbm91cyBjb21tdW5pY2F0aW9uIGNoYW5uZWxzIGxpa2VcbiAqIFdlYlNvY2tldHMgb3IgV2ViV29ya2VyIG1lc3NhZ2luZy5cbiAqL1xuY2xhc3MgSnNvblJwY0NsaWVudCB7XG4gICAgY29uc3RydWN0b3IoY29ubmVjdGlvbikge1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb24gPSBjb25uZWN0aW9uO1xuICAgIH1cbiAgICBhc3luYyBydW4ocmVxdWVzdCkge1xuICAgICAgICBjb25zdCBmaWx0ZXJlZFN0cmVhbSA9IHRoaXMuY29ubmVjdGlvbi5yZXNwb25zZVN0cmVhbS5maWx0ZXIoKHIpID0+IHIuaWQgPT09IHJlcXVlc3QuaWQpO1xuICAgICAgICBjb25zdCBwZW5kaW5nUmVzcG9uc2VzID0gKDAsIHN0cmVhbV8xLmZpcnN0RXZlbnQpKGZpbHRlcmVkU3RyZWFtKTtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uLnNlbmRSZXF1ZXN0KHJlcXVlc3QpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHBlbmRpbmdSZXNwb25zZXM7XG4gICAgICAgIGlmICgoMCwgdHlwZXNfMS5pc0pzb25ScGNFcnJvclJlc3BvbnNlKShyZXNwb25zZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEpTT04gUlBDIGVycm9yOiBjb2RlPSR7ZXJyb3IuY29kZX07IG1lc3NhZ2U9JyR7ZXJyb3IubWVzc2FnZX0nYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgIH1cbn1cbmV4cG9ydHMuSnNvblJwY0NsaWVudCA9IEpzb25ScGNDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29ucnBjY2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/json-rpc/build/jsonrpcclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/json-rpc/build/parse.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/json-rpc/build/parse.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseJsonRpcResponse = exports.parseJsonRpcSuccessResponse = exports.parseJsonRpcErrorResponse = exports.parseJsonRpcRequest = exports.parseJsonRpcId = void 0;\nconst compatibility_1 = __webpack_require__(/*! ./compatibility */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/compatibility.js\");\n/**\n * Extracts ID field from request or response object.\n *\n * Returns `null` when no valid ID was found.\n */\nfunction parseJsonRpcId(data) {\n    if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {\n        throw new Error(\"Data must be JSON compatible dictionary\");\n    }\n    const id = data.id;\n    if (typeof id !== \"number\" && typeof id !== \"string\") {\n        return null;\n    }\n    return id;\n}\nexports.parseJsonRpcId = parseJsonRpcId;\nfunction parseJsonRpcRequest(data) {\n    if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {\n        throw new Error(\"Data must be JSON compatible dictionary\");\n    }\n    if (data.jsonrpc !== \"2.0\") {\n        throw new Error(`Got unexpected jsonrpc version: ${data.jsonrpc}`);\n    }\n    const id = parseJsonRpcId(data);\n    if (id === null) {\n        throw new Error(\"Invalid id field\");\n    }\n    const method = data.method;\n    if (typeof method !== \"string\") {\n        throw new Error(\"Invalid method field\");\n    }\n    if (!(0, compatibility_1.isJsonCompatibleArray)(data.params) && !(0, compatibility_1.isJsonCompatibleDictionary)(data.params)) {\n        throw new Error(\"Invalid params field\");\n    }\n    return {\n        jsonrpc: \"2.0\",\n        id: id,\n        method: method,\n        params: data.params,\n    };\n}\nexports.parseJsonRpcRequest = parseJsonRpcRequest;\nfunction parseError(error) {\n    if (typeof error.code !== \"number\") {\n        throw new Error(\"Error property 'code' is not a number\");\n    }\n    if (typeof error.message !== \"string\") {\n        throw new Error(\"Error property 'message' is not a string\");\n    }\n    let maybeUndefinedData;\n    if (error.data === undefined) {\n        maybeUndefinedData = undefined;\n    }\n    else if ((0, compatibility_1.isJsonCompatibleValue)(error.data)) {\n        maybeUndefinedData = error.data;\n    }\n    else {\n        throw new Error(\"Error property 'data' is defined but not a JSON compatible value.\");\n    }\n    return {\n        code: error.code,\n        message: error.message,\n        ...(maybeUndefinedData !== undefined ? { data: maybeUndefinedData } : {}),\n    };\n}\n/** Throws if data is not a JsonRpcErrorResponse */\nfunction parseJsonRpcErrorResponse(data) {\n    if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {\n        throw new Error(\"Data must be JSON compatible dictionary\");\n    }\n    if (data.jsonrpc !== \"2.0\") {\n        throw new Error(`Got unexpected jsonrpc version: ${JSON.stringify(data)}`);\n    }\n    const id = data.id;\n    if (typeof id !== \"number\" && typeof id !== \"string\" && id !== null) {\n        throw new Error(\"Invalid id field\");\n    }\n    if (typeof data.error === \"undefined\" || !(0, compatibility_1.isJsonCompatibleDictionary)(data.error)) {\n        throw new Error(\"Invalid error field\");\n    }\n    return {\n        jsonrpc: \"2.0\",\n        id: id,\n        error: parseError(data.error),\n    };\n}\nexports.parseJsonRpcErrorResponse = parseJsonRpcErrorResponse;\n/** Throws if data is not a JsonRpcSuccessResponse */\nfunction parseJsonRpcSuccessResponse(data) {\n    if (!(0, compatibility_1.isJsonCompatibleDictionary)(data)) {\n        throw new Error(\"Data must be JSON compatible dictionary\");\n    }\n    if (data.jsonrpc !== \"2.0\") {\n        throw new Error(`Got unexpected jsonrpc version: ${JSON.stringify(data)}`);\n    }\n    const id = data.id;\n    if (typeof id !== \"number\" && typeof id !== \"string\") {\n        throw new Error(\"Invalid id field\");\n    }\n    if (typeof data.result === \"undefined\") {\n        throw new Error(\"Invalid result field\");\n    }\n    const result = data.result;\n    return {\n        jsonrpc: \"2.0\",\n        id: id,\n        result: result,\n    };\n}\nexports.parseJsonRpcSuccessResponse = parseJsonRpcSuccessResponse;\n/**\n * Returns a JsonRpcErrorResponse if input can be parsed as a JSON-RPC error. Otherwise parses\n * input as JsonRpcSuccessResponse. Throws if input is neither a valid error nor success response.\n */\nfunction parseJsonRpcResponse(data) {\n    let response;\n    try {\n        response = parseJsonRpcErrorResponse(data);\n    }\n    catch (_) {\n        response = parseJsonRpcSuccessResponse(data);\n    }\n    return response;\n}\nexports.parseJsonRpcResponse = parseJsonRpcResponse;\n//# sourceMappingURL=parse.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC9wYXJzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw0QkFBNEIsR0FBRyxtQ0FBbUMsR0FBRyxpQ0FBaUMsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0I7QUFDN0osd0JBQXdCLG1CQUFPLENBQUMscUZBQWlCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGFBQWE7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCwyQkFBMkIsSUFBSTtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELHFCQUFxQjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxxQkFBcUI7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvanNvbi1ycGMvYnVpbGQvcGFyc2UuanM/ZWJmZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VKc29uUnBjUmVzcG9uc2UgPSBleHBvcnRzLnBhcnNlSnNvblJwY1N1Y2Nlc3NSZXNwb25zZSA9IGV4cG9ydHMucGFyc2VKc29uUnBjRXJyb3JSZXNwb25zZSA9IGV4cG9ydHMucGFyc2VKc29uUnBjUmVxdWVzdCA9IGV4cG9ydHMucGFyc2VKc29uUnBjSWQgPSB2b2lkIDA7XG5jb25zdCBjb21wYXRpYmlsaXR5XzEgPSByZXF1aXJlKFwiLi9jb21wYXRpYmlsaXR5XCIpO1xuLyoqXG4gKiBFeHRyYWN0cyBJRCBmaWVsZCBmcm9tIHJlcXVlc3Qgb3IgcmVzcG9uc2Ugb2JqZWN0LlxuICpcbiAqIFJldHVybnMgYG51bGxgIHdoZW4gbm8gdmFsaWQgSUQgd2FzIGZvdW5kLlxuICovXG5mdW5jdGlvbiBwYXJzZUpzb25ScGNJZChkYXRhKSB7XG4gICAgaWYgKCEoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVEaWN0aW9uYXJ5KShkYXRhKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEYXRhIG11c3QgYmUgSlNPTiBjb21wYXRpYmxlIGRpY3Rpb25hcnlcIik7XG4gICAgfVxuICAgIGNvbnN0IGlkID0gZGF0YS5pZDtcbiAgICBpZiAodHlwZW9mIGlkICE9PSBcIm51bWJlclwiICYmIHR5cGVvZiBpZCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgcmV0dXJuIGlkO1xufVxuZXhwb3J0cy5wYXJzZUpzb25ScGNJZCA9IHBhcnNlSnNvblJwY0lkO1xuZnVuY3Rpb24gcGFyc2VKc29uUnBjUmVxdWVzdChkYXRhKSB7XG4gICAgaWYgKCEoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVEaWN0aW9uYXJ5KShkYXRhKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEYXRhIG11c3QgYmUgSlNPTiBjb21wYXRpYmxlIGRpY3Rpb25hcnlcIik7XG4gICAgfVxuICAgIGlmIChkYXRhLmpzb25ycGMgIT09IFwiMi4wXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBHb3QgdW5leHBlY3RlZCBqc29ucnBjIHZlcnNpb246ICR7ZGF0YS5qc29ucnBjfWApO1xuICAgIH1cbiAgICBjb25zdCBpZCA9IHBhcnNlSnNvblJwY0lkKGRhdGEpO1xuICAgIGlmIChpZCA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlkIGZpZWxkXCIpO1xuICAgIH1cbiAgICBjb25zdCBtZXRob2QgPSBkYXRhLm1ldGhvZDtcbiAgICBpZiAodHlwZW9mIG1ldGhvZCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG1ldGhvZCBmaWVsZFwiKTtcbiAgICB9XG4gICAgaWYgKCEoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVBcnJheSkoZGF0YS5wYXJhbXMpICYmICEoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVEaWN0aW9uYXJ5KShkYXRhLnBhcmFtcykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBwYXJhbXMgZmllbGRcIik7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIGlkOiBpZCxcbiAgICAgICAgbWV0aG9kOiBtZXRob2QsXG4gICAgICAgIHBhcmFtczogZGF0YS5wYXJhbXMsXG4gICAgfTtcbn1cbmV4cG9ydHMucGFyc2VKc29uUnBjUmVxdWVzdCA9IHBhcnNlSnNvblJwY1JlcXVlc3Q7XG5mdW5jdGlvbiBwYXJzZUVycm9yKGVycm9yKSB7XG4gICAgaWYgKHR5cGVvZiBlcnJvci5jb2RlICE9PSBcIm51bWJlclwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIHByb3BlcnR5ICdjb2RlJyBpcyBub3QgYSBudW1iZXJcIik7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZXJyb3IubWVzc2FnZSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFcnJvciBwcm9wZXJ0eSAnbWVzc2FnZScgaXMgbm90IGEgc3RyaW5nXCIpO1xuICAgIH1cbiAgICBsZXQgbWF5YmVVbmRlZmluZWREYXRhO1xuICAgIGlmIChlcnJvci5kYXRhID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbWF5YmVVbmRlZmluZWREYXRhID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBlbHNlIGlmICgoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVWYWx1ZSkoZXJyb3IuZGF0YSkpIHtcbiAgICAgICAgbWF5YmVVbmRlZmluZWREYXRhID0gZXJyb3IuZGF0YTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVycm9yIHByb3BlcnR5ICdkYXRhJyBpcyBkZWZpbmVkIGJ1dCBub3QgYSBKU09OIGNvbXBhdGlibGUgdmFsdWUuXCIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBjb2RlOiBlcnJvci5jb2RlLFxuICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICAuLi4obWF5YmVVbmRlZmluZWREYXRhICE9PSB1bmRlZmluZWQgPyB7IGRhdGE6IG1heWJlVW5kZWZpbmVkRGF0YSB9IDoge30pLFxuICAgIH07XG59XG4vKiogVGhyb3dzIGlmIGRhdGEgaXMgbm90IGEgSnNvblJwY0Vycm9yUmVzcG9uc2UgKi9cbmZ1bmN0aW9uIHBhcnNlSnNvblJwY0Vycm9yUmVzcG9uc2UoZGF0YSkge1xuICAgIGlmICghKDAsIGNvbXBhdGliaWxpdHlfMS5pc0pzb25Db21wYXRpYmxlRGljdGlvbmFyeSkoZGF0YSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRGF0YSBtdXN0IGJlIEpTT04gY29tcGF0aWJsZSBkaWN0aW9uYXJ5XCIpO1xuICAgIH1cbiAgICBpZiAoZGF0YS5qc29ucnBjICE9PSBcIjIuMFwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgR290IHVuZXhwZWN0ZWQganNvbnJwYyB2ZXJzaW9uOiAke0pTT04uc3RyaW5naWZ5KGRhdGEpfWApO1xuICAgIH1cbiAgICBjb25zdCBpZCA9IGRhdGEuaWQ7XG4gICAgaWYgKHR5cGVvZiBpZCAhPT0gXCJudW1iZXJcIiAmJiB0eXBlb2YgaWQgIT09IFwic3RyaW5nXCIgJiYgaWQgIT09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBpZCBmaWVsZFwiKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBkYXRhLmVycm9yID09PSBcInVuZGVmaW5lZFwiIHx8ICEoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVEaWN0aW9uYXJ5KShkYXRhLmVycm9yKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGVycm9yIGZpZWxkXCIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICBpZDogaWQsXG4gICAgICAgIGVycm9yOiBwYXJzZUVycm9yKGRhdGEuZXJyb3IpLFxuICAgIH07XG59XG5leHBvcnRzLnBhcnNlSnNvblJwY0Vycm9yUmVzcG9uc2UgPSBwYXJzZUpzb25ScGNFcnJvclJlc3BvbnNlO1xuLyoqIFRocm93cyBpZiBkYXRhIGlzIG5vdCBhIEpzb25ScGNTdWNjZXNzUmVzcG9uc2UgKi9cbmZ1bmN0aW9uIHBhcnNlSnNvblJwY1N1Y2Nlc3NSZXNwb25zZShkYXRhKSB7XG4gICAgaWYgKCEoMCwgY29tcGF0aWJpbGl0eV8xLmlzSnNvbkNvbXBhdGlibGVEaWN0aW9uYXJ5KShkYXRhKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEYXRhIG11c3QgYmUgSlNPTiBjb21wYXRpYmxlIGRpY3Rpb25hcnlcIik7XG4gICAgfVxuICAgIGlmIChkYXRhLmpzb25ycGMgIT09IFwiMi4wXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBHb3QgdW5leHBlY3RlZCBqc29ucnBjIHZlcnNpb246ICR7SlNPTi5zdHJpbmdpZnkoZGF0YSl9YCk7XG4gICAgfVxuICAgIGNvbnN0IGlkID0gZGF0YS5pZDtcbiAgICBpZiAodHlwZW9mIGlkICE9PSBcIm51bWJlclwiICYmIHR5cGVvZiBpZCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGlkIGZpZWxkXCIpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGRhdGEucmVzdWx0ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgcmVzdWx0IGZpZWxkXCIpO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBkYXRhLnJlc3VsdDtcbiAgICByZXR1cm4ge1xuICAgICAgICBqc29ucnBjOiBcIjIuMFwiLFxuICAgICAgICBpZDogaWQsXG4gICAgICAgIHJlc3VsdDogcmVzdWx0LFxuICAgIH07XG59XG5leHBvcnRzLnBhcnNlSnNvblJwY1N1Y2Nlc3NSZXNwb25zZSA9IHBhcnNlSnNvblJwY1N1Y2Nlc3NSZXNwb25zZTtcbi8qKlxuICogUmV0dXJucyBhIEpzb25ScGNFcnJvclJlc3BvbnNlIGlmIGlucHV0IGNhbiBiZSBwYXJzZWQgYXMgYSBKU09OLVJQQyBlcnJvci4gT3RoZXJ3aXNlIHBhcnNlc1xuICogaW5wdXQgYXMgSnNvblJwY1N1Y2Nlc3NSZXNwb25zZS4gVGhyb3dzIGlmIGlucHV0IGlzIG5laXRoZXIgYSB2YWxpZCBlcnJvciBub3Igc3VjY2VzcyByZXNwb25zZS5cbiAqL1xuZnVuY3Rpb24gcGFyc2VKc29uUnBjUmVzcG9uc2UoZGF0YSkge1xuICAgIGxldCByZXNwb25zZTtcbiAgICB0cnkge1xuICAgICAgICByZXNwb25zZSA9IHBhcnNlSnNvblJwY0Vycm9yUmVzcG9uc2UoZGF0YSk7XG4gICAgfVxuICAgIGNhdGNoIChfKSB7XG4gICAgICAgIHJlc3BvbnNlID0gcGFyc2VKc29uUnBjU3VjY2Vzc1Jlc3BvbnNlKGRhdGEpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2U7XG59XG5leHBvcnRzLnBhcnNlSnNvblJwY1Jlc3BvbnNlID0gcGFyc2VKc29uUnBjUmVzcG9uc2U7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYXJzZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/json-rpc/build/parse.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/json-rpc/build/types.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/json-rpc/build/types.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.jsonRpcCode = exports.isJsonRpcSuccessResponse = exports.isJsonRpcErrorResponse = void 0;\nfunction isJsonRpcErrorResponse(response) {\n    return typeof response.error === \"object\";\n}\nexports.isJsonRpcErrorResponse = isJsonRpcErrorResponse;\nfunction isJsonRpcSuccessResponse(response) {\n    return !isJsonRpcErrorResponse(response);\n}\nexports.isJsonRpcSuccessResponse = isJsonRpcSuccessResponse;\n/**\n * Error codes as specified in JSON-RPC 2.0\n *\n * @see https://www.jsonrpc.org/specification#error_object\n */\nexports.jsonRpcCode = {\n    parseError: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internalError: -32603,\n    // server error (Reserved for implementation-defined server-errors.):\n    // -32000 to -32099\n    serverError: {\n        default: -32000,\n    },\n};\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9qc29uLXJwYy9idWlsZC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxnQ0FBZ0MsR0FBRyw4QkFBOEI7QUFDdkY7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL2pzb24tcnBjL2J1aWxkL3R5cGVzLmpzP2UzMjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmpzb25ScGNDb2RlID0gZXhwb3J0cy5pc0pzb25ScGNTdWNjZXNzUmVzcG9uc2UgPSBleHBvcnRzLmlzSnNvblJwY0Vycm9yUmVzcG9uc2UgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc0pzb25ScGNFcnJvclJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiByZXNwb25zZS5lcnJvciA9PT0gXCJvYmplY3RcIjtcbn1cbmV4cG9ydHMuaXNKc29uUnBjRXJyb3JSZXNwb25zZSA9IGlzSnNvblJwY0Vycm9yUmVzcG9uc2U7XG5mdW5jdGlvbiBpc0pzb25ScGNTdWNjZXNzUmVzcG9uc2UocmVzcG9uc2UpIHtcbiAgICByZXR1cm4gIWlzSnNvblJwY0Vycm9yUmVzcG9uc2UocmVzcG9uc2UpO1xufVxuZXhwb3J0cy5pc0pzb25ScGNTdWNjZXNzUmVzcG9uc2UgPSBpc0pzb25ScGNTdWNjZXNzUmVzcG9uc2U7XG4vKipcbiAqIEVycm9yIGNvZGVzIGFzIHNwZWNpZmllZCBpbiBKU09OLVJQQyAyLjBcbiAqXG4gKiBAc2VlIGh0dHBzOi8vd3d3Lmpzb25ycGMub3JnL3NwZWNpZmljYXRpb24jZXJyb3Jfb2JqZWN0XG4gKi9cbmV4cG9ydHMuanNvblJwY0NvZGUgPSB7XG4gICAgcGFyc2VFcnJvcjogLTMyNzAwLFxuICAgIGludmFsaWRSZXF1ZXN0OiAtMzI2MDAsXG4gICAgbWV0aG9kTm90Rm91bmQ6IC0zMjYwMSxcbiAgICBpbnZhbGlkUGFyYW1zOiAtMzI2MDIsXG4gICAgaW50ZXJuYWxFcnJvcjogLTMyNjAzLFxuICAgIC8vIHNlcnZlciBlcnJvciAoUmVzZXJ2ZWQgZm9yIGltcGxlbWVudGF0aW9uLWRlZmluZWQgc2VydmVyLWVycm9ycy4pOlxuICAgIC8vIC0zMjAwMCB0byAtMzIwOTlcbiAgICBzZXJ2ZXJFcnJvcjoge1xuICAgICAgICBkZWZhdWx0OiAtMzIwMDAsXG4gICAgfSxcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/json-rpc/build/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/decimal.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/decimal.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Decimal = void 0;\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\n// Too large values lead to massive memory usage. Limit to something sensible.\n// The largest value we need is 18 (Ether).\nconst maxFractionalDigits = 100;\n/**\n * A type for arbitrary precision, non-negative decimals.\n *\n * Instances of this class are immutable.\n */\nclass Decimal {\n    static fromUserInput(input, fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        const badCharacter = input.match(/[^0-9.]/);\n        if (badCharacter) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            throw new Error(`Invalid character at position ${badCharacter.index + 1}`);\n        }\n        let whole;\n        let fractional;\n        if (input === \"\") {\n            whole = \"0\";\n            fractional = \"\";\n        }\n        else if (input.search(/\\./) === -1) {\n            // integer format, no separator\n            whole = input;\n            fractional = \"\";\n        }\n        else {\n            const parts = input.split(\".\");\n            switch (parts.length) {\n                case 0:\n                case 1:\n                    throw new Error(\"Fewer than two elements in split result. This must not happen here.\");\n                case 2:\n                    if (!parts[1])\n                        throw new Error(\"Fractional part missing\");\n                    whole = parts[0];\n                    fractional = parts[1].replace(/0+$/, \"\");\n                    break;\n                default:\n                    throw new Error(\"More than one separator found\");\n            }\n        }\n        if (fractional.length > fractionalDigits) {\n            throw new Error(\"Got more fractional digits than supported\");\n        }\n        const quantity = `${whole}${fractional.padEnd(fractionalDigits, \"0\")}`;\n        return new Decimal(quantity, fractionalDigits);\n    }\n    static fromAtomics(atomics, fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(atomics, fractionalDigits);\n    }\n    /**\n     * Creates a Decimal with value 0.0 and the given number of fractial digits.\n     *\n     * Fractional digits are not relevant for the value but needed to be able\n     * to perform arithmetic operations with other decimals.\n     */\n    static zero(fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(\"0\", fractionalDigits);\n    }\n    /**\n     * Creates a Decimal with value 1.0 and the given number of fractial digits.\n     *\n     * Fractional digits are not relevant for the value but needed to be able\n     * to perform arithmetic operations with other decimals.\n     */\n    static one(fractionalDigits) {\n        Decimal.verifyFractionalDigits(fractionalDigits);\n        return new Decimal(\"1\" + \"0\".repeat(fractionalDigits), fractionalDigits);\n    }\n    static verifyFractionalDigits(fractionalDigits) {\n        if (!Number.isInteger(fractionalDigits))\n            throw new Error(\"Fractional digits is not an integer\");\n        if (fractionalDigits < 0)\n            throw new Error(\"Fractional digits must not be negative\");\n        if (fractionalDigits > maxFractionalDigits) {\n            throw new Error(`Fractional digits must not exceed ${maxFractionalDigits}`);\n        }\n    }\n    static compare(a, b) {\n        if (a.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        return a.data.atomics.cmp(new bn_js_1.default(b.atomics));\n    }\n    get atomics() {\n        return this.data.atomics.toString();\n    }\n    get fractionalDigits() {\n        return this.data.fractionalDigits;\n    }\n    constructor(atomics, fractionalDigits) {\n        if (!atomics.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format. Only non-negative integers in decimal representation supported.\");\n        }\n        this.data = {\n            atomics: new bn_js_1.default(atomics),\n            fractionalDigits: fractionalDigits,\n        };\n    }\n    /** Creates a new instance with the same value */\n    clone() {\n        return new Decimal(this.atomics, this.fractionalDigits);\n    }\n    /** Returns the greatest decimal <= this which has no fractional part (rounding down) */\n    floor() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return this.clone();\n        }\n        else {\n            return Decimal.fromAtomics(whole.mul(factor).toString(), this.fractionalDigits);\n        }\n    }\n    /** Returns the smallest decimal >= this which has no fractional part (rounding up) */\n    ceil() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return this.clone();\n        }\n        else {\n            return Decimal.fromAtomics(whole.addn(1).mul(factor).toString(), this.fractionalDigits);\n        }\n    }\n    toString() {\n        const factor = new bn_js_1.default(10).pow(new bn_js_1.default(this.data.fractionalDigits));\n        const whole = this.data.atomics.div(factor);\n        const fractional = this.data.atomics.mod(factor);\n        if (fractional.isZero()) {\n            return whole.toString();\n        }\n        else {\n            const fullFractionalPart = fractional.toString().padStart(this.data.fractionalDigits, \"0\");\n            const trimmedFractionalPart = fullFractionalPart.replace(/0+$/, \"\");\n            return `${whole.toString()}.${trimmedFractionalPart}`;\n        }\n    }\n    /**\n     * Returns an approximation as a float type. Only use this if no\n     * exact calculation is required.\n     */\n    toFloatApproximation() {\n        const out = Number(this.toString());\n        if (Number.isNaN(out))\n            throw new Error(\"Conversion to number failed\");\n        return out;\n    }\n    /**\n     * a.plus(b) returns a+b.\n     *\n     * Both values need to have the same fractional digits.\n     */\n    plus(b) {\n        if (this.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        const sum = this.data.atomics.add(new bn_js_1.default(b.atomics));\n        return new Decimal(sum.toString(), this.fractionalDigits);\n    }\n    /**\n     * a.minus(b) returns a-b.\n     *\n     * Both values need to have the same fractional digits.\n     * The resulting difference needs to be non-negative.\n     */\n    minus(b) {\n        if (this.fractionalDigits !== b.fractionalDigits)\n            throw new Error(\"Fractional digits do not match\");\n        const difference = this.data.atomics.sub(new bn_js_1.default(b.atomics));\n        if (difference.ltn(0))\n            throw new Error(\"Difference must not be negative\");\n        return new Decimal(difference.toString(), this.fractionalDigits);\n    }\n    /**\n     * a.multiply(b) returns a*b.\n     *\n     * We only allow multiplication by unsigned integers to avoid rounding errors.\n     */\n    multiply(b) {\n        const product = this.data.atomics.mul(new bn_js_1.default(b.toString()));\n        return new Decimal(product.toString(), this.fractionalDigits);\n    }\n    equals(b) {\n        return Decimal.compare(this, b) === 0;\n    }\n    isLessThan(b) {\n        return Decimal.compare(this, b) < 0;\n    }\n    isLessThanOrEqual(b) {\n        return Decimal.compare(this, b) <= 0;\n    }\n    isGreaterThan(b) {\n        return Decimal.compare(this, b) > 0;\n    }\n    isGreaterThanOrEqual(b) {\n        return Decimal.compare(this, b) >= 0;\n    }\n}\nexports.Decimal = Decimal;\n//# sourceMappingURL=decimal.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/decimal.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/index.js":
/*!**************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64 = exports.Uint53 = exports.Uint32 = exports.Int53 = exports.Decimal = void 0;\nvar decimal_1 = __webpack_require__(/*! ./decimal */ \"(ssr)/./node_modules/@cosmjs/math/build/decimal.js\");\nObject.defineProperty(exports, \"Decimal\", ({ enumerable: true, get: function () { return decimal_1.Decimal; } }));\nvar integers_1 = __webpack_require__(/*! ./integers */ \"(ssr)/./node_modules/@cosmjs/math/build/integers.js\");\nObject.defineProperty(exports, \"Int53\", ({ enumerable: true, get: function () { return integers_1.Int53; } }));\nObject.defineProperty(exports, \"Uint32\", ({ enumerable: true, get: function () { return integers_1.Uint32; } }));\nObject.defineProperty(exports, \"Uint53\", ({ enumerable: true, get: function () { return integers_1.Uint53; } }));\nObject.defineProperty(exports, \"Uint64\", ({ enumerable: true, get: function () { return integers_1.Uint64; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9tYXRoL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWMsR0FBRyxjQUFjLEdBQUcsY0FBYyxHQUFHLGFBQWEsR0FBRyxlQUFlO0FBQ2xGLGdCQUFnQixtQkFBTyxDQUFDLHFFQUFXO0FBQ25DLDJDQUEwQyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUMvRyxpQkFBaUIsbUJBQU8sQ0FBQyx1RUFBWTtBQUNyQyx5Q0FBd0MsRUFBRSxxQ0FBcUMsNEJBQTRCLEVBQUM7QUFDNUcsMENBQXlDLEVBQUUscUNBQXFDLDZCQUE2QixFQUFDO0FBQzlHLDBDQUF5QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM5RywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvbWF0aC9idWlsZC9pbmRleC5qcz8xNTgzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5VaW50NjQgPSBleHBvcnRzLlVpbnQ1MyA9IGV4cG9ydHMuVWludDMyID0gZXhwb3J0cy5JbnQ1MyA9IGV4cG9ydHMuRGVjaW1hbCA9IHZvaWQgMDtcbnZhciBkZWNpbWFsXzEgPSByZXF1aXJlKFwiLi9kZWNpbWFsXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGVjaW1hbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVjaW1hbF8xLkRlY2ltYWw7IH0gfSk7XG52YXIgaW50ZWdlcnNfMSA9IHJlcXVpcmUoXCIuL2ludGVnZXJzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSW50NTNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVnZXJzXzEuSW50NTM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVaW50MzJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGludGVnZXJzXzEuVWludDMyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVWludDUzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBpbnRlZ2Vyc18xLlVpbnQ1MzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVpbnQ2NFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaW50ZWdlcnNfMS5VaW50NjQ7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/math/build/integers.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/math/build/integers.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Uint64 = exports.Uint53 = exports.Int53 = exports.Uint32 = void 0;\n/* eslint-disable no-bitwise */\nconst bn_js_1 = __importDefault(__webpack_require__(/*! bn.js */ \"(ssr)/./node_modules/bn.js/lib/bn.js\"));\nconst uint64MaxValue = new bn_js_1.default(\"18446744073709551615\", 10, \"be\");\nclass Uint32 {\n    /** @deprecated use Uint32.fromBytes */\n    static fromBigEndianBytes(bytes) {\n        return Uint32.fromBytes(bytes);\n    }\n    /**\n     * Creates a Uint32 from a fixed length byte array.\n     *\n     * @param bytes a list of exactly 4 bytes\n     * @param endianess defaults to big endian\n     */\n    static fromBytes(bytes, endianess = \"be\") {\n        if (bytes.length !== 4) {\n            throw new Error(\"Invalid input length. Expected 4 bytes.\");\n        }\n        for (let i = 0; i < bytes.length; ++i) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n                throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n            }\n        }\n        const beBytes = endianess === \"be\" ? bytes : Array.from(bytes).reverse();\n        // Use mulitiplication instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint32(beBytes[0] * 2 ** 24 + beBytes[1] * 2 ** 16 + beBytes[2] * 2 ** 8 + beBytes[3]);\n    }\n    static fromString(str) {\n        if (!str.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Uint32(Number.parseInt(str, 10));\n    }\n    constructor(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        if (input < 0 || input > 4294967295) {\n            throw new Error(\"Input not in uint32 range: \" + input.toString());\n        }\n        this.data = input;\n    }\n    toBytesBigEndian() {\n        // Use division instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint8Array([\n            Math.floor(this.data / 2 ** 24) & 0xff,\n            Math.floor(this.data / 2 ** 16) & 0xff,\n            Math.floor(this.data / 2 ** 8) & 0xff,\n            Math.floor(this.data / 2 ** 0) & 0xff,\n        ]);\n    }\n    toBytesLittleEndian() {\n        // Use division instead of shifting since bitwise operators are defined\n        // on SIGNED int32 in JavaScript and we don't want to risk surprises\n        return new Uint8Array([\n            Math.floor(this.data / 2 ** 0) & 0xff,\n            Math.floor(this.data / 2 ** 8) & 0xff,\n            Math.floor(this.data / 2 ** 16) & 0xff,\n            Math.floor(this.data / 2 ** 24) & 0xff,\n        ]);\n    }\n    toNumber() {\n        return this.data;\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Uint32 = Uint32;\nclass Int53 {\n    static fromString(str) {\n        if (!str.match(/^-?[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Int53(Number.parseInt(str, 10));\n    }\n    constructor(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        if (input < Number.MIN_SAFE_INTEGER || input > Number.MAX_SAFE_INTEGER) {\n            throw new Error(\"Input not in int53 range: \" + input.toString());\n        }\n        this.data = input;\n    }\n    toNumber() {\n        return this.data;\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Int53 = Int53;\nclass Uint53 {\n    static fromString(str) {\n        const signed = Int53.fromString(str);\n        return new Uint53(signed.toNumber());\n    }\n    constructor(input) {\n        const signed = new Int53(input);\n        if (signed.toNumber() < 0) {\n            throw new Error(\"Input is negative\");\n        }\n        this.data = signed;\n    }\n    toNumber() {\n        return this.data.toNumber();\n    }\n    toBigInt() {\n        return BigInt(this.toNumber());\n    }\n    toString() {\n        return this.data.toString();\n    }\n}\nexports.Uint53 = Uint53;\nclass Uint64 {\n    /** @deprecated use Uint64.fromBytes */\n    static fromBytesBigEndian(bytes) {\n        return Uint64.fromBytes(bytes);\n    }\n    /**\n     * Creates a Uint64 from a fixed length byte array.\n     *\n     * @param bytes a list of exactly 8 bytes\n     * @param endianess defaults to big endian\n     */\n    static fromBytes(bytes, endianess = \"be\") {\n        if (bytes.length !== 8) {\n            throw new Error(\"Invalid input length. Expected 8 bytes.\");\n        }\n        for (let i = 0; i < bytes.length; ++i) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] > 255 || bytes[i] < 0) {\n                throw new Error(\"Invalid value in byte. Found: \" + bytes[i]);\n            }\n        }\n        const beBytes = endianess === \"be\" ? Array.from(bytes) : Array.from(bytes).reverse();\n        return new Uint64(new bn_js_1.default(beBytes));\n    }\n    static fromString(str) {\n        if (!str.match(/^[0-9]+$/)) {\n            throw new Error(\"Invalid string format\");\n        }\n        return new Uint64(new bn_js_1.default(str, 10, \"be\"));\n    }\n    static fromNumber(input) {\n        if (Number.isNaN(input)) {\n            throw new Error(\"Input is not a number\");\n        }\n        if (!Number.isInteger(input)) {\n            throw new Error(\"Input is not an integer\");\n        }\n        let bigint;\n        try {\n            bigint = new bn_js_1.default(input);\n        }\n        catch {\n            throw new Error(\"Input is not a safe integer\");\n        }\n        return new Uint64(bigint);\n    }\n    constructor(data) {\n        if (data.isNeg()) {\n            throw new Error(\"Input is negative\");\n        }\n        if (data.gt(uint64MaxValue)) {\n            throw new Error(\"Input exceeds uint64 range\");\n        }\n        this.data = data;\n    }\n    toBytesBigEndian() {\n        return Uint8Array.from(this.data.toArray(\"be\", 8));\n    }\n    toBytesLittleEndian() {\n        return Uint8Array.from(this.data.toArray(\"le\", 8));\n    }\n    toString() {\n        return this.data.toString(10);\n    }\n    toBigInt() {\n        return BigInt(this.toString());\n    }\n    toNumber() {\n        return this.data.toNumber();\n    }\n}\nexports.Uint64 = Uint64;\n// Assign classes to unused variables in order to verify static interface conformance at compile time.\n// Workaround for https://github.com/microsoft/TypeScript/issues/33892\nconst _int53Class = Int53;\nconst _uint53Class = Uint53;\nconst _uint32Class = Uint32;\nconst _uint64Class = Uint64;\n//# sourceMappingURL=integers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/math/build/integers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/decode.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/decode.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeTxRaw = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\n/**\n * Takes a serialized TxRaw (the bytes stored in Tendermint) and decodes it into something usable.\n */\nfunction decodeTxRaw(tx) {\n    const txRaw = tx_1.TxRaw.decode(tx);\n    return {\n        authInfo: tx_1.AuthInfo.decode(txRaw.authInfoBytes),\n        body: tx_1.TxBody.decode(txRaw.bodyBytes),\n        signatures: txRaw.signatures,\n    };\n}\nexports.decodeTxRaw = decodeTxRaw;\n//# sourceMappingURL=decode.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2RlY29kZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsYUFBYSxtQkFBTyxDQUFDLG9HQUFtQztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3Byb3RvLXNpZ25pbmcvYnVpbGQvZGVjb2RlLmpzPzE3NjciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmRlY29kZVR4UmF3ID0gdm9pZCAwO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3R4L3YxYmV0YTEvdHhcIik7XG4vKipcbiAqIFRha2VzIGEgc2VyaWFsaXplZCBUeFJhdyAodGhlIGJ5dGVzIHN0b3JlZCBpbiBUZW5kZXJtaW50KSBhbmQgZGVjb2RlcyBpdCBpbnRvIHNvbWV0aGluZyB1c2FibGUuXG4gKi9cbmZ1bmN0aW9uIGRlY29kZVR4UmF3KHR4KSB7XG4gICAgY29uc3QgdHhSYXcgPSB0eF8xLlR4UmF3LmRlY29kZSh0eCk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYXV0aEluZm86IHR4XzEuQXV0aEluZm8uZGVjb2RlKHR4UmF3LmF1dGhJbmZvQnl0ZXMpLFxuICAgICAgICBib2R5OiB0eF8xLlR4Qm9keS5kZWNvZGUodHhSYXcuYm9keUJ5dGVzKSxcbiAgICAgICAgc2lnbmF0dXJlczogdHhSYXcuc2lnbmF0dXJlcyxcbiAgICB9O1xufVxuZXhwb3J0cy5kZWNvZGVUeFJhdyA9IGRlY29kZVR4UmF3O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVjb2RlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/decode.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DirectSecp256k1HdWallet = exports.extractKdfConfiguration = void 0;\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst signing_1 = __webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\");\nconst wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js\");\nconst serializationTypeV1 = \"directsecp256k1hdwallet-v1\";\n/**\n * A KDF configuration that is not very strong but can be used on the main thread.\n * It takes about 1 second in Node.js 16.0.0 and should have similar runtimes in other modern Wasm hosts.\n */\nconst basicPasswordHashingOptions = {\n    algorithm: \"argon2id\",\n    params: {\n        outputLength: 32,\n        opsLimit: 24,\n        memLimitKib: 12 * 1024,\n    },\n};\nfunction isDerivationJson(thing) {\n    if (!(0, utils_1.isNonNullObject)(thing))\n        return false;\n    if (typeof thing.hdPath !== \"string\")\n        return false;\n    if (typeof thing.prefix !== \"string\")\n        return false;\n    return true;\n}\nfunction extractKdfConfigurationV1(doc) {\n    return doc.kdf;\n}\nfunction extractKdfConfiguration(serialization) {\n    const root = JSON.parse(serialization);\n    if (!(0, utils_1.isNonNullObject)(root))\n        throw new Error(\"Root document is not an object.\");\n    switch (root.type) {\n        case serializationTypeV1:\n            return extractKdfConfigurationV1(root);\n        default:\n            throw new Error(\"Unsupported serialization type\");\n    }\n}\nexports.extractKdfConfiguration = extractKdfConfiguration;\nconst defaultOptions = {\n    bip39Password: \"\",\n    hdPaths: [(0, amino_1.makeCosmoshubPath)(0)],\n    prefix: \"cosmos\",\n};\n/** A wallet for protobuf based signing using SIGN_MODE_DIRECT */\nclass DirectSecp256k1HdWallet {\n    /**\n     * Restores a wallet from the given BIP39 mnemonic.\n     *\n     * @param mnemonic Any valid English mnemonic.\n     * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async fromMnemonic(mnemonic, options = {}) {\n        const mnemonicChecked = new crypto_1.EnglishMnemonic(mnemonic);\n        const seed = await crypto_1.Bip39.mnemonicToSeed(mnemonicChecked, options.bip39Password);\n        return new DirectSecp256k1HdWallet(mnemonicChecked, {\n            ...options,\n            seed: seed,\n        });\n    }\n    /**\n     * Generates a new wallet with a BIP39 mnemonic of the given length.\n     *\n     * @param length The number of words in the mnemonic (12, 15, 18, 21 or 24).\n     * @param options An optional `DirectSecp256k1HdWalletOptions` object optionally containing a bip39Password, hdPaths, and prefix.\n     */\n    static async generate(length = 12, options = {}) {\n        const entropyLength = 4 * Math.floor((11 * length) / 33);\n        const entropy = crypto_1.Random.getBytes(entropyLength);\n        const mnemonic = crypto_1.Bip39.encode(entropy);\n        return DirectSecp256k1HdWallet.fromMnemonic(mnemonic.toString(), options);\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    static async deserialize(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        switch (root.type) {\n            case serializationTypeV1:\n                return DirectSecp256k1HdWallet.deserializeTypeV1(serialization, password);\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    /**\n     * Restores a wallet from an encrypted serialization.\n     *\n     * This is an advanced alternative to calling `deserialize(serialization, password)` directly, which allows\n     * you to offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF configuration. This can be\n     * done using `extractKdfConfiguration(serialization)` and `executeKdf(password, kdfConfiguration)` from this package.\n     */\n    static async deserializeWithEncryptionKey(serialization, encryptionKey) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const untypedRoot = root;\n        switch (untypedRoot.type) {\n            case serializationTypeV1: {\n                const decryptedBytes = await (0, wallet_1.decrypt)((0, encoding_1.fromBase64)(untypedRoot.data), encryptionKey, untypedRoot.encryption);\n                const decryptedDocument = JSON.parse((0, encoding_1.fromUtf8)(decryptedBytes));\n                const { mnemonic, accounts } = decryptedDocument;\n                (0, utils_1.assert)(typeof mnemonic === \"string\");\n                if (!Array.isArray(accounts))\n                    throw new Error(\"Property 'accounts' is not an array\");\n                if (!accounts.every((account) => isDerivationJson(account))) {\n                    throw new Error(\"Account is not in the correct format.\");\n                }\n                const firstPrefix = accounts[0].prefix;\n                if (!accounts.every(({ prefix }) => prefix === firstPrefix)) {\n                    throw new Error(\"Accounts do not all have the same prefix\");\n                }\n                const hdPaths = accounts.map(({ hdPath }) => (0, crypto_1.stringToPath)(hdPath));\n                return DirectSecp256k1HdWallet.fromMnemonic(mnemonic, {\n                    hdPaths: hdPaths,\n                    prefix: firstPrefix,\n                });\n            }\n            default:\n                throw new Error(\"Unsupported serialization type\");\n        }\n    }\n    static async deserializeTypeV1(serialization, password) {\n        const root = JSON.parse(serialization);\n        if (!(0, utils_1.isNonNullObject)(root))\n            throw new Error(\"Root document is not an object.\");\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, root.kdf);\n        return DirectSecp256k1HdWallet.deserializeWithEncryptionKey(serialization, encryptionKey);\n    }\n    constructor(mnemonic, options) {\n        const prefix = options.prefix ?? defaultOptions.prefix;\n        const hdPaths = options.hdPaths ?? defaultOptions.hdPaths;\n        this.secret = mnemonic;\n        this.seed = options.seed;\n        this.accounts = hdPaths.map((hdPath) => ({\n            hdPath: hdPath,\n            prefix: prefix,\n        }));\n    }\n    get mnemonic() {\n        return this.secret.toString();\n    }\n    async getAccounts() {\n        const accountsWithPrivkeys = await this.getAccountsWithPrivkeys();\n        return accountsWithPrivkeys.map(({ algo, pubkey, address }) => ({\n            algo: algo,\n            pubkey: pubkey,\n            address: address,\n        }));\n    }\n    async signDirect(signerAddress, signDoc) {\n        const accounts = await this.getAccountsWithPrivkeys();\n        const account = accounts.find(({ address }) => address === signerAddress);\n        if (account === undefined) {\n            throw new Error(`Address ${signerAddress} not found in wallet`);\n        }\n        const { privkey, pubkey } = account;\n        const signBytes = (0, signing_1.makeSignBytes)(signDoc);\n        const hashedMessage = (0, crypto_1.sha256)(signBytes);\n        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(pubkey, signatureBytes);\n        return {\n            signed: signDoc,\n            signature: stdSignature,\n        };\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * @param password The user provided password used to generate an encryption key via a KDF.\n     *                 This is not normalized internally (see \"Unicode normalization\" to learn more).\n     */\n    async serialize(password) {\n        const kdfConfiguration = basicPasswordHashingOptions;\n        const encryptionKey = await (0, wallet_1.executeKdf)(password, kdfConfiguration);\n        return this.serializeWithEncryptionKey(encryptionKey, kdfConfiguration);\n    }\n    /**\n     * Generates an encrypted serialization of this wallet.\n     *\n     * This is an advanced alternative to calling `serialize(password)` directly, which allows you to\n     * offload the KDF execution to a non-UI thread (e.g. in a WebWorker).\n     *\n     * The caller is responsible for ensuring the key was derived with the given KDF options. If this\n     * is not the case, the wallet cannot be restored with the original password.\n     */\n    async serializeWithEncryptionKey(encryptionKey, kdfConfiguration) {\n        const dataToEncrypt = {\n            mnemonic: this.mnemonic,\n            accounts: this.accounts.map(({ hdPath, prefix }) => ({\n                hdPath: (0, crypto_1.pathToString)(hdPath),\n                prefix: prefix,\n            })),\n        };\n        const dataToEncryptRaw = (0, encoding_1.toUtf8)(JSON.stringify(dataToEncrypt));\n        const encryptionConfiguration = {\n            algorithm: wallet_1.supportedAlgorithms.xchacha20poly1305Ietf,\n        };\n        const encryptedData = await (0, wallet_1.encrypt)(dataToEncryptRaw, encryptionKey, encryptionConfiguration);\n        const out = {\n            type: serializationTypeV1,\n            kdf: kdfConfiguration,\n            encryption: encryptionConfiguration,\n            data: (0, encoding_1.toBase64)(encryptedData),\n        };\n        return JSON.stringify(out);\n    }\n    async getKeyPair(hdPath) {\n        const { privkey } = crypto_1.Slip10.derivePath(crypto_1.Slip10Curve.Secp256k1, this.seed, hdPath);\n        const { pubkey } = await crypto_1.Secp256k1.makeKeypair(privkey);\n        return {\n            privkey: privkey,\n            pubkey: crypto_1.Secp256k1.compressPubkey(pubkey),\n        };\n    }\n    async getAccountsWithPrivkeys() {\n        return Promise.all(this.accounts.map(async ({ hdPath, prefix }) => {\n            const { privkey, pubkey } = await this.getKeyPair(hdPath);\n            const address = (0, encoding_1.toBech32)(prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(pubkey));\n            return {\n                algo: \"secp256k1\",\n                privkey: privkey,\n                pubkey: pubkey,\n                address: address,\n            };\n        }));\n    }\n}\nexports.DirectSecp256k1HdWallet = DirectSecp256k1HdWallet;\n//# sourceMappingURL=directsecp256k1hdwallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DirectSecp256k1Wallet = void 0;\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst signing_1 = __webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\");\n/**\n * A wallet that holds a single secp256k1 keypair.\n *\n * If you want to work with BIP39 mnemonics and multiple accounts, use DirectSecp256k1HdWallet.\n */\nclass DirectSecp256k1Wallet {\n    /**\n     * Creates a DirectSecp256k1Wallet from the given private key\n     *\n     * @param privkey The private key.\n     * @param prefix The bech32 address prefix (human readable part). Defaults to \"cosmos\".\n     */\n    static async fromKey(privkey, prefix = \"cosmos\") {\n        const uncompressed = (await crypto_1.Secp256k1.makeKeypair(privkey)).pubkey;\n        return new DirectSecp256k1Wallet(privkey, crypto_1.Secp256k1.compressPubkey(uncompressed), prefix);\n    }\n    constructor(privkey, pubkey, prefix) {\n        this.privkey = privkey;\n        this.pubkey = pubkey;\n        this.prefix = prefix;\n    }\n    get address() {\n        return (0, encoding_1.toBech32)(this.prefix, (0, amino_1.rawSecp256k1PubkeyToRawAddress)(this.pubkey));\n    }\n    async getAccounts() {\n        return [\n            {\n                algo: \"secp256k1\",\n                address: this.address,\n                pubkey: this.pubkey,\n            },\n        ];\n    }\n    async signDirect(address, signDoc) {\n        const signBytes = (0, signing_1.makeSignBytes)(signDoc);\n        if (address !== this.address) {\n            throw new Error(`Address ${address} not found in wallet`);\n        }\n        const hashedMessage = (0, crypto_1.sha256)(signBytes);\n        const signature = await crypto_1.Secp256k1.createSignature(hashedMessage, this.privkey);\n        const signatureBytes = new Uint8Array([...signature.r(32), ...signature.s(32)]);\n        const stdSignature = (0, amino_1.encodeSecp256k1Signature)(this.pubkey, signatureBytes);\n        return {\n            signed: signDoc,\n            signature: stdSignature,\n        };\n    }\n}\nexports.DirectSecp256k1Wallet = DirectSecp256k1Wallet;\n//# sourceMappingURL=directsecp256k1wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2RpcmVjdHNlY3AyNTZrMXdhbGxldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxrQkFBa0IsbUJBQU8sQ0FBQyw4RUFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxTQUFTO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvcHJvdG8tc2lnbmluZy9idWlsZC9kaXJlY3RzZWNwMjU2azF3YWxsZXQuanM/NDg0MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuRGlyZWN0U2VjcDI1NmsxV2FsbGV0ID0gdm9pZCAwO1xuY29uc3QgYW1pbm9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2FtaW5vXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBzaWduaW5nXzEgPSByZXF1aXJlKFwiLi9zaWduaW5nXCIpO1xuLyoqXG4gKiBBIHdhbGxldCB0aGF0IGhvbGRzIGEgc2luZ2xlIHNlY3AyNTZrMSBrZXlwYWlyLlxuICpcbiAqIElmIHlvdSB3YW50IHRvIHdvcmsgd2l0aCBCSVAzOSBtbmVtb25pY3MgYW5kIG11bHRpcGxlIGFjY291bnRzLCB1c2UgRGlyZWN0U2VjcDI1NmsxSGRXYWxsZXQuXG4gKi9cbmNsYXNzIERpcmVjdFNlY3AyNTZrMVdhbGxldCB7XG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIERpcmVjdFNlY3AyNTZrMVdhbGxldCBmcm9tIHRoZSBnaXZlbiBwcml2YXRlIGtleVxuICAgICAqXG4gICAgICogQHBhcmFtIHByaXZrZXkgVGhlIHByaXZhdGUga2V5LlxuICAgICAqIEBwYXJhbSBwcmVmaXggVGhlIGJlY2gzMiBhZGRyZXNzIHByZWZpeCAoaHVtYW4gcmVhZGFibGUgcGFydCkuIERlZmF1bHRzIHRvIFwiY29zbW9zXCIuXG4gICAgICovXG4gICAgc3RhdGljIGFzeW5jIGZyb21LZXkocHJpdmtleSwgcHJlZml4ID0gXCJjb3Ntb3NcIikge1xuICAgICAgICBjb25zdCB1bmNvbXByZXNzZWQgPSAoYXdhaXQgY3J5cHRvXzEuU2VjcDI1NmsxLm1ha2VLZXlwYWlyKHByaXZrZXkpKS5wdWJrZXk7XG4gICAgICAgIHJldHVybiBuZXcgRGlyZWN0U2VjcDI1NmsxV2FsbGV0KHByaXZrZXksIGNyeXB0b18xLlNlY3AyNTZrMS5jb21wcmVzc1B1YmtleSh1bmNvbXByZXNzZWQpLCBwcmVmaXgpO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihwcml2a2V5LCBwdWJrZXksIHByZWZpeCkge1xuICAgICAgICB0aGlzLnByaXZrZXkgPSBwcml2a2V5O1xuICAgICAgICB0aGlzLnB1YmtleSA9IHB1YmtleTtcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgfVxuICAgIGdldCBhZGRyZXNzKCkge1xuICAgICAgICByZXR1cm4gKDAsIGVuY29kaW5nXzEudG9CZWNoMzIpKHRoaXMucHJlZml4LCAoMCwgYW1pbm9fMS5yYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MpKHRoaXMucHVia2V5KSk7XG4gICAgfVxuICAgIGFzeW5jIGdldEFjY291bnRzKCkge1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGFsZ286IFwic2VjcDI1NmsxXCIsXG4gICAgICAgICAgICAgICAgYWRkcmVzczogdGhpcy5hZGRyZXNzLFxuICAgICAgICAgICAgICAgIHB1YmtleTogdGhpcy5wdWJrZXksXG4gICAgICAgICAgICB9LFxuICAgICAgICBdO1xuICAgIH1cbiAgICBhc3luYyBzaWduRGlyZWN0KGFkZHJlc3MsIHNpZ25Eb2MpIHtcbiAgICAgICAgY29uc3Qgc2lnbkJ5dGVzID0gKDAsIHNpZ25pbmdfMS5tYWtlU2lnbkJ5dGVzKShzaWduRG9jKTtcbiAgICAgICAgaWYgKGFkZHJlc3MgIT09IHRoaXMuYWRkcmVzcykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBZGRyZXNzICR7YWRkcmVzc30gbm90IGZvdW5kIGluIHdhbGxldGApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGhhc2hlZE1lc3NhZ2UgPSAoMCwgY3J5cHRvXzEuc2hhMjU2KShzaWduQnl0ZXMpO1xuICAgICAgICBjb25zdCBzaWduYXR1cmUgPSBhd2FpdCBjcnlwdG9fMS5TZWNwMjU2azEuY3JlYXRlU2lnbmF0dXJlKGhhc2hlZE1lc3NhZ2UsIHRoaXMucHJpdmtleSk7XG4gICAgICAgIGNvbnN0IHNpZ25hdHVyZUJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkoWy4uLnNpZ25hdHVyZS5yKDMyKSwgLi4uc2lnbmF0dXJlLnMoMzIpXSk7XG4gICAgICAgIGNvbnN0IHN0ZFNpZ25hdHVyZSA9ICgwLCBhbWlub18xLmVuY29kZVNlY3AyNTZrMVNpZ25hdHVyZSkodGhpcy5wdWJrZXksIHNpZ25hdHVyZUJ5dGVzKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNpZ25lZDogc2lnbkRvYyxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogc3RkU2lnbmF0dXJlLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuRGlyZWN0U2VjcDI1NmsxV2FsbGV0ID0gRGlyZWN0U2VjcDI1NmsxV2FsbGV0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGlyZWN0c2VjcDI1Nmsxd2FsbGV0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseCoins = exports.coins = exports.coin = exports.executeKdf = exports.makeSignDoc = exports.makeSignBytes = exports.makeAuthInfoBytes = exports.isOfflineDirectSigner = exports.Registry = exports.isTxBodyEncodeObject = exports.isTsProtoGeneratedType = exports.isPbjsGeneratedType = exports.encodePubkey = exports.decodePubkey = exports.decodeOptionalPubkey = exports.anyToSinglePubkey = exports.makeCosmoshubPath = exports.DirectSecp256k1Wallet = exports.extractKdfConfiguration = exports.DirectSecp256k1HdWallet = exports.decodeTxRaw = void 0;\n// This type happens to be shared between Amino and Direct sign modes\nvar decode_1 = __webpack_require__(/*! ./decode */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/decode.js\");\nObject.defineProperty(exports, \"decodeTxRaw\", ({ enumerable: true, get: function () { return decode_1.decodeTxRaw; } }));\nvar directsecp256k1hdwallet_1 = __webpack_require__(/*! ./directsecp256k1hdwallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1hdwallet.js\");\nObject.defineProperty(exports, \"DirectSecp256k1HdWallet\", ({ enumerable: true, get: function () { return directsecp256k1hdwallet_1.DirectSecp256k1HdWallet; } }));\nObject.defineProperty(exports, \"extractKdfConfiguration\", ({ enumerable: true, get: function () { return directsecp256k1hdwallet_1.extractKdfConfiguration; } }));\nvar directsecp256k1wallet_1 = __webpack_require__(/*! ./directsecp256k1wallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/directsecp256k1wallet.js\");\nObject.defineProperty(exports, \"DirectSecp256k1Wallet\", ({ enumerable: true, get: function () { return directsecp256k1wallet_1.DirectSecp256k1Wallet; } }));\nvar paths_1 = __webpack_require__(/*! ./paths */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/paths.js\");\nObject.defineProperty(exports, \"makeCosmoshubPath\", ({ enumerable: true, get: function () { return paths_1.makeCosmoshubPath; } }));\nvar pubkey_1 = __webpack_require__(/*! ./pubkey */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/pubkey.js\");\nObject.defineProperty(exports, \"anyToSinglePubkey\", ({ enumerable: true, get: function () { return pubkey_1.anyToSinglePubkey; } }));\nObject.defineProperty(exports, \"decodeOptionalPubkey\", ({ enumerable: true, get: function () { return pubkey_1.decodeOptionalPubkey; } }));\nObject.defineProperty(exports, \"decodePubkey\", ({ enumerable: true, get: function () { return pubkey_1.decodePubkey; } }));\nObject.defineProperty(exports, \"encodePubkey\", ({ enumerable: true, get: function () { return pubkey_1.encodePubkey; } }));\nvar registry_1 = __webpack_require__(/*! ./registry */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/registry.js\");\nObject.defineProperty(exports, \"isPbjsGeneratedType\", ({ enumerable: true, get: function () { return registry_1.isPbjsGeneratedType; } }));\nObject.defineProperty(exports, \"isTsProtoGeneratedType\", ({ enumerable: true, get: function () { return registry_1.isTsProtoGeneratedType; } }));\nObject.defineProperty(exports, \"isTxBodyEncodeObject\", ({ enumerable: true, get: function () { return registry_1.isTxBodyEncodeObject; } }));\nObject.defineProperty(exports, \"Registry\", ({ enumerable: true, get: function () { return registry_1.Registry; } }));\nvar signer_1 = __webpack_require__(/*! ./signer */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signer.js\");\nObject.defineProperty(exports, \"isOfflineDirectSigner\", ({ enumerable: true, get: function () { return signer_1.isOfflineDirectSigner; } }));\nvar signing_1 = __webpack_require__(/*! ./signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\");\nObject.defineProperty(exports, \"makeAuthInfoBytes\", ({ enumerable: true, get: function () { return signing_1.makeAuthInfoBytes; } }));\nObject.defineProperty(exports, \"makeSignBytes\", ({ enumerable: true, get: function () { return signing_1.makeSignBytes; } }));\nObject.defineProperty(exports, \"makeSignDoc\", ({ enumerable: true, get: function () { return signing_1.makeSignDoc; } }));\nvar wallet_1 = __webpack_require__(/*! ./wallet */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js\");\nObject.defineProperty(exports, \"executeKdf\", ({ enumerable: true, get: function () { return wallet_1.executeKdf; } }));\n// re-exports\nvar amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nObject.defineProperty(exports, \"coin\", ({ enumerable: true, get: function () { return amino_1.coin; } }));\nObject.defineProperty(exports, \"coins\", ({ enumerable: true, get: function () { return amino_1.coins; } }));\nObject.defineProperty(exports, \"parseCoins\", ({ enumerable: true, get: function () { return amino_1.parseCoins; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQixHQUFHLGFBQWEsR0FBRyxZQUFZLEdBQUcsa0JBQWtCLEdBQUcsbUJBQW1CLEdBQUcscUJBQXFCLEdBQUcseUJBQXlCLEdBQUcsNkJBQTZCLEdBQUcsZ0JBQWdCLEdBQUcsNEJBQTRCLEdBQUcsOEJBQThCLEdBQUcsMkJBQTJCLEdBQUcsb0JBQW9CLEdBQUcsb0JBQW9CLEdBQUcsNEJBQTRCLEdBQUcseUJBQXlCLEdBQUcseUJBQXlCLEdBQUcsNkJBQTZCLEdBQUcsK0JBQStCLEdBQUcsK0JBQStCLEdBQUcsbUJBQW1CO0FBQ2hpQjtBQUNBLGVBQWUsbUJBQU8sQ0FBQyw0RUFBVTtBQUNqQywrQ0FBOEMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDdEgsZ0NBQWdDLG1CQUFPLENBQUMsOEdBQTJCO0FBQ25FLDJEQUEwRCxFQUFFLHFDQUFxQyw2REFBNkQsRUFBQztBQUMvSiwyREFBMEQsRUFBRSxxQ0FBcUMsNkRBQTZELEVBQUM7QUFDL0osOEJBQThCLG1CQUFPLENBQUMsMEdBQXlCO0FBQy9ELHlEQUF3RCxFQUFFLHFDQUFxQyx5REFBeUQsRUFBQztBQUN6SixjQUFjLG1CQUFPLENBQUMsMEVBQVM7QUFDL0IscURBQW9ELEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQ2pJLGVBQWUsbUJBQU8sQ0FBQyw0RUFBVTtBQUNqQyxxREFBb0QsRUFBRSxxQ0FBcUMsc0NBQXNDLEVBQUM7QUFDbEksd0RBQXVELEVBQUUscUNBQXFDLHlDQUF5QyxFQUFDO0FBQ3hJLGdEQUErQyxFQUFFLHFDQUFxQyxpQ0FBaUMsRUFBQztBQUN4SCxnREFBK0MsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDeEgsaUJBQWlCLG1CQUFPLENBQUMsZ0ZBQVk7QUFDckMsdURBQXNELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3hJLDBEQUF5RCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUM5SSx3REFBdUQsRUFBRSxxQ0FBcUMsMkNBQTJDLEVBQUM7QUFDMUksNENBQTJDLEVBQUUscUNBQXFDLCtCQUErQixFQUFDO0FBQ2xILGVBQWUsbUJBQU8sQ0FBQyw0RUFBVTtBQUNqQyx5REFBd0QsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDMUksZ0JBQWdCLG1CQUFPLENBQUMsOEVBQVc7QUFDbkMscURBQW9ELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ25JLGlEQUFnRCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUMzSCwrQ0FBOEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDdkgsZUFBZSxtQkFBTyxDQUFDLDRFQUFVO0FBQ2pDLDhDQUE2QyxFQUFFLHFDQUFxQywrQkFBK0IsRUFBQztBQUNwSDtBQUNBLGNBQWMsbUJBQU8sQ0FBQyx3RUFBZTtBQUNyQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsd0JBQXdCLEVBQUM7QUFDdkcseUNBQXdDLEVBQUUscUNBQXFDLHlCQUF5QixFQUFDO0FBQ3pHLDhDQUE2QyxFQUFFLHFDQUFxQyw4QkFBOEIsRUFBQztBQUNuSCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL2luZGV4LmpzP2NhMDciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnBhcnNlQ29pbnMgPSBleHBvcnRzLmNvaW5zID0gZXhwb3J0cy5jb2luID0gZXhwb3J0cy5leGVjdXRlS2RmID0gZXhwb3J0cy5tYWtlU2lnbkRvYyA9IGV4cG9ydHMubWFrZVNpZ25CeXRlcyA9IGV4cG9ydHMubWFrZUF1dGhJbmZvQnl0ZXMgPSBleHBvcnRzLmlzT2ZmbGluZURpcmVjdFNpZ25lciA9IGV4cG9ydHMuUmVnaXN0cnkgPSBleHBvcnRzLmlzVHhCb2R5RW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pc1RzUHJvdG9HZW5lcmF0ZWRUeXBlID0gZXhwb3J0cy5pc1BianNHZW5lcmF0ZWRUeXBlID0gZXhwb3J0cy5lbmNvZGVQdWJrZXkgPSBleHBvcnRzLmRlY29kZVB1YmtleSA9IGV4cG9ydHMuZGVjb2RlT3B0aW9uYWxQdWJrZXkgPSBleHBvcnRzLmFueVRvU2luZ2xlUHVia2V5ID0gZXhwb3J0cy5tYWtlQ29zbW9zaHViUGF0aCA9IGV4cG9ydHMuRGlyZWN0U2VjcDI1NmsxV2FsbGV0ID0gZXhwb3J0cy5leHRyYWN0S2RmQ29uZmlndXJhdGlvbiA9IGV4cG9ydHMuRGlyZWN0U2VjcDI1NmsxSGRXYWxsZXQgPSBleHBvcnRzLmRlY29kZVR4UmF3ID0gdm9pZCAwO1xuLy8gVGhpcyB0eXBlIGhhcHBlbnMgdG8gYmUgc2hhcmVkIGJldHdlZW4gQW1pbm8gYW5kIERpcmVjdCBzaWduIG1vZGVzXG52YXIgZGVjb2RlXzEgPSByZXF1aXJlKFwiLi9kZWNvZGVcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWNvZGVUeFJhd1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVjb2RlXzEuZGVjb2RlVHhSYXc7IH0gfSk7XG52YXIgZGlyZWN0c2VjcDI1NmsxaGR3YWxsZXRfMSA9IHJlcXVpcmUoXCIuL2RpcmVjdHNlY3AyNTZrMWhkd2FsbGV0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRGlyZWN0U2VjcDI1NmsxSGRXYWxsZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRpcmVjdHNlY3AyNTZrMWhkd2FsbGV0XzEuRGlyZWN0U2VjcDI1NmsxSGRXYWxsZXQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleHRyYWN0S2RmQ29uZmlndXJhdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlyZWN0c2VjcDI1NmsxaGR3YWxsZXRfMS5leHRyYWN0S2RmQ29uZmlndXJhdGlvbjsgfSB9KTtcbnZhciBkaXJlY3RzZWNwMjU2azF3YWxsZXRfMSA9IHJlcXVpcmUoXCIuL2RpcmVjdHNlY3AyNTZrMXdhbGxldFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRpcmVjdFNlY3AyNTZrMVdhbGxldFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGlyZWN0c2VjcDI1Nmsxd2FsbGV0XzEuRGlyZWN0U2VjcDI1NmsxV2FsbGV0OyB9IH0pO1xudmFyIHBhdGhzXzEgPSByZXF1aXJlKFwiLi9wYXRoc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm1ha2VDb3Ntb3NodWJQYXRoXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwYXRoc18xLm1ha2VDb3Ntb3NodWJQYXRoOyB9IH0pO1xudmFyIHB1YmtleV8xID0gcmVxdWlyZShcIi4vcHVia2V5XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYW55VG9TaW5nbGVQdWJrZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmtleV8xLmFueVRvU2luZ2xlUHVia2V5OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVjb2RlT3B0aW9uYWxQdWJrZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmtleV8xLmRlY29kZU9wdGlvbmFsUHVia2V5OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVjb2RlUHVia2V5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwdWJrZXlfMS5kZWNvZGVQdWJrZXk7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJlbmNvZGVQdWJrZXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHB1YmtleV8xLmVuY29kZVB1YmtleTsgfSB9KTtcbnZhciByZWdpc3RyeV8xID0gcmVxdWlyZShcIi4vcmVnaXN0cnlcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1BianNHZW5lcmF0ZWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZWdpc3RyeV8xLmlzUGJqc0dlbmVyYXRlZFR5cGU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1RzUHJvdG9HZW5lcmF0ZWRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZWdpc3RyeV8xLmlzVHNQcm90b0dlbmVyYXRlZFR5cGU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1R4Qm9keUVuY29kZU9iamVjdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVnaXN0cnlfMS5pc1R4Qm9keUVuY29kZU9iamVjdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlZ2lzdHJ5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZWdpc3RyeV8xLlJlZ2lzdHJ5OyB9IH0pO1xudmFyIHNpZ25lcl8xID0gcmVxdWlyZShcIi4vc2lnbmVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNPZmZsaW5lRGlyZWN0U2lnbmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduZXJfMS5pc09mZmxpbmVEaXJlY3RTaWduZXI7IH0gfSk7XG52YXIgc2lnbmluZ18xID0gcmVxdWlyZShcIi4vc2lnbmluZ1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm1ha2VBdXRoSW5mb0J5dGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduaW5nXzEubWFrZUF1dGhJbmZvQnl0ZXM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtYWtlU2lnbkJ5dGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduaW5nXzEubWFrZVNpZ25CeXRlczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIm1ha2VTaWduRG9jXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduaW5nXzEubWFrZVNpZ25Eb2M7IH0gfSk7XG52YXIgd2FsbGV0XzEgPSByZXF1aXJlKFwiLi93YWxsZXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJleGVjdXRlS2RmXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB3YWxsZXRfMS5leGVjdXRlS2RmOyB9IH0pO1xuLy8gcmUtZXhwb3J0c1xudmFyIGFtaW5vXzEgPSByZXF1aXJlKFwiQGNvc21qcy9hbWlub1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvaW5cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFtaW5vXzEuY29pbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNvaW5zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhbWlub18xLmNvaW5zOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VDb2luc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gYW1pbm9fMS5wYXJzZUNvaW5zOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/paths.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/paths.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeCosmoshubPath = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\n/**\n * The Cosmos Hub derivation path in the form `m/44'/118'/0'/0/a`\n * with 0-based account index `a`.\n */\nfunction makeCosmoshubPath(a) {\n    return [\n        crypto_1.Slip10RawIndex.hardened(44),\n        crypto_1.Slip10RawIndex.hardened(118),\n        crypto_1.Slip10RawIndex.hardened(0),\n        crypto_1.Slip10RawIndex.normal(0),\n        crypto_1.Slip10RawIndex.normal(a),\n    ];\n}\nexports.makeCosmoshubPath = makeCosmoshubPath;\n//# sourceMappingURL=paths.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3BhdGhzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixpQkFBaUIsbUJBQU8sQ0FBQywwRUFBZ0I7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvcHJvdG8tc2lnbmluZy9idWlsZC9wYXRocy5qcz8zZWE0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlQ29zbW9zaHViUGF0aCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuLyoqXG4gKiBUaGUgQ29zbW9zIEh1YiBkZXJpdmF0aW9uIHBhdGggaW4gdGhlIGZvcm0gYG0vNDQnLzExOCcvMCcvMC9hYFxuICogd2l0aCAwLWJhc2VkIGFjY291bnQgaW5kZXggYGFgLlxuICovXG5mdW5jdGlvbiBtYWtlQ29zbW9zaHViUGF0aChhKSB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXguaGFyZGVuZWQoNDQpLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5oYXJkZW5lZCgxMTgpLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5oYXJkZW5lZCgwKSxcbiAgICAgICAgY3J5cHRvXzEuU2xpcDEwUmF3SW5kZXgubm9ybWFsKDApLFxuICAgICAgICBjcnlwdG9fMS5TbGlwMTBSYXdJbmRleC5ub3JtYWwoYSksXG4gICAgXTtcbn1cbmV4cG9ydHMubWFrZUNvc21vc2h1YlBhdGggPSBtYWtlQ29zbW9zaHViUGF0aDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhdGhzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/paths.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/pubkey.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/pubkey.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeOptionalPubkey = exports.decodePubkey = exports.anyToSinglePubkey = exports.encodePubkey = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst keys_1 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/ed25519/keys */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/ed25519/keys.js\");\nconst keys_2 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/multisig/keys */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/multisig/keys.js\");\nconst keys_3 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/secp256k1/keys */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/secp256k1/keys.js\");\nconst any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ \"(ssr)/./node_modules/cosmjs-types/google/protobuf/any.js\");\n/**\n * Takes a pubkey in the Amino JSON object style (type/value wrapper)\n * and convertes it into a protobuf `Any`.\n *\n * This is the reverse operation to `decodePubkey`.\n */\nfunction encodePubkey(pubkey) {\n    if ((0, amino_1.isSecp256k1Pubkey)(pubkey)) {\n        const pubkeyProto = keys_3.PubKey.fromPartial({\n            key: (0, encoding_1.fromBase64)(pubkey.value),\n        });\n        return any_1.Any.fromPartial({\n            typeUrl: \"/cosmos.crypto.secp256k1.PubKey\",\n            value: Uint8Array.from(keys_3.PubKey.encode(pubkeyProto).finish()),\n        });\n    }\n    else if ((0, amino_1.isEd25519Pubkey)(pubkey)) {\n        const pubkeyProto = keys_1.PubKey.fromPartial({\n            key: (0, encoding_1.fromBase64)(pubkey.value),\n        });\n        return any_1.Any.fromPartial({\n            typeUrl: \"/cosmos.crypto.ed25519.PubKey\",\n            value: Uint8Array.from(keys_1.PubKey.encode(pubkeyProto).finish()),\n        });\n    }\n    else if ((0, amino_1.isMultisigThresholdPubkey)(pubkey)) {\n        const pubkeyProto = keys_2.LegacyAminoPubKey.fromPartial({\n            threshold: math_1.Uint53.fromString(pubkey.value.threshold).toNumber(),\n            publicKeys: pubkey.value.pubkeys.map(encodePubkey),\n        });\n        return any_1.Any.fromPartial({\n            typeUrl: \"/cosmos.crypto.multisig.LegacyAminoPubKey\",\n            value: Uint8Array.from(keys_2.LegacyAminoPubKey.encode(pubkeyProto).finish()),\n        });\n    }\n    else {\n        throw new Error(`Pubkey type ${pubkey.type} not recognized`);\n    }\n}\nexports.encodePubkey = encodePubkey;\n/**\n * Decodes a single pubkey (i.e. not a multisig pubkey) from `Any` into\n * `SinglePubkey`.\n *\n * In most cases you probably want to use `decodePubkey`.\n */\nfunction anyToSinglePubkey(pubkey) {\n    switch (pubkey.typeUrl) {\n        case \"/cosmos.crypto.secp256k1.PubKey\": {\n            const { key } = keys_3.PubKey.decode(pubkey.value);\n            return (0, amino_1.encodeSecp256k1Pubkey)(key);\n        }\n        case \"/cosmos.crypto.ed25519.PubKey\": {\n            const { key } = keys_1.PubKey.decode(pubkey.value);\n            return (0, amino_1.encodeEd25519Pubkey)(key);\n        }\n        default:\n            throw new Error(`Pubkey type_url ${pubkey.typeUrl} not recognized as single public key type`);\n    }\n}\nexports.anyToSinglePubkey = anyToSinglePubkey;\n/**\n * Decodes a pubkey from a protobuf `Any` into `Pubkey`.\n * This supports single pubkeys such as Cosmos ed25519 and secp256k1 keys\n * as well as multisig threshold pubkeys.\n */\nfunction decodePubkey(pubkey) {\n    switch (pubkey.typeUrl) {\n        case \"/cosmos.crypto.secp256k1.PubKey\":\n        case \"/cosmos.crypto.ed25519.PubKey\": {\n            return anyToSinglePubkey(pubkey);\n        }\n        case \"/cosmos.crypto.multisig.LegacyAminoPubKey\": {\n            const { threshold, publicKeys } = keys_2.LegacyAminoPubKey.decode(pubkey.value);\n            const out = {\n                type: \"tendermint/PubKeyMultisigThreshold\",\n                value: {\n                    threshold: threshold.toString(),\n                    pubkeys: publicKeys.map(anyToSinglePubkey),\n                },\n            };\n            return out;\n        }\n        default:\n            throw new Error(`Pubkey type URL '${pubkey.typeUrl}' not recognized`);\n    }\n}\nexports.decodePubkey = decodePubkey;\n/**\n * Decodes an optional pubkey from a protobuf `Any` into `Pubkey | null`.\n * This supports single pubkeys such as Cosmos ed25519 and secp256k1 keys\n * as well as multisig threshold pubkeys.\n */\nfunction decodeOptionalPubkey(pubkey) {\n    if (!pubkey)\n        return null;\n    if (pubkey.typeUrl) {\n        if (pubkey.value.length) {\n            // both set\n            return decodePubkey(pubkey);\n        }\n        else {\n            throw new Error(`Pubkey is an Any with type URL '${pubkey.typeUrl}' but an empty value`);\n        }\n    }\n    else {\n        if (pubkey.value.length) {\n            throw new Error(`Pubkey is an Any with an empty type URL but a value set`);\n        }\n        else {\n            // both unset, assuming this empty instance means null\n            return null;\n        }\n    }\n}\nexports.decodeOptionalPubkey = decodeOptionalPubkey;\n//# sourceMappingURL=pubkey.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/pubkey.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/registry.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/registry.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Registry = exports.isTxBodyEncodeObject = exports.isPbjsGeneratedType = exports.isTsProtoGeneratedType = exports.isTelescopeGeneratedType = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/bank/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js\");\nconst coin_1 = __webpack_require__(/*! cosmjs-types/cosmos/base/v1beta1/coin */ \"(ssr)/./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js\");\nconst tx_2 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\nconst any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ \"(ssr)/./node_modules/cosmjs-types/google/protobuf/any.js\");\nfunction isTelescopeGeneratedType(type) {\n    const casted = type;\n    return typeof casted.fromPartial === \"function\" && typeof casted.typeUrl == \"string\";\n}\nexports.isTelescopeGeneratedType = isTelescopeGeneratedType;\nfunction isTsProtoGeneratedType(type) {\n    return typeof type.fromPartial === \"function\";\n}\nexports.isTsProtoGeneratedType = isTsProtoGeneratedType;\nfunction isPbjsGeneratedType(type) {\n    return !isTsProtoGeneratedType(type);\n}\nexports.isPbjsGeneratedType = isPbjsGeneratedType;\nconst defaultTypeUrls = {\n    cosmosCoin: \"/cosmos.base.v1beta1.Coin\",\n    cosmosMsgSend: \"/cosmos.bank.v1beta1.MsgSend\",\n    cosmosTxBody: \"/cosmos.tx.v1beta1.TxBody\",\n    googleAny: \"/google.protobuf.Any\",\n};\nfunction isTxBodyEncodeObject(encodeObject) {\n    return encodeObject.typeUrl === \"/cosmos.tx.v1beta1.TxBody\";\n}\nexports.isTxBodyEncodeObject = isTxBodyEncodeObject;\nclass Registry {\n    /**\n     * Creates a new Registry for mapping protobuf type identifiers/type URLs to\n     * actual implementations. Those implementations are typically generated with ts-proto\n     * but we also support protobuf.js as a type generator.\n     *\n     * If there is no parameter given, a `new Registry()` adds the types `Coin` and `MsgSend`\n     * for historic reasons. Those can be overriden by customTypes.\n     *\n     * There are currently two methods for adding new types:\n     * 1. Passing types to the constructor.\n     * 2. Using the `register()` method\n     */\n    constructor(customTypes) {\n        const { cosmosCoin, cosmosMsgSend } = defaultTypeUrls;\n        this.types = customTypes\n            ? new Map([...customTypes])\n            : new Map([\n                [cosmosCoin, coin_1.Coin],\n                [cosmosMsgSend, tx_1.MsgSend],\n            ]);\n    }\n    register(typeUrl, type) {\n        this.types.set(typeUrl, type);\n    }\n    /**\n     * Looks up a type that was previously added to the registry.\n     *\n     * The generator information (ts-proto or pbjs) gets lost along the way.\n     * If you need to work with the result type in TypeScript, you can use:\n     *\n     * ```\n     * import { assert } from \"@cosmjs/utils\";\n     *\n     * const Coin = registry.lookupType(\"/cosmos.base.v1beta1.Coin\");\n     * assert(Coin); // Ensures not unset\n     * assert(isTsProtoGeneratedType(Coin)); // Ensures this is the type we expect\n     *\n     * // Coin is typed TsProtoGeneratedType now.\n     * ```\n     */\n    lookupType(typeUrl) {\n        return this.types.get(typeUrl);\n    }\n    lookupTypeWithError(typeUrl) {\n        const type = this.lookupType(typeUrl);\n        if (!type) {\n            throw new Error(`Unregistered type url: ${typeUrl}`);\n        }\n        return type;\n    }\n    /**\n     * Takes a typeUrl/value pair and encodes the value to protobuf if\n     * the given type was previously registered.\n     *\n     * If the value has to be wrapped in an Any, this needs to be done\n     * manually after this call. Or use `encodeAsAny` instead.\n     */\n    encode(encodeObject) {\n        const { value, typeUrl } = encodeObject;\n        if (isTxBodyEncodeObject(encodeObject)) {\n            return this.encodeTxBody(value);\n        }\n        const type = this.lookupTypeWithError(typeUrl);\n        const instance = isTelescopeGeneratedType(type) || isTsProtoGeneratedType(type)\n            ? type.fromPartial(value)\n            : type.create(value);\n        return type.encode(instance).finish();\n    }\n    /**\n     * Takes a typeUrl/value pair and encodes the value to an Any if\n     * the given type was previously registered.\n     */\n    encodeAsAny(encodeObject) {\n        const binaryValue = this.encode(encodeObject);\n        return any_1.Any.fromPartial({\n            typeUrl: encodeObject.typeUrl,\n            value: binaryValue,\n        });\n    }\n    encodeTxBody(txBodyFields) {\n        const wrappedMessages = txBodyFields.messages.map((message) => this.encodeAsAny(message));\n        const txBody = tx_2.TxBody.fromPartial({\n            ...txBodyFields,\n            timeoutHeight: BigInt(txBodyFields.timeoutHeight?.toString() ?? \"0\"),\n            messages: wrappedMessages,\n        });\n        return tx_2.TxBody.encode(txBody).finish();\n    }\n    decode({ typeUrl, value }) {\n        if (typeUrl === defaultTypeUrls.cosmosTxBody) {\n            return this.decodeTxBody(value);\n        }\n        const type = this.lookupTypeWithError(typeUrl);\n        const decoded = type.decode(value);\n        Object.entries(decoded).forEach(([key, val]) => {\n            if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\" && Buffer.isBuffer(val)) {\n                decoded[key] = Uint8Array.from(val);\n            }\n        });\n        return decoded;\n    }\n    decodeTxBody(txBody) {\n        const decodedTxBody = tx_2.TxBody.decode(txBody);\n        return {\n            ...decodedTxBody,\n            messages: decodedTxBody.messages.map(({ typeUrl: typeUrl, value }) => {\n                if (!typeUrl) {\n                    throw new Error(\"Missing type_url in Any\");\n                }\n                if (!value) {\n                    throw new Error(\"Missing value in Any\");\n                }\n                return this.decode({ typeUrl, value });\n            }),\n        };\n    }\n}\nexports.Registry = Registry;\n//# sourceMappingURL=registry.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/registry.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/signer.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/signer.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isOfflineDirectSigner = void 0;\nfunction isOfflineDirectSigner(signer) {\n    return signer.signDirect !== undefined;\n}\nexports.isOfflineDirectSigner = isOfflineDirectSigner;\n//# sourceMappingURL=signer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3NpZ25lci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3Byb3RvLXNpZ25pbmcvYnVpbGQvc2lnbmVyLmpzPzdiNDUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzT2ZmbGluZURpcmVjdFNpZ25lciA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzT2ZmbGluZURpcmVjdFNpZ25lcihzaWduZXIpIHtcbiAgICByZXR1cm4gc2lnbmVyLnNpZ25EaXJlY3QgIT09IHVuZGVmaW5lZDtcbn1cbmV4cG9ydHMuaXNPZmZsaW5lRGlyZWN0U2lnbmVyID0gaXNPZmZsaW5lRGlyZWN0U2lnbmVyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2lnbmVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/signer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/signing.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeSignBytes = exports.makeSignDoc = exports.makeAuthInfoBytes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst signing_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/signing/v1beta1/signing */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js\");\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\n/**\n * Create signer infos from the provided signers.\n *\n * This implementation does not support different signing modes for the different signers.\n */\nfunction makeSignerInfos(signers, signMode) {\n    return signers.map(({ pubkey, sequence }) => ({\n        publicKey: pubkey,\n        modeInfo: {\n            single: { mode: signMode },\n        },\n        sequence: BigInt(sequence),\n    }));\n}\n/**\n * Creates and serializes an AuthInfo document.\n *\n * This implementation does not support different signing modes for the different signers.\n */\nfunction makeAuthInfoBytes(signers, feeAmount, gasLimit, feeGranter, feePayer, signMode = signing_1.SignMode.SIGN_MODE_DIRECT) {\n    // Required arguments 4 and 5 were added in CosmJS 0.29. Use runtime checks to help our non-TS users.\n    (0, utils_1.assert)(feeGranter === undefined || typeof feeGranter === \"string\", \"feeGranter must be undefined or string\");\n    (0, utils_1.assert)(feePayer === undefined || typeof feePayer === \"string\", \"feePayer must be undefined or string\");\n    const authInfo = tx_1.AuthInfo.fromPartial({\n        signerInfos: makeSignerInfos(signers, signMode),\n        fee: {\n            amount: [...feeAmount],\n            gasLimit: BigInt(gasLimit),\n            granter: feeGranter,\n            payer: feePayer,\n        },\n    });\n    return tx_1.AuthInfo.encode(authInfo).finish();\n}\nexports.makeAuthInfoBytes = makeAuthInfoBytes;\nfunction makeSignDoc(bodyBytes, authInfoBytes, chainId, accountNumber) {\n    return {\n        bodyBytes: bodyBytes,\n        authInfoBytes: authInfoBytes,\n        chainId: chainId,\n        accountNumber: BigInt(accountNumber),\n    };\n}\nexports.makeSignDoc = makeSignDoc;\nfunction makeSignBytes({ accountNumber, authInfoBytes, bodyBytes, chainId }) {\n    const signDoc = tx_1.SignDoc.fromPartial({\n        accountNumber: accountNumber,\n        authInfoBytes: authInfoBytes,\n        bodyBytes: bodyBytes,\n        chainId: chainId,\n    });\n    return tx_1.SignDoc.encode(signDoc).finish();\n}\nexports.makeSignBytes = makeSignBytes;\n//# sourceMappingURL=signing.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3NpZ25pbmcuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCLEdBQUcsbUJBQW1CLEdBQUcseUJBQXlCO0FBQ3ZFO0FBQ0EsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsa0JBQWtCLG1CQUFPLENBQUMsOEhBQWdEO0FBQzFFLGFBQWEsbUJBQU8sQ0FBQyxvR0FBbUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtCQUFrQjtBQUM1QztBQUNBO0FBQ0Esc0JBQXNCLGdCQUFnQjtBQUN0QyxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CLHlCQUF5QixrREFBa0Q7QUFDM0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3Byb3RvLXNpZ25pbmcvYnVpbGQvc2lnbmluZy5qcz8zNTA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5tYWtlU2lnbkJ5dGVzID0gZXhwb3J0cy5tYWtlU2lnbkRvYyA9IGV4cG9ydHMubWFrZUF1dGhJbmZvQnl0ZXMgPSB2b2lkIDA7XG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb24gKi9cbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGNvc21qcy91dGlsc1wiKTtcbmNvbnN0IHNpZ25pbmdfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3R4L3NpZ25pbmcvdjFiZXRhMS9zaWduaW5nXCIpO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3R4L3YxYmV0YTEvdHhcIik7XG4vKipcbiAqIENyZWF0ZSBzaWduZXIgaW5mb3MgZnJvbSB0aGUgcHJvdmlkZWQgc2lnbmVycy5cbiAqXG4gKiBUaGlzIGltcGxlbWVudGF0aW9uIGRvZXMgbm90IHN1cHBvcnQgZGlmZmVyZW50IHNpZ25pbmcgbW9kZXMgZm9yIHRoZSBkaWZmZXJlbnQgc2lnbmVycy5cbiAqL1xuZnVuY3Rpb24gbWFrZVNpZ25lckluZm9zKHNpZ25lcnMsIHNpZ25Nb2RlKSB7XG4gICAgcmV0dXJuIHNpZ25lcnMubWFwKCh7IHB1YmtleSwgc2VxdWVuY2UgfSkgPT4gKHtcbiAgICAgICAgcHVibGljS2V5OiBwdWJrZXksXG4gICAgICAgIG1vZGVJbmZvOiB7XG4gICAgICAgICAgICBzaW5nbGU6IHsgbW9kZTogc2lnbk1vZGUgfSxcbiAgICAgICAgfSxcbiAgICAgICAgc2VxdWVuY2U6IEJpZ0ludChzZXF1ZW5jZSksXG4gICAgfSkpO1xufVxuLyoqXG4gKiBDcmVhdGVzIGFuZCBzZXJpYWxpemVzIGFuIEF1dGhJbmZvIGRvY3VtZW50LlxuICpcbiAqIFRoaXMgaW1wbGVtZW50YXRpb24gZG9lcyBub3Qgc3VwcG9ydCBkaWZmZXJlbnQgc2lnbmluZyBtb2RlcyBmb3IgdGhlIGRpZmZlcmVudCBzaWduZXJzLlxuICovXG5mdW5jdGlvbiBtYWtlQXV0aEluZm9CeXRlcyhzaWduZXJzLCBmZWVBbW91bnQsIGdhc0xpbWl0LCBmZWVHcmFudGVyLCBmZWVQYXllciwgc2lnbk1vZGUgPSBzaWduaW5nXzEuU2lnbk1vZGUuU0lHTl9NT0RFX0RJUkVDVCkge1xuICAgIC8vIFJlcXVpcmVkIGFyZ3VtZW50cyA0IGFuZCA1IHdlcmUgYWRkZWQgaW4gQ29zbUpTIDAuMjkuIFVzZSBydW50aW1lIGNoZWNrcyB0byBoZWxwIG91ciBub24tVFMgdXNlcnMuXG4gICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShmZWVHcmFudGVyID09PSB1bmRlZmluZWQgfHwgdHlwZW9mIGZlZUdyYW50ZXIgPT09IFwic3RyaW5nXCIsIFwiZmVlR3JhbnRlciBtdXN0IGJlIHVuZGVmaW5lZCBvciBzdHJpbmdcIik7XG4gICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShmZWVQYXllciA9PT0gdW5kZWZpbmVkIHx8IHR5cGVvZiBmZWVQYXllciA9PT0gXCJzdHJpbmdcIiwgXCJmZWVQYXllciBtdXN0IGJlIHVuZGVmaW5lZCBvciBzdHJpbmdcIik7XG4gICAgY29uc3QgYXV0aEluZm8gPSB0eF8xLkF1dGhJbmZvLmZyb21QYXJ0aWFsKHtcbiAgICAgICAgc2lnbmVySW5mb3M6IG1ha2VTaWduZXJJbmZvcyhzaWduZXJzLCBzaWduTW9kZSksXG4gICAgICAgIGZlZToge1xuICAgICAgICAgICAgYW1vdW50OiBbLi4uZmVlQW1vdW50XSxcbiAgICAgICAgICAgIGdhc0xpbWl0OiBCaWdJbnQoZ2FzTGltaXQpLFxuICAgICAgICAgICAgZ3JhbnRlcjogZmVlR3JhbnRlcixcbiAgICAgICAgICAgIHBheWVyOiBmZWVQYXllcixcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gdHhfMS5BdXRoSW5mby5lbmNvZGUoYXV0aEluZm8pLmZpbmlzaCgpO1xufVxuZXhwb3J0cy5tYWtlQXV0aEluZm9CeXRlcyA9IG1ha2VBdXRoSW5mb0J5dGVzO1xuZnVuY3Rpb24gbWFrZVNpZ25Eb2MoYm9keUJ5dGVzLCBhdXRoSW5mb0J5dGVzLCBjaGFpbklkLCBhY2NvdW50TnVtYmVyKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYm9keUJ5dGVzOiBib2R5Qnl0ZXMsXG4gICAgICAgIGF1dGhJbmZvQnl0ZXM6IGF1dGhJbmZvQnl0ZXMsXG4gICAgICAgIGNoYWluSWQ6IGNoYWluSWQsXG4gICAgICAgIGFjY291bnROdW1iZXI6IEJpZ0ludChhY2NvdW50TnVtYmVyKSxcbiAgICB9O1xufVxuZXhwb3J0cy5tYWtlU2lnbkRvYyA9IG1ha2VTaWduRG9jO1xuZnVuY3Rpb24gbWFrZVNpZ25CeXRlcyh7IGFjY291bnROdW1iZXIsIGF1dGhJbmZvQnl0ZXMsIGJvZHlCeXRlcywgY2hhaW5JZCB9KSB7XG4gICAgY29uc3Qgc2lnbkRvYyA9IHR4XzEuU2lnbkRvYy5mcm9tUGFydGlhbCh7XG4gICAgICAgIGFjY291bnROdW1iZXI6IGFjY291bnROdW1iZXIsXG4gICAgICAgIGF1dGhJbmZvQnl0ZXM6IGF1dGhJbmZvQnl0ZXMsXG4gICAgICAgIGJvZHlCeXRlczogYm9keUJ5dGVzLFxuICAgICAgICBjaGFpbklkOiBjaGFpbklkLFxuICAgIH0pO1xuICAgIHJldHVybiB0eF8xLlNpZ25Eb2MuZW5jb2RlKHNpZ25Eb2MpLmZpbmlzaCgpO1xufVxuZXhwb3J0cy5tYWtlU2lnbkJ5dGVzID0gbWFrZVNpZ25CeXRlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNpZ25pbmcuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/signing.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/proto-signing/build/wallet.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decrypt = exports.encrypt = exports.supportedAlgorithms = exports.executeKdf = exports.cosmjsSalt = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A fixed salt is chosen to archive a deterministic password to key derivation.\n * This reduces the scope of a potential rainbow attack to all CosmJS users.\n * Must be 16 bytes due to implementation limitations.\n */\nexports.cosmjsSalt = (0, encoding_1.toAscii)(\"The CosmJS salt.\");\nasync function executeKdf(password, configuration) {\n    switch (configuration.algorithm) {\n        case \"argon2id\": {\n            const options = configuration.params;\n            if (!(0, crypto_1.isArgon2idOptions)(options))\n                throw new Error(\"Invalid format of argon2id params\");\n            return crypto_1.Argon2id.execute(password, exports.cosmjsSalt, options);\n        }\n        default:\n            throw new Error(\"Unsupported KDF algorithm\");\n    }\n}\nexports.executeKdf = executeKdf;\nexports.supportedAlgorithms = {\n    xchacha20poly1305Ietf: \"xchacha20poly1305-ietf\",\n};\nasync function encrypt(plaintext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = crypto_1.Random.getBytes(crypto_1.xchacha20NonceLength);\n            // Prepend fixed-length nonce to ciphertext as suggested in the example from https://github.com/jedisct1/libsodium.js#api\n            return new Uint8Array([\n                ...nonce,\n                ...(await crypto_1.Xchacha20poly1305Ietf.encrypt(plaintext, encryptionKey, nonce)),\n            ]);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.encrypt = encrypt;\nasync function decrypt(ciphertext, encryptionKey, config) {\n    switch (config.algorithm) {\n        case exports.supportedAlgorithms.xchacha20poly1305Ietf: {\n            const nonce = ciphertext.slice(0, crypto_1.xchacha20NonceLength);\n            return crypto_1.Xchacha20poly1305Ietf.decrypt(ciphertext.slice(crypto_1.xchacha20NonceLength), encryptionKey, nonce);\n        }\n        default:\n            throw new Error(`Unsupported encryption algorithm: '${config.algorithm}'`);\n    }\n}\nexports.decrypt = decrypt;\n//# sourceMappingURL=wallet.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3dhbGxldC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsZUFBZSxHQUFHLDJCQUEyQixHQUFHLGtCQUFrQixHQUFHLGtCQUFrQjtBQUN6RyxpQkFBaUIsbUJBQU8sQ0FBQywwRUFBZ0I7QUFDekMsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxpQkFBaUI7QUFDbkY7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxpQkFBaUI7QUFDbkY7QUFDQTtBQUNBLGVBQWU7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9wcm90by1zaWduaW5nL2J1aWxkL3dhbGxldC5qcz8xY2EzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNyeXB0ID0gZXhwb3J0cy5lbmNyeXB0ID0gZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zID0gZXhwb3J0cy5leGVjdXRlS2RmID0gZXhwb3J0cy5jb3NtanNTYWx0ID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG4vKipcbiAqIEEgZml4ZWQgc2FsdCBpcyBjaG9zZW4gdG8gYXJjaGl2ZSBhIGRldGVybWluaXN0aWMgcGFzc3dvcmQgdG8ga2V5IGRlcml2YXRpb24uXG4gKiBUaGlzIHJlZHVjZXMgdGhlIHNjb3BlIG9mIGEgcG90ZW50aWFsIHJhaW5ib3cgYXR0YWNrIHRvIGFsbCBDb3NtSlMgdXNlcnMuXG4gKiBNdXN0IGJlIDE2IGJ5dGVzIGR1ZSB0byBpbXBsZW1lbnRhdGlvbiBsaW1pdGF0aW9ucy5cbiAqL1xuZXhwb3J0cy5jb3NtanNTYWx0ID0gKDAsIGVuY29kaW5nXzEudG9Bc2NpaSkoXCJUaGUgQ29zbUpTIHNhbHQuXCIpO1xuYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZUtkZihwYXNzd29yZCwgY29uZmlndXJhdGlvbikge1xuICAgIHN3aXRjaCAoY29uZmlndXJhdGlvbi5hbGdvcml0aG0pIHtcbiAgICAgICAgY2FzZSBcImFyZ29uMmlkXCI6IHtcbiAgICAgICAgICAgIGNvbnN0IG9wdGlvbnMgPSBjb25maWd1cmF0aW9uLnBhcmFtcztcbiAgICAgICAgICAgIGlmICghKDAsIGNyeXB0b18xLmlzQXJnb24yaWRPcHRpb25zKShvcHRpb25zKSlcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIGZvcm1hdCBvZiBhcmdvbjJpZCBwYXJhbXNcIik7XG4gICAgICAgICAgICByZXR1cm4gY3J5cHRvXzEuQXJnb24yaWQuZXhlY3V0ZShwYXNzd29yZCwgZXhwb3J0cy5jb3NtanNTYWx0LCBvcHRpb25zKTtcbiAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgS0RGIGFsZ29yaXRobVwiKTtcbiAgICB9XG59XG5leHBvcnRzLmV4ZWN1dGVLZGYgPSBleGVjdXRlS2RmO1xuZXhwb3J0cy5zdXBwb3J0ZWRBbGdvcml0aG1zID0ge1xuICAgIHhjaGFjaGEyMHBvbHkxMzA1SWV0ZjogXCJ4Y2hhY2hhMjBwb2x5MTMwNS1pZXRmXCIsXG59O1xuYXN5bmMgZnVuY3Rpb24gZW5jcnlwdChwbGFpbnRleHQsIGVuY3J5cHRpb25LZXksIGNvbmZpZykge1xuICAgIHN3aXRjaCAoY29uZmlnLmFsZ29yaXRobSkge1xuICAgICAgICBjYXNlIGV4cG9ydHMuc3VwcG9ydGVkQWxnb3JpdGhtcy54Y2hhY2hhMjBwb2x5MTMwNUlldGY6IHtcbiAgICAgICAgICAgIGNvbnN0IG5vbmNlID0gY3J5cHRvXzEuUmFuZG9tLmdldEJ5dGVzKGNyeXB0b18xLnhjaGFjaGEyME5vbmNlTGVuZ3RoKTtcbiAgICAgICAgICAgIC8vIFByZXBlbmQgZml4ZWQtbGVuZ3RoIG5vbmNlIHRvIGNpcGhlcnRleHQgYXMgc3VnZ2VzdGVkIGluIHRoZSBleGFtcGxlIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL2plZGlzY3QxL2xpYnNvZGl1bS5qcyNhcGlcbiAgICAgICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShbXG4gICAgICAgICAgICAgICAgLi4ubm9uY2UsXG4gICAgICAgICAgICAgICAgLi4uKGF3YWl0IGNyeXB0b18xLlhjaGFjaGEyMHBvbHkxMzA1SWV0Zi5lbmNyeXB0KHBsYWludGV4dCwgZW5jcnlwdGlvbktleSwgbm9uY2UpKSxcbiAgICAgICAgICAgIF0pO1xuICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIGVuY3J5cHRpb24gYWxnb3JpdGhtOiAnJHtjb25maWcuYWxnb3JpdGhtfSdgKTtcbiAgICB9XG59XG5leHBvcnRzLmVuY3J5cHQgPSBlbmNyeXB0O1xuYXN5bmMgZnVuY3Rpb24gZGVjcnlwdChjaXBoZXJ0ZXh0LCBlbmNyeXB0aW9uS2V5LCBjb25maWcpIHtcbiAgICBzd2l0Y2ggKGNvbmZpZy5hbGdvcml0aG0pIHtcbiAgICAgICAgY2FzZSBleHBvcnRzLnN1cHBvcnRlZEFsZ29yaXRobXMueGNoYWNoYTIwcG9seTEzMDVJZXRmOiB7XG4gICAgICAgICAgICBjb25zdCBub25jZSA9IGNpcGhlcnRleHQuc2xpY2UoMCwgY3J5cHRvXzEueGNoYWNoYTIwTm9uY2VMZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuIGNyeXB0b18xLlhjaGFjaGEyMHBvbHkxMzA1SWV0Zi5kZWNyeXB0KGNpcGhlcnRleHQuc2xpY2UoY3J5cHRvXzEueGNoYWNoYTIwTm9uY2VMZW5ndGgpLCBlbmNyeXB0aW9uS2V5LCBub25jZSk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgZW5jcnlwdGlvbiBhbGdvcml0aG06ICcke2NvbmZpZy5hbGdvcml0aG19J2ApO1xuICAgIH1cbn1cbmV4cG9ydHMuZGVjcnlwdCA9IGRlY3J5cHQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD13YWxsZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/proto-signing/build/wallet.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/socket/build/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/socket/build/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamingSocket = exports.SocketWrapper = exports.ReconnectingSocket = exports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;\nvar queueingstreamingsocket_1 = __webpack_require__(/*! ./queueingstreamingsocket */ \"(ssr)/./node_modules/@cosmjs/socket/build/queueingstreamingsocket.js\");\nObject.defineProperty(exports, \"ConnectionStatus\", ({ enumerable: true, get: function () { return queueingstreamingsocket_1.ConnectionStatus; } }));\nObject.defineProperty(exports, \"QueueingStreamingSocket\", ({ enumerable: true, get: function () { return queueingstreamingsocket_1.QueueingStreamingSocket; } }));\nvar reconnectingsocket_1 = __webpack_require__(/*! ./reconnectingsocket */ \"(ssr)/./node_modules/@cosmjs/socket/build/reconnectingsocket.js\");\nObject.defineProperty(exports, \"ReconnectingSocket\", ({ enumerable: true, get: function () { return reconnectingsocket_1.ReconnectingSocket; } }));\nvar socketwrapper_1 = __webpack_require__(/*! ./socketwrapper */ \"(ssr)/./node_modules/@cosmjs/socket/build/socketwrapper.js\");\nObject.defineProperty(exports, \"SocketWrapper\", ({ enumerable: true, get: function () { return socketwrapper_1.SocketWrapper; } }));\nvar streamingsocket_1 = __webpack_require__(/*! ./streamingsocket */ \"(ssr)/./node_modules/@cosmjs/socket/build/streamingsocket.js\");\nObject.defineProperty(exports, \"StreamingSocket\", ({ enumerable: true, get: function () { return streamingsocket_1.StreamingSocket; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcscUJBQXFCLEdBQUcsMEJBQTBCLEdBQUcsK0JBQStCLEdBQUcsd0JBQXdCO0FBQ3pJLGdDQUFnQyxtQkFBTyxDQUFDLHVHQUEyQjtBQUNuRSxvREFBbUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDakosMkRBQTBELEVBQUUscUNBQXFDLDZEQUE2RCxFQUFDO0FBQy9KLDJCQUEyQixtQkFBTyxDQUFDLDZGQUFzQjtBQUN6RCxzREFBcUQsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDaEosc0JBQXNCLG1CQUFPLENBQUMsbUZBQWlCO0FBQy9DLGlEQUFnRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNqSSx3QkFBd0IsbUJBQU8sQ0FBQyx1RkFBbUI7QUFDbkQsbURBQWtELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3ZJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9pbmRleC5qcz81MWMwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5TdHJlYW1pbmdTb2NrZXQgPSBleHBvcnRzLlNvY2tldFdyYXBwZXIgPSBleHBvcnRzLlJlY29ubmVjdGluZ1NvY2tldCA9IGV4cG9ydHMuUXVldWVpbmdTdHJlYW1pbmdTb2NrZXQgPSBleHBvcnRzLkNvbm5lY3Rpb25TdGF0dXMgPSB2b2lkIDA7XG52YXIgcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRfMSA9IHJlcXVpcmUoXCIuL3F1ZXVlaW5nc3RyZWFtaW5nc29ja2V0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQ29ubmVjdGlvblN0YXR1c1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRfMS5Db25uZWN0aW9uU3RhdHVzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUXVldWVpbmdTdHJlYW1pbmdTb2NrZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHF1ZXVlaW5nc3RyZWFtaW5nc29ja2V0XzEuUXVldWVpbmdTdHJlYW1pbmdTb2NrZXQ7IH0gfSk7XG52YXIgcmVjb25uZWN0aW5nc29ja2V0XzEgPSByZXF1aXJlKFwiLi9yZWNvbm5lY3Rpbmdzb2NrZXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZWNvbm5lY3RpbmdTb2NrZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlY29ubmVjdGluZ3NvY2tldF8xLlJlY29ubmVjdGluZ1NvY2tldDsgfSB9KTtcbnZhciBzb2NrZXR3cmFwcGVyXzEgPSByZXF1aXJlKFwiLi9zb2NrZXR3cmFwcGVyXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU29ja2V0V3JhcHBlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc29ja2V0d3JhcHBlcl8xLlNvY2tldFdyYXBwZXI7IH0gfSk7XG52YXIgc3RyZWFtaW5nc29ja2V0XzEgPSByZXF1aXJlKFwiLi9zdHJlYW1pbmdzb2NrZXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJTdHJlYW1pbmdTb2NrZXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN0cmVhbWluZ3NvY2tldF8xLlN0cmVhbWluZ1NvY2tldDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/socket/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/socket/build/queueingstreamingsocket.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@cosmjs/socket/build/queueingstreamingsocket.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QueueingStreamingSocket = exports.ConnectionStatus = void 0;\nconst stream_1 = __webpack_require__(/*! @cosmjs/stream */ \"(ssr)/./node_modules/@cosmjs/stream/build/index.js\");\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\nconst streamingsocket_1 = __webpack_require__(/*! ./streamingsocket */ \"(ssr)/./node_modules/@cosmjs/socket/build/streamingsocket.js\");\nvar ConnectionStatus;\n(function (ConnectionStatus) {\n    ConnectionStatus[ConnectionStatus[\"Unconnected\"] = 0] = \"Unconnected\";\n    ConnectionStatus[ConnectionStatus[\"Connecting\"] = 1] = \"Connecting\";\n    ConnectionStatus[ConnectionStatus[\"Connected\"] = 2] = \"Connected\";\n    ConnectionStatus[ConnectionStatus[\"Disconnected\"] = 3] = \"Disconnected\";\n})(ConnectionStatus = exports.ConnectionStatus || (exports.ConnectionStatus = {}));\n/**\n * A wrapper around StreamingSocket that can queue requests.\n */\nclass QueueingStreamingSocket {\n    constructor(url, timeout = 10000, reconnectedHandler) {\n        this.queue = [];\n        this.isProcessingQueue = false;\n        this.url = url;\n        this.timeout = timeout;\n        this.reconnectedHandler = reconnectedHandler;\n        const eventProducer = {\n            start: (listener) => (this.eventProducerListener = listener),\n            stop: () => (this.eventProducerListener = undefined),\n        };\n        this.events = xstream_1.Stream.create(eventProducer);\n        this.connectionStatusProducer = new stream_1.DefaultValueProducer(ConnectionStatus.Unconnected);\n        this.connectionStatus = new stream_1.ValueAndUpdates(this.connectionStatusProducer);\n        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);\n        this.socket.events.subscribe({\n            next: (event) => {\n                if (!this.eventProducerListener)\n                    throw new Error(\"No event producer listener set\");\n                this.eventProducerListener.next(event);\n            },\n            error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected),\n        });\n    }\n    connect() {\n        this.connectionStatusProducer.update(ConnectionStatus.Connecting);\n        this.socket.connected.then(async () => {\n            this.connectionStatusProducer.update(ConnectionStatus.Connected);\n            return this.processQueue();\n        }, () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected));\n        this.socket.connect();\n    }\n    disconnect() {\n        this.connectionStatusProducer.update(ConnectionStatus.Disconnected);\n        this.socket.disconnect();\n    }\n    reconnect() {\n        this.socket = new streamingsocket_1.StreamingSocket(this.url, this.timeout);\n        this.socket.events.subscribe({\n            next: (event) => {\n                if (!this.eventProducerListener)\n                    throw new Error(\"No event producer listener set\");\n                this.eventProducerListener.next(event);\n            },\n            error: () => this.connectionStatusProducer.update(ConnectionStatus.Disconnected),\n        });\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.socket.connected.then(() => {\n            if (this.reconnectedHandler) {\n                this.reconnectedHandler();\n            }\n        });\n        this.connect();\n    }\n    getQueueLength() {\n        return this.queue.length;\n    }\n    queueRequest(request) {\n        this.queue.push(request);\n        // We don’t need to wait for the queue to be processed.\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        this.processQueue();\n    }\n    async processQueue() {\n        if (this.isProcessingQueue || this.connectionStatus.value !== ConnectionStatus.Connected) {\n            return;\n        }\n        this.isProcessingQueue = true;\n        let request;\n        while ((request = this.queue.shift())) {\n            try {\n                await this.socket.send(request);\n                this.isProcessingQueue = false;\n            }\n            catch (error) {\n                // Probably the connection is down; will try again automatically when reconnected.\n                this.queue.unshift(request);\n                this.isProcessingQueue = false;\n                return;\n            }\n        }\n    }\n}\nexports.QueueingStreamingSocket = QueueingStreamingSocket;\n//# sourceMappingURL=queueingstreamingsocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvcXVldWVpbmdzdHJlYW1pbmdzb2NrZXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLEdBQUcsd0JBQXdCO0FBQzFELGlCQUFpQixtQkFBTyxDQUFDLDBFQUFnQjtBQUN6QyxrQkFBa0IsbUJBQU8sQ0FBQyxzREFBUztBQUNuQywwQkFBMEIsbUJBQU8sQ0FBQyx1RkFBbUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrREFBa0Qsd0JBQXdCLEtBQUs7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9xdWV1ZWluZ3N0cmVhbWluZ3NvY2tldC5qcz84MWZmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5RdWV1ZWluZ1N0cmVhbWluZ1NvY2tldCA9IGV4cG9ydHMuQ29ubmVjdGlvblN0YXR1cyA9IHZvaWQgMDtcbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcIkBjb3NtanMvc3RyZWFtXCIpO1xuY29uc3QgeHN0cmVhbV8xID0gcmVxdWlyZShcInhzdHJlYW1cIik7XG5jb25zdCBzdHJlYW1pbmdzb2NrZXRfMSA9IHJlcXVpcmUoXCIuL3N0cmVhbWluZ3NvY2tldFwiKTtcbnZhciBDb25uZWN0aW9uU3RhdHVzO1xuKGZ1bmN0aW9uIChDb25uZWN0aW9uU3RhdHVzKSB7XG4gICAgQ29ubmVjdGlvblN0YXR1c1tDb25uZWN0aW9uU3RhdHVzW1wiVW5jb25uZWN0ZWRcIl0gPSAwXSA9IFwiVW5jb25uZWN0ZWRcIjtcbiAgICBDb25uZWN0aW9uU3RhdHVzW0Nvbm5lY3Rpb25TdGF0dXNbXCJDb25uZWN0aW5nXCJdID0gMV0gPSBcIkNvbm5lY3RpbmdcIjtcbiAgICBDb25uZWN0aW9uU3RhdHVzW0Nvbm5lY3Rpb25TdGF0dXNbXCJDb25uZWN0ZWRcIl0gPSAyXSA9IFwiQ29ubmVjdGVkXCI7XG4gICAgQ29ubmVjdGlvblN0YXR1c1tDb25uZWN0aW9uU3RhdHVzW1wiRGlzY29ubmVjdGVkXCJdID0gM10gPSBcIkRpc2Nvbm5lY3RlZFwiO1xufSkoQ29ubmVjdGlvblN0YXR1cyA9IGV4cG9ydHMuQ29ubmVjdGlvblN0YXR1cyB8fCAoZXhwb3J0cy5Db25uZWN0aW9uU3RhdHVzID0ge30pKTtcbi8qKlxuICogQSB3cmFwcGVyIGFyb3VuZCBTdHJlYW1pbmdTb2NrZXQgdGhhdCBjYW4gcXVldWUgcmVxdWVzdHMuXG4gKi9cbmNsYXNzIFF1ZXVlaW5nU3RyZWFtaW5nU29ja2V0IHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIHRpbWVvdXQgPSAxMDAwMCwgcmVjb25uZWN0ZWRIYW5kbGVyKSB7XG4gICAgICAgIHRoaXMucXVldWUgPSBbXTtcbiAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmdRdWV1ZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnVybCA9IHVybDtcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gdGltZW91dDtcbiAgICAgICAgdGhpcy5yZWNvbm5lY3RlZEhhbmRsZXIgPSByZWNvbm5lY3RlZEhhbmRsZXI7XG4gICAgICAgIGNvbnN0IGV2ZW50UHJvZHVjZXIgPSB7XG4gICAgICAgICAgICBzdGFydDogKGxpc3RlbmVyKSA9PiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIgPSBsaXN0ZW5lciksXG4gICAgICAgICAgICBzdG9wOiAoKSA9PiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIgPSB1bmRlZmluZWQpLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmV2ZW50cyA9IHhzdHJlYW1fMS5TdHJlYW0uY3JlYXRlKGV2ZW50UHJvZHVjZXIpO1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlciA9IG5ldyBzdHJlYW1fMS5EZWZhdWx0VmFsdWVQcm9kdWNlcihDb25uZWN0aW9uU3RhdHVzLlVuY29ubmVjdGVkKTtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gbmV3IHN0cmVhbV8xLlZhbHVlQW5kVXBkYXRlcyh0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlcik7XG4gICAgICAgIHRoaXMuc29ja2V0ID0gbmV3IHN0cmVhbWluZ3NvY2tldF8xLlN0cmVhbWluZ1NvY2tldCh0aGlzLnVybCwgdGhpcy50aW1lb3V0KTtcbiAgICAgICAgdGhpcy5zb2NrZXQuZXZlbnRzLnN1YnNjcmliZSh7XG4gICAgICAgICAgICBuZXh0OiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyKVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBldmVudCBwcm9kdWNlciBsaXN0ZW5lciBzZXRcIik7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIubmV4dChldmVudCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6ICgpID0+IHRoaXMuY29ubmVjdGlvblN0YXR1c1Byb2R1Y2VyLnVwZGF0ZShDb25uZWN0aW9uU3RhdHVzLkRpc2Nvbm5lY3RlZCksXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25uZWN0KCkge1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlci51cGRhdGUoQ29ubmVjdGlvblN0YXR1cy5Db25uZWN0aW5nKTtcbiAgICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdGVkLnRoZW4oYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzUHJvZHVjZXIudXBkYXRlKENvbm5lY3Rpb25TdGF0dXMuQ29ubmVjdGVkKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3NRdWV1ZSgpO1xuICAgICAgICB9LCAoKSA9PiB0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlci51cGRhdGUoQ29ubmVjdGlvblN0YXR1cy5EaXNjb25uZWN0ZWQpKTtcbiAgICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdCgpO1xuICAgIH1cbiAgICBkaXNjb25uZWN0KCkge1xuICAgICAgICB0aGlzLmNvbm5lY3Rpb25TdGF0dXNQcm9kdWNlci51cGRhdGUoQ29ubmVjdGlvblN0YXR1cy5EaXNjb25uZWN0ZWQpO1xuICAgICAgICB0aGlzLnNvY2tldC5kaXNjb25uZWN0KCk7XG4gICAgfVxuICAgIHJlY29ubmVjdCgpIHtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgc3RyZWFtaW5nc29ja2V0XzEuU3RyZWFtaW5nU29ja2V0KHRoaXMudXJsLCB0aGlzLnRpbWVvdXQpO1xuICAgICAgICB0aGlzLnNvY2tldC5ldmVudHMuc3Vic2NyaWJlKHtcbiAgICAgICAgICAgIG5leHQ6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIpXG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIGV2ZW50IHByb2R1Y2VyIGxpc3RlbmVyIHNldFwiKTtcbiAgICAgICAgICAgICAgICB0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lci5uZXh0KGV2ZW50KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogKCkgPT4gdGhpcy5jb25uZWN0aW9uU3RhdHVzUHJvZHVjZXIudXBkYXRlKENvbm5lY3Rpb25TdGF0dXMuRGlzY29ubmVjdGVkKSxcbiAgICAgICAgfSk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZmxvYXRpbmctcHJvbWlzZXNcbiAgICAgICAgdGhpcy5zb2NrZXQuY29ubmVjdGVkLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMucmVjb25uZWN0ZWRIYW5kbGVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5yZWNvbm5lY3RlZEhhbmRsZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuY29ubmVjdCgpO1xuICAgIH1cbiAgICBnZXRRdWV1ZUxlbmd0aCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMucXVldWUubGVuZ3RoO1xuICAgIH1cbiAgICBxdWV1ZVJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICB0aGlzLnF1ZXVlLnB1c2gocmVxdWVzdCk7XG4gICAgICAgIC8vIFdlIGRvbuKAmXQgbmVlZCB0byB3YWl0IGZvciB0aGUgcXVldWUgdG8gYmUgcHJvY2Vzc2VkLlxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWZsb2F0aW5nLXByb21pc2VzXG4gICAgICAgIHRoaXMucHJvY2Vzc1F1ZXVlKCk7XG4gICAgfVxuICAgIGFzeW5jIHByb2Nlc3NRdWV1ZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNQcm9jZXNzaW5nUXVldWUgfHwgdGhpcy5jb25uZWN0aW9uU3RhdHVzLnZhbHVlICE9PSBDb25uZWN0aW9uU3RhdHVzLkNvbm5lY3RlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nUXVldWUgPSB0cnVlO1xuICAgICAgICBsZXQgcmVxdWVzdDtcbiAgICAgICAgd2hpbGUgKChyZXF1ZXN0ID0gdGhpcy5xdWV1ZS5zaGlmdCgpKSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLnNvY2tldC5zZW5kKHJlcXVlc3QpO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNQcm9jZXNzaW5nUXVldWUgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIC8vIFByb2JhYmx5IHRoZSBjb25uZWN0aW9uIGlzIGRvd247IHdpbGwgdHJ5IGFnYWluIGF1dG9tYXRpY2FsbHkgd2hlbiByZWNvbm5lY3RlZC5cbiAgICAgICAgICAgICAgICB0aGlzLnF1ZXVlLnVuc2hpZnQocmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1Byb2Nlc3NpbmdRdWV1ZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUXVldWVpbmdTdHJlYW1pbmdTb2NrZXQgPSBRdWV1ZWluZ1N0cmVhbWluZ1NvY2tldDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXVlaW5nc3RyZWFtaW5nc29ja2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/socket/build/queueingstreamingsocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/socket/build/reconnectingsocket.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@cosmjs/socket/build/reconnectingsocket.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ReconnectingSocket = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\nconst queueingstreamingsocket_1 = __webpack_require__(/*! ./queueingstreamingsocket */ \"(ssr)/./node_modules/@cosmjs/socket/build/queueingstreamingsocket.js\");\n/**\n * A wrapper around QueueingStreamingSocket that reconnects automatically.\n */\nclass ReconnectingSocket {\n    /** Starts with a 0.1 second timeout, then doubles every attempt with a maximum timeout of 5 seconds. */\n    static calculateTimeout(index) {\n        return Math.min(2 ** index * 100, 5000);\n    }\n    constructor(url, timeout = 10000, reconnectedHandler) {\n        this.unconnected = true;\n        this.disconnected = false;\n        this.timeoutIndex = 0;\n        this.reconnectTimeout = null;\n        const eventProducer = {\n            start: (listener) => (this.eventProducerListener = listener),\n            stop: () => (this.eventProducerListener = undefined),\n        };\n        this.events = xstream_1.Stream.create(eventProducer);\n        this.socket = new queueingstreamingsocket_1.QueueingStreamingSocket(url, timeout, reconnectedHandler);\n        this.socket.events.subscribe({\n            next: (event) => {\n                if (this.eventProducerListener) {\n                    this.eventProducerListener.next(event);\n                }\n            },\n            error: (error) => {\n                if (this.eventProducerListener) {\n                    this.eventProducerListener.error(error);\n                }\n            },\n        });\n        this.connectionStatus = this.socket.connectionStatus;\n        this.connectionStatus.updates.subscribe({\n            next: (status) => {\n                if (status === queueingstreamingsocket_1.ConnectionStatus.Connected) {\n                    this.timeoutIndex = 0;\n                }\n                if (status === queueingstreamingsocket_1.ConnectionStatus.Disconnected) {\n                    if (this.reconnectTimeout) {\n                        clearTimeout(this.reconnectTimeout);\n                        this.reconnectTimeout = null;\n                    }\n                    this.reconnectTimeout = setTimeout(() => this.socket.reconnect(), ReconnectingSocket.calculateTimeout(this.timeoutIndex++));\n                }\n            },\n        });\n    }\n    connect() {\n        if (!this.unconnected) {\n            throw new Error(\"Cannot connect: socket has already connected\");\n        }\n        this.socket.connect();\n        this.unconnected = false;\n    }\n    disconnect() {\n        if (this.unconnected) {\n            throw new Error(\"Cannot disconnect: socket has not yet connected\");\n        }\n        this.socket.disconnect();\n        if (this.eventProducerListener) {\n            this.eventProducerListener.complete();\n        }\n        this.disconnected = true;\n    }\n    queueRequest(request) {\n        if (this.disconnected) {\n            throw new Error(\"Cannot queue request: socket has disconnected\");\n        }\n        this.socket.queueRequest(request);\n    }\n}\nexports.ReconnectingSocket = ReconnectingSocket;\n//# sourceMappingURL=reconnectingsocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvcmVjb25uZWN0aW5nc29ja2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDBCQUEwQjtBQUMxQixrQkFBa0IsbUJBQU8sQ0FBQyxzREFBUztBQUNuQyxrQ0FBa0MsbUJBQU8sQ0FBQyx1R0FBMkI7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc29ja2V0L2J1aWxkL3JlY29ubmVjdGluZ3NvY2tldC5qcz80ZmI3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZWNvbm5lY3RpbmdTb2NrZXQgPSB2b2lkIDA7XG5jb25zdCB4c3RyZWFtXzEgPSByZXF1aXJlKFwieHN0cmVhbVwiKTtcbmNvbnN0IHF1ZXVlaW5nc3RyZWFtaW5nc29ja2V0XzEgPSByZXF1aXJlKFwiLi9xdWV1ZWluZ3N0cmVhbWluZ3NvY2tldFwiKTtcbi8qKlxuICogQSB3cmFwcGVyIGFyb3VuZCBRdWV1ZWluZ1N0cmVhbWluZ1NvY2tldCB0aGF0IHJlY29ubmVjdHMgYXV0b21hdGljYWxseS5cbiAqL1xuY2xhc3MgUmVjb25uZWN0aW5nU29ja2V0IHtcbiAgICAvKiogU3RhcnRzIHdpdGggYSAwLjEgc2Vjb25kIHRpbWVvdXQsIHRoZW4gZG91YmxlcyBldmVyeSBhdHRlbXB0IHdpdGggYSBtYXhpbXVtIHRpbWVvdXQgb2YgNSBzZWNvbmRzLiAqL1xuICAgIHN0YXRpYyBjYWxjdWxhdGVUaW1lb3V0KGluZGV4KSB7XG4gICAgICAgIHJldHVybiBNYXRoLm1pbigyICoqIGluZGV4ICogMTAwLCA1MDAwKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IodXJsLCB0aW1lb3V0ID0gMTAwMDAsIHJlY29ubmVjdGVkSGFuZGxlcikge1xuICAgICAgICB0aGlzLnVuY29ubmVjdGVkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kaXNjb25uZWN0ZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy50aW1lb3V0SW5kZXggPSAwO1xuICAgICAgICB0aGlzLnJlY29ubmVjdFRpbWVvdXQgPSBudWxsO1xuICAgICAgICBjb25zdCBldmVudFByb2R1Y2VyID0ge1xuICAgICAgICAgICAgc3RhcnQ6IChsaXN0ZW5lcikgPT4gKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyID0gbGlzdGVuZXIpLFxuICAgICAgICAgICAgc3RvcDogKCkgPT4gKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyID0gdW5kZWZpbmVkKSxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5ldmVudHMgPSB4c3RyZWFtXzEuU3RyZWFtLmNyZWF0ZShldmVudFByb2R1Y2VyKTtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRfMS5RdWV1ZWluZ1N0cmVhbWluZ1NvY2tldCh1cmwsIHRpbWVvdXQsIHJlY29ubmVjdGVkSGFuZGxlcik7XG4gICAgICAgIHRoaXMuc29ja2V0LmV2ZW50cy5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgbmV4dDogKGV2ZW50KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLm5leHQoZXZlbnQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBlcnJvcjogKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzID0gdGhpcy5zb2NrZXQuY29ubmVjdGlvblN0YXR1cztcbiAgICAgICAgdGhpcy5jb25uZWN0aW9uU3RhdHVzLnVwZGF0ZXMuc3Vic2NyaWJlKHtcbiAgICAgICAgICAgIG5leHQ6IChzdGF0dXMpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSBxdWV1ZWluZ3N0cmVhbWluZ3NvY2tldF8xLkNvbm5lY3Rpb25TdGF0dXMuQ29ubmVjdGVkKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMudGltZW91dEluZGV4ID0gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PT0gcXVldWVpbmdzdHJlYW1pbmdzb2NrZXRfMS5Db25uZWN0aW9uU3RhdHVzLkRpc2Nvbm5lY3RlZCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5yZWNvbm5lY3RUaW1lb3V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5yZWNvbm5lY3RUaW1lb3V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucmVjb25uZWN0VGltZW91dCA9IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWNvbm5lY3RUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB0aGlzLnNvY2tldC5yZWNvbm5lY3QoKSwgUmVjb25uZWN0aW5nU29ja2V0LmNhbGN1bGF0ZVRpbWVvdXQodGhpcy50aW1lb3V0SW5kZXgrKykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25uZWN0KCkge1xuICAgICAgICBpZiAoIXRoaXMudW5jb25uZWN0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBjb25uZWN0OiBzb2NrZXQgaGFzIGFscmVhZHkgY29ubmVjdGVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuc29ja2V0LmNvbm5lY3QoKTtcbiAgICAgICAgdGhpcy51bmNvbm5lY3RlZCA9IGZhbHNlO1xuICAgIH1cbiAgICBkaXNjb25uZWN0KCkge1xuICAgICAgICBpZiAodGhpcy51bmNvbm5lY3RlZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGRpc2Nvbm5lY3Q6IHNvY2tldCBoYXMgbm90IHlldCBjb25uZWN0ZWRcIik7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5zb2NrZXQuZGlzY29ubmVjdCgpO1xuICAgICAgICBpZiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLmNvbXBsZXRlKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kaXNjb25uZWN0ZWQgPSB0cnVlO1xuICAgIH1cbiAgICBxdWV1ZVJlcXVlc3QocmVxdWVzdCkge1xuICAgICAgICBpZiAodGhpcy5kaXNjb25uZWN0ZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBxdWV1ZSByZXF1ZXN0OiBzb2NrZXQgaGFzIGRpc2Nvbm5lY3RlZFwiKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNvY2tldC5xdWV1ZVJlcXVlc3QocmVxdWVzdCk7XG4gICAgfVxufVxuZXhwb3J0cy5SZWNvbm5lY3RpbmdTb2NrZXQgPSBSZWNvbm5lY3RpbmdTb2NrZXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZWNvbm5lY3Rpbmdzb2NrZXQuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/socket/build/reconnectingsocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/socket/build/socketwrapper.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/socket/build/socketwrapper.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SocketWrapper = void 0;\nconst isomorphic_ws_1 = __importDefault(__webpack_require__(/*! isomorphic-ws */ \"(ssr)/./node_modules/isomorphic-ws/node.js\"));\nfunction environmentIsNodeJs() {\n    return (typeof process !== \"undefined\" &&\n        typeof process.versions !== \"undefined\" &&\n        typeof process.versions.node !== \"undefined\");\n}\n/**\n * A thin wrapper around isomorphic-ws' WebSocket class that adds\n * - constant message/error/open/close handlers\n * - explict connection via a connect() method\n * - type support for events\n * - handling of corner cases in the open and close behaviour\n */\nclass SocketWrapper {\n    constructor(url, messageHandler, errorHandler, openHandler, closeHandler, timeout = 10000) {\n        this.closed = false;\n        this.connected = new Promise((resolve, reject) => {\n            this.connectedResolver = resolve;\n            this.connectedRejecter = reject;\n        });\n        this.url = url;\n        this.messageHandler = messageHandler;\n        this.errorHandler = errorHandler;\n        this.openHandler = openHandler;\n        this.closeHandler = closeHandler;\n        this.timeout = timeout;\n    }\n    /**\n     * returns a promise that resolves when connection is open\n     */\n    connect() {\n        const socket = new isomorphic_ws_1.default(this.url);\n        socket.onerror = (error) => {\n            this.clearTimeout();\n            if (this.errorHandler) {\n                this.errorHandler(error);\n            }\n        };\n        socket.onmessage = (messageEvent) => {\n            this.messageHandler({\n                type: messageEvent.type,\n                data: messageEvent.data,\n            });\n        };\n        socket.onopen = (_) => {\n            this.clearTimeout();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.connectedResolver();\n            if (this.openHandler) {\n                this.openHandler();\n            }\n        };\n        socket.onclose = (closeEvent) => {\n            this.closed = true;\n            if (this.closeHandler) {\n                this.closeHandler(closeEvent);\n            }\n        };\n        const started = Date.now();\n        this.timeoutId = setTimeout(() => {\n            socket.onmessage = () => 0;\n            socket.onerror = () => 0;\n            socket.onopen = () => 0;\n            socket.onclose = () => 0;\n            socket.close();\n            this.socket = undefined;\n            const elapsed = Math.floor(Date.now() - started);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.connectedRejecter(`Connection attempt timed out after ${elapsed} ms`);\n        }, this.timeout);\n        this.socket = socket;\n    }\n    /**\n     * Closes an established connection and aborts other connection states\n     */\n    disconnect() {\n        if (!this.socket) {\n            throw new Error(\"Socket undefined. This must be called after connecting.\");\n        }\n        this.clearTimeout();\n        switch (this.socket.readyState) {\n            case isomorphic_ws_1.default.OPEN:\n                this.socket.close(1000 /* Normal Closure */);\n                break;\n            case isomorphic_ws_1.default.CLOSED:\n                // nothing to be done\n                break;\n            case isomorphic_ws_1.default.CONNECTING:\n                // imitate missing abort API\n                this.socket.onopen = () => 0;\n                this.socket.onclose = () => 0;\n                this.socket.onerror = () => 0;\n                this.socket.onmessage = () => 0;\n                this.socket = undefined;\n                if (this.closeHandler) {\n                    this.closeHandler({ wasClean: false, code: 4001 });\n                }\n                break;\n            case isomorphic_ws_1.default.CLOSING:\n                // already closing. Let it proceed\n                break;\n            default:\n                throw new Error(`Unknown readyState: ${this.socket.readyState}`);\n        }\n    }\n    async send(data) {\n        return new Promise((resolve, reject) => {\n            if (!this.socket) {\n                throw new Error(\"Socket undefined. This must be called after connecting.\");\n            }\n            if (this.closed) {\n                throw new Error(\"Socket was closed, so no data can be sent anymore.\");\n            }\n            // this exception should be thrown by send() automatically according to\n            // https://developer.mozilla.org/de/docs/Web/API/WebSocket#send() but it does not work in browsers\n            if (this.socket.readyState !== isomorphic_ws_1.default.OPEN) {\n                throw new Error(\"Websocket is not open\");\n            }\n            if (environmentIsNodeJs()) {\n                this.socket.send(data, (err) => (err ? reject(err) : resolve()));\n            }\n            else {\n                // Browser websocket send method does not accept a callback\n                this.socket.send(data);\n                resolve();\n            }\n        });\n    }\n    /**\n     * Clears the timeout function, such that no timeout error will be raised anymore. This should be\n     * called when the connection is established, a connection error occurred or the socket is disconnected.\n     *\n     * This method must not be called before `connect()`.\n     * This method is idempotent.\n     */\n    clearTimeout() {\n        if (!this.timeoutId) {\n            throw new Error(\"Timeout ID not set. This should not happen and usually means connect() was not called.\");\n        }\n        // Note: do not unset this.timeoutId to allow multiple calls to this function\n        clearTimeout(this.timeoutId);\n    }\n}\nexports.SocketWrapper = SocketWrapper;\n//# sourceMappingURL=socketwrapper.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/socket/build/socketwrapper.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/socket/build/streamingsocket.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/socket/build/streamingsocket.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StreamingSocket = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\nconst socketwrapper_1 = __webpack_require__(/*! ./socketwrapper */ \"(ssr)/./node_modules/@cosmjs/socket/build/socketwrapper.js\");\n/**\n * A WebSocket wrapper that exposes all events as a stream.\n *\n * This underlying socket will not be closed when the stream has no listeners\n */\nclass StreamingSocket {\n    constructor(url, timeout = 10000) {\n        this.socket = new socketwrapper_1.SocketWrapper(url, (event) => {\n            if (this.eventProducerListener) {\n                this.eventProducerListener.next(event);\n            }\n        }, (errorEvent) => {\n            if (this.eventProducerListener) {\n                this.eventProducerListener.error(errorEvent);\n            }\n        }, () => {\n            // socket opened\n        }, (closeEvent) => {\n            if (this.eventProducerListener) {\n                if (closeEvent.wasClean) {\n                    this.eventProducerListener.complete();\n                }\n                else {\n                    this.eventProducerListener.error(\"Socket was closed unclean\");\n                }\n            }\n        }, timeout);\n        this.connected = this.socket.connected;\n        const eventProducer = {\n            start: (listener) => (this.eventProducerListener = listener),\n            stop: () => (this.eventProducerListener = undefined),\n        };\n        this.events = xstream_1.Stream.create(eventProducer);\n    }\n    connect() {\n        this.socket.connect();\n    }\n    disconnect() {\n        this.socket.disconnect();\n    }\n    async send(data) {\n        return this.socket.send(data);\n    }\n}\nexports.StreamingSocket = StreamingSocket;\n//# sourceMappingURL=streamingsocket.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zb2NrZXQvYnVpbGQvc3RyZWFtaW5nc29ja2V0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixrQkFBa0IsbUJBQU8sQ0FBQyxzREFBUztBQUNuQyx3QkFBd0IsbUJBQU8sQ0FBQyxtRkFBaUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3NvY2tldC9idWlsZC9zdHJlYW1pbmdzb2NrZXQuanM/ZGRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuU3RyZWFtaW5nU29ja2V0ID0gdm9pZCAwO1xuY29uc3QgeHN0cmVhbV8xID0gcmVxdWlyZShcInhzdHJlYW1cIik7XG5jb25zdCBzb2NrZXR3cmFwcGVyXzEgPSByZXF1aXJlKFwiLi9zb2NrZXR3cmFwcGVyXCIpO1xuLyoqXG4gKiBBIFdlYlNvY2tldCB3cmFwcGVyIHRoYXQgZXhwb3NlcyBhbGwgZXZlbnRzIGFzIGEgc3RyZWFtLlxuICpcbiAqIFRoaXMgdW5kZXJseWluZyBzb2NrZXQgd2lsbCBub3QgYmUgY2xvc2VkIHdoZW4gdGhlIHN0cmVhbSBoYXMgbm8gbGlzdGVuZXJzXG4gKi9cbmNsYXNzIFN0cmVhbWluZ1NvY2tldCB7XG4gICAgY29uc3RydWN0b3IodXJsLCB0aW1lb3V0ID0gMTAwMDApIHtcbiAgICAgICAgdGhpcy5zb2NrZXQgPSBuZXcgc29ja2V0d3JhcHBlcl8xLlNvY2tldFdyYXBwZXIodXJsLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLm5leHQoZXZlbnQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LCAoZXJyb3JFdmVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIuZXJyb3IoZXJyb3JFdmVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sICgpID0+IHtcbiAgICAgICAgICAgIC8vIHNvY2tldCBvcGVuZWRcbiAgICAgICAgfSwgKGNsb3NlRXZlbnQpID0+IHtcbiAgICAgICAgICAgIGlmICh0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lcikge1xuICAgICAgICAgICAgICAgIGlmIChjbG9zZUV2ZW50Lndhc0NsZWFuKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZXZlbnRQcm9kdWNlckxpc3RlbmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmV2ZW50UHJvZHVjZXJMaXN0ZW5lci5lcnJvcihcIlNvY2tldCB3YXMgY2xvc2VkIHVuY2xlYW5cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCB0aW1lb3V0KTtcbiAgICAgICAgdGhpcy5jb25uZWN0ZWQgPSB0aGlzLnNvY2tldC5jb25uZWN0ZWQ7XG4gICAgICAgIGNvbnN0IGV2ZW50UHJvZHVjZXIgPSB7XG4gICAgICAgICAgICBzdGFydDogKGxpc3RlbmVyKSA9PiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIgPSBsaXN0ZW5lciksXG4gICAgICAgICAgICBzdG9wOiAoKSA9PiAodGhpcy5ldmVudFByb2R1Y2VyTGlzdGVuZXIgPSB1bmRlZmluZWQpLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmV2ZW50cyA9IHhzdHJlYW1fMS5TdHJlYW0uY3JlYXRlKGV2ZW50UHJvZHVjZXIpO1xuICAgIH1cbiAgICBjb25uZWN0KCkge1xuICAgICAgICB0aGlzLnNvY2tldC5jb25uZWN0KCk7XG4gICAgfVxuICAgIGRpc2Nvbm5lY3QoKSB7XG4gICAgICAgIHRoaXMuc29ja2V0LmRpc2Nvbm5lY3QoKTtcbiAgICB9XG4gICAgYXN5bmMgc2VuZChkYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNvY2tldC5zZW5kKGRhdGEpO1xuICAgIH1cbn1cbmV4cG9ydHMuU3RyZWFtaW5nU29ja2V0ID0gU3RyZWFtaW5nU29ja2V0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtaW5nc29ja2V0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/socket/build/streamingsocket.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/accounts.js":
/*!*********************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/accounts.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.accountFromAny = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst auth_1 = __webpack_require__(/*! cosmjs-types/cosmos/auth/v1beta1/auth */ \"(ssr)/./node_modules/cosmjs-types/cosmos/auth/v1beta1/auth.js\");\nconst vesting_1 = __webpack_require__(/*! cosmjs-types/cosmos/vesting/v1beta1/vesting */ \"(ssr)/./node_modules/cosmjs-types/cosmos/vesting/v1beta1/vesting.js\");\nfunction uint64FromProto(input) {\n    return math_1.Uint64.fromString(input.toString());\n}\nfunction accountFromBaseAccount(input) {\n    const { address, pubKey, accountNumber, sequence } = input;\n    const pubkey = (0, proto_signing_1.decodeOptionalPubkey)(pubKey);\n    return {\n        address: address,\n        pubkey: pubkey,\n        accountNumber: uint64FromProto(accountNumber).toNumber(),\n        sequence: uint64FromProto(sequence).toNumber(),\n    };\n}\n/**\n * Basic implementation of AccountParser. This is supposed to support the most relevant\n * common Cosmos SDK account types. If you need support for exotic account types,\n * you'll need to write your own account decoder.\n */\nfunction accountFromAny(input) {\n    const { typeUrl, value } = input;\n    switch (typeUrl) {\n        // auth\n        case \"/cosmos.auth.v1beta1.BaseAccount\":\n            return accountFromBaseAccount(auth_1.BaseAccount.decode(value));\n        case \"/cosmos.auth.v1beta1.ModuleAccount\": {\n            const baseAccount = auth_1.ModuleAccount.decode(value).baseAccount;\n            (0, utils_1.assert)(baseAccount);\n            return accountFromBaseAccount(baseAccount);\n        }\n        // vesting\n        case \"/cosmos.vesting.v1beta1.BaseVestingAccount\": {\n            const baseAccount = vesting_1.BaseVestingAccount.decode(value)?.baseAccount;\n            (0, utils_1.assert)(baseAccount);\n            return accountFromBaseAccount(baseAccount);\n        }\n        case \"/cosmos.vesting.v1beta1.ContinuousVestingAccount\": {\n            const baseAccount = vesting_1.ContinuousVestingAccount.decode(value)?.baseVestingAccount?.baseAccount;\n            (0, utils_1.assert)(baseAccount);\n            return accountFromBaseAccount(baseAccount);\n        }\n        case \"/cosmos.vesting.v1beta1.DelayedVestingAccount\": {\n            const baseAccount = vesting_1.DelayedVestingAccount.decode(value)?.baseVestingAccount?.baseAccount;\n            (0, utils_1.assert)(baseAccount);\n            return accountFromBaseAccount(baseAccount);\n        }\n        case \"/cosmos.vesting.v1beta1.PeriodicVestingAccount\": {\n            const baseAccount = vesting_1.PeriodicVestingAccount.decode(value)?.baseVestingAccount?.baseAccount;\n            (0, utils_1.assert)(baseAccount);\n            return accountFromBaseAccount(baseAccount);\n        }\n        default:\n            throw new Error(`Unsupported type: '${typeUrl}'`);\n    }\n}\nexports.accountFromAny = accountFromAny;\n//# sourceMappingURL=accounts.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9hY2NvdW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQkFBc0I7QUFDdEIsZUFBZSxtQkFBTyxDQUFDLHNFQUFjO0FBQ3JDLHdCQUF3QixtQkFBTyxDQUFDLHdGQUF1QjtBQUN2RCxnQkFBZ0IsbUJBQU8sQ0FBQyx3RUFBZTtBQUN2QyxlQUFlLG1CQUFPLENBQUMsNEdBQXVDO0FBQzlELGtCQUFrQixtQkFBTyxDQUFDLHdIQUE2QztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMkNBQTJDO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlCQUFpQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxRQUFRO0FBQzFEO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvYWNjb3VudHMuanM/YjA0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYWNjb3VudEZyb21BbnkgPSB2b2lkIDA7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuY29uc3QgcHJvdG9fc2lnbmluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvcHJvdG8tc2lnbmluZ1wiKTtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGNvc21qcy91dGlsc1wiKTtcbmNvbnN0IGF1dGhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL2F1dGgvdjFiZXRhMS9hdXRoXCIpO1xuY29uc3QgdmVzdGluZ18xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvdmVzdGluZy92MWJldGExL3Zlc3RpbmdcIik7XG5mdW5jdGlvbiB1aW50NjRGcm9tUHJvdG8oaW5wdXQpIHtcbiAgICByZXR1cm4gbWF0aF8xLlVpbnQ2NC5mcm9tU3RyaW5nKGlucHV0LnRvU3RyaW5nKCkpO1xufVxuZnVuY3Rpb24gYWNjb3VudEZyb21CYXNlQWNjb3VudChpbnB1dCkge1xuICAgIGNvbnN0IHsgYWRkcmVzcywgcHViS2V5LCBhY2NvdW50TnVtYmVyLCBzZXF1ZW5jZSB9ID0gaW5wdXQ7XG4gICAgY29uc3QgcHVia2V5ID0gKDAsIHByb3RvX3NpZ25pbmdfMS5kZWNvZGVPcHRpb25hbFB1YmtleSkocHViS2V5KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLFxuICAgICAgICBwdWJrZXk6IHB1YmtleSxcbiAgICAgICAgYWNjb3VudE51bWJlcjogdWludDY0RnJvbVByb3RvKGFjY291bnROdW1iZXIpLnRvTnVtYmVyKCksXG4gICAgICAgIHNlcXVlbmNlOiB1aW50NjRGcm9tUHJvdG8oc2VxdWVuY2UpLnRvTnVtYmVyKCksXG4gICAgfTtcbn1cbi8qKlxuICogQmFzaWMgaW1wbGVtZW50YXRpb24gb2YgQWNjb3VudFBhcnNlci4gVGhpcyBpcyBzdXBwb3NlZCB0byBzdXBwb3J0IHRoZSBtb3N0IHJlbGV2YW50XG4gKiBjb21tb24gQ29zbW9zIFNESyBhY2NvdW50IHR5cGVzLiBJZiB5b3UgbmVlZCBzdXBwb3J0IGZvciBleG90aWMgYWNjb3VudCB0eXBlcyxcbiAqIHlvdSdsbCBuZWVkIHRvIHdyaXRlIHlvdXIgb3duIGFjY291bnQgZGVjb2Rlci5cbiAqL1xuZnVuY3Rpb24gYWNjb3VudEZyb21BbnkoaW5wdXQpIHtcbiAgICBjb25zdCB7IHR5cGVVcmwsIHZhbHVlIH0gPSBpbnB1dDtcbiAgICBzd2l0Y2ggKHR5cGVVcmwpIHtcbiAgICAgICAgLy8gYXV0aFxuICAgICAgICBjYXNlIFwiL2Nvc21vcy5hdXRoLnYxYmV0YTEuQmFzZUFjY291bnRcIjpcbiAgICAgICAgICAgIHJldHVybiBhY2NvdW50RnJvbUJhc2VBY2NvdW50KGF1dGhfMS5CYXNlQWNjb3VudC5kZWNvZGUodmFsdWUpKTtcbiAgICAgICAgY2FzZSBcIi9jb3Ntb3MuYXV0aC52MWJldGExLk1vZHVsZUFjY291bnRcIjoge1xuICAgICAgICAgICAgY29uc3QgYmFzZUFjY291bnQgPSBhdXRoXzEuTW9kdWxlQWNjb3VudC5kZWNvZGUodmFsdWUpLmJhc2VBY2NvdW50O1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShiYXNlQWNjb3VudCk7XG4gICAgICAgICAgICByZXR1cm4gYWNjb3VudEZyb21CYXNlQWNjb3VudChiYXNlQWNjb3VudCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdmVzdGluZ1xuICAgICAgICBjYXNlIFwiL2Nvc21vcy52ZXN0aW5nLnYxYmV0YTEuQmFzZVZlc3RpbmdBY2NvdW50XCI6IHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VBY2NvdW50ID0gdmVzdGluZ18xLkJhc2VWZXN0aW5nQWNjb3VudC5kZWNvZGUodmFsdWUpPy5iYXNlQWNjb3VudDtcbiAgICAgICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoYmFzZUFjY291bnQpO1xuICAgICAgICAgICAgcmV0dXJuIGFjY291bnRGcm9tQmFzZUFjY291bnQoYmFzZUFjY291bnQpO1xuICAgICAgICB9XG4gICAgICAgIGNhc2UgXCIvY29zbW9zLnZlc3RpbmcudjFiZXRhMS5Db250aW51b3VzVmVzdGluZ0FjY291bnRcIjoge1xuICAgICAgICAgICAgY29uc3QgYmFzZUFjY291bnQgPSB2ZXN0aW5nXzEuQ29udGludW91c1Zlc3RpbmdBY2NvdW50LmRlY29kZSh2YWx1ZSk/LmJhc2VWZXN0aW5nQWNjb3VudD8uYmFzZUFjY291bnQ7XG4gICAgICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKGJhc2VBY2NvdW50KTtcbiAgICAgICAgICAgIHJldHVybiBhY2NvdW50RnJvbUJhc2VBY2NvdW50KGJhc2VBY2NvdW50KTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFwiL2Nvc21vcy52ZXN0aW5nLnYxYmV0YTEuRGVsYXllZFZlc3RpbmdBY2NvdW50XCI6IHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VBY2NvdW50ID0gdmVzdGluZ18xLkRlbGF5ZWRWZXN0aW5nQWNjb3VudC5kZWNvZGUodmFsdWUpPy5iYXNlVmVzdGluZ0FjY291bnQ/LmJhc2VBY2NvdW50O1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShiYXNlQWNjb3VudCk7XG4gICAgICAgICAgICByZXR1cm4gYWNjb3VudEZyb21CYXNlQWNjb3VudChiYXNlQWNjb3VudCk7XG4gICAgICAgIH1cbiAgICAgICAgY2FzZSBcIi9jb3Ntb3MudmVzdGluZy52MWJldGExLlBlcmlvZGljVmVzdGluZ0FjY291bnRcIjoge1xuICAgICAgICAgICAgY29uc3QgYmFzZUFjY291bnQgPSB2ZXN0aW5nXzEuUGVyaW9kaWNWZXN0aW5nQWNjb3VudC5kZWNvZGUodmFsdWUpPy5iYXNlVmVzdGluZ0FjY291bnQ/LmJhc2VBY2NvdW50O1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShiYXNlQWNjb3VudCk7XG4gICAgICAgICAgICByZXR1cm4gYWNjb3VudEZyb21CYXNlQWNjb3VudChiYXNlQWNjb3VudCk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgdHlwZTogJyR7dHlwZVVybH0nYCk7XG4gICAgfVxufVxuZXhwb3J0cy5hY2NvdW50RnJvbUFueSA9IGFjY291bnRGcm9tQW55O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWNjb3VudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/accounts.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/aminotypes.js":
/*!***********************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/aminotypes.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AminoTypes = void 0;\n/**\n * A map from Stargate message types as used in the messages's `Any` type\n * to Amino types.\n */\nclass AminoTypes {\n    constructor(types) {\n        this.register = types;\n    }\n    toAmino({ typeUrl, value }) {\n        const converter = this.register[typeUrl];\n        if (!converter) {\n            throw new Error(`Type URL '${typeUrl}' does not exist in the Amino message type register. ` +\n                \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" +\n                \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n        }\n        return {\n            type: converter.aminoType,\n            value: converter.toAmino(value),\n        };\n    }\n    fromAmino({ type, value }) {\n        const matches = Object.entries(this.register).filter(([_typeUrl, { aminoType }]) => aminoType === type);\n        switch (matches.length) {\n            case 0: {\n                throw new Error(`Amino type identifier '${type}' does not exist in the Amino message type register. ` +\n                    \"If you need support for this message type, you can pass in additional entries to the AminoTypes constructor. \" +\n                    \"If you think this message type should be included by default, please open an issue at https://github.com/cosmos/cosmjs/issues.\");\n            }\n            case 1: {\n                const [typeUrl, converter] = matches[0];\n                return {\n                    typeUrl: typeUrl,\n                    value: converter.fromAmino(value),\n                };\n            }\n            default:\n                throw new Error(`Multiple types are registered with Amino type identifier '${type}': '` +\n                    matches\n                        .map(([key, _value]) => key)\n                        .sort()\n                        .join(\"', '\") +\n                    \"'. Thus fromAmino cannot be performed.\");\n        }\n    }\n}\nexports.AminoTypes = AminoTypes;\n//# sourceMappingURL=aminotypes.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9hbWlub3R5cGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxnQkFBZ0I7QUFDOUI7QUFDQTtBQUNBLHlDQUF5QyxRQUFRO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsYUFBYTtBQUM3QiwyRUFBMkUsV0FBVztBQUN0RjtBQUNBO0FBQ0EsMERBQTBELEtBQUs7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZGQUE2RixLQUFLO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvYW1pbm90eXBlcy5qcz9kNTM5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BbWlub1R5cGVzID0gdm9pZCAwO1xuLyoqXG4gKiBBIG1hcCBmcm9tIFN0YXJnYXRlIG1lc3NhZ2UgdHlwZXMgYXMgdXNlZCBpbiB0aGUgbWVzc2FnZXMncyBgQW55YCB0eXBlXG4gKiB0byBBbWlubyB0eXBlcy5cbiAqL1xuY2xhc3MgQW1pbm9UeXBlcyB7XG4gICAgY29uc3RydWN0b3IodHlwZXMpIHtcbiAgICAgICAgdGhpcy5yZWdpc3RlciA9IHR5cGVzO1xuICAgIH1cbiAgICB0b0FtaW5vKHsgdHlwZVVybCwgdmFsdWUgfSkge1xuICAgICAgICBjb25zdCBjb252ZXJ0ZXIgPSB0aGlzLnJlZ2lzdGVyW3R5cGVVcmxdO1xuICAgICAgICBpZiAoIWNvbnZlcnRlcikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUeXBlIFVSTCAnJHt0eXBlVXJsfScgZG9lcyBub3QgZXhpc3QgaW4gdGhlIEFtaW5vIG1lc3NhZ2UgdHlwZSByZWdpc3Rlci4gYCArXG4gICAgICAgICAgICAgICAgXCJJZiB5b3UgbmVlZCBzdXBwb3J0IGZvciB0aGlzIG1lc3NhZ2UgdHlwZSwgeW91IGNhbiBwYXNzIGluIGFkZGl0aW9uYWwgZW50cmllcyB0byB0aGUgQW1pbm9UeXBlcyBjb25zdHJ1Y3Rvci4gXCIgK1xuICAgICAgICAgICAgICAgIFwiSWYgeW91IHRoaW5rIHRoaXMgbWVzc2FnZSB0eXBlIHNob3VsZCBiZSBpbmNsdWRlZCBieSBkZWZhdWx0LCBwbGVhc2Ugb3BlbiBhbiBpc3N1ZSBhdCBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21qcy9pc3N1ZXMuXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiBjb252ZXJ0ZXIuYW1pbm9UeXBlLFxuICAgICAgICAgICAgdmFsdWU6IGNvbnZlcnRlci50b0FtaW5vKHZhbHVlKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnJvbUFtaW5vKHsgdHlwZSwgdmFsdWUgfSkge1xuICAgICAgICBjb25zdCBtYXRjaGVzID0gT2JqZWN0LmVudHJpZXModGhpcy5yZWdpc3RlcikuZmlsdGVyKChbX3R5cGVVcmwsIHsgYW1pbm9UeXBlIH1dKSA9PiBhbWlub1R5cGUgPT09IHR5cGUpO1xuICAgICAgICBzd2l0Y2ggKG1hdGNoZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXNlIDA6IHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFtaW5vIHR5cGUgaWRlbnRpZmllciAnJHt0eXBlfScgZG9lcyBub3QgZXhpc3QgaW4gdGhlIEFtaW5vIG1lc3NhZ2UgdHlwZSByZWdpc3Rlci4gYCArXG4gICAgICAgICAgICAgICAgICAgIFwiSWYgeW91IG5lZWQgc3VwcG9ydCBmb3IgdGhpcyBtZXNzYWdlIHR5cGUsIHlvdSBjYW4gcGFzcyBpbiBhZGRpdGlvbmFsIGVudHJpZXMgdG8gdGhlIEFtaW5vVHlwZXMgY29uc3RydWN0b3IuIFwiICtcbiAgICAgICAgICAgICAgICAgICAgXCJJZiB5b3UgdGhpbmsgdGhpcyBtZXNzYWdlIHR5cGUgc2hvdWxkIGJlIGluY2x1ZGVkIGJ5IGRlZmF1bHQsIHBsZWFzZSBvcGVuIGFuIGlzc3VlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbWpzL2lzc3Vlcy5cIik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlIDE6IHtcbiAgICAgICAgICAgICAgICBjb25zdCBbdHlwZVVybCwgY29udmVydGVyXSA9IG1hdGNoZXNbMF07XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZVVybDogdHlwZVVybCxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNvbnZlcnRlci5mcm9tQW1pbm8odmFsdWUpLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTXVsdGlwbGUgdHlwZXMgYXJlIHJlZ2lzdGVyZWQgd2l0aCBBbWlubyB0eXBlIGlkZW50aWZpZXIgJyR7dHlwZX0nOiAnYCArXG4gICAgICAgICAgICAgICAgICAgIG1hdGNoZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIC5tYXAoKFtrZXksIF92YWx1ZV0pID0+IGtleSlcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zb3J0KClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5qb2luKFwiJywgJ1wiKSArXG4gICAgICAgICAgICAgICAgICAgIFwiJy4gVGh1cyBmcm9tQW1pbm8gY2Fubm90IGJlIHBlcmZvcm1lZC5cIik7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLkFtaW5vVHlwZXMgPSBBbWlub1R5cGVzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW1pbm90eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/aminotypes.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/events.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/events.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fromTendermintEvent = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * Takes a Tendermint 0.34 or 0.37 event with binary encoded key and value\n * and converts it into an `Event` with string attributes.\n */\nfunction fromTendermintEvent(event) {\n    return {\n        type: event.type,\n        attributes: event.attributes.map((attr) => ({\n            key: typeof attr.key == \"string\" ? attr.key : (0, encoding_1.fromUtf8)(attr.key, true),\n            value: typeof attr.value == \"string\" ? attr.value : (0, encoding_1.fromUtf8)(attr.value, true),\n        })),\n    };\n}\nexports.fromTendermintEvent = fromTendermintEvent;\n//# sourceMappingURL=events.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9ldmVudHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL2V2ZW50cy5qcz9kMzQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mcm9tVGVuZGVybWludEV2ZW50ID0gdm9pZCAwO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuLyoqXG4gKiBUYWtlcyBhIFRlbmRlcm1pbnQgMC4zNCBvciAwLjM3IGV2ZW50IHdpdGggYmluYXJ5IGVuY29kZWQga2V5IGFuZCB2YWx1ZVxuICogYW5kIGNvbnZlcnRzIGl0IGludG8gYW4gYEV2ZW50YCB3aXRoIHN0cmluZyBhdHRyaWJ1dGVzLlxuICovXG5mdW5jdGlvbiBmcm9tVGVuZGVybWludEV2ZW50KGV2ZW50KSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogZXZlbnQudHlwZSxcbiAgICAgICAgYXR0cmlidXRlczogZXZlbnQuYXR0cmlidXRlcy5tYXAoKGF0dHIpID0+ICh7XG4gICAgICAgICAgICBrZXk6IHR5cGVvZiBhdHRyLmtleSA9PSBcInN0cmluZ1wiID8gYXR0ci5rZXkgOiAoMCwgZW5jb2RpbmdfMS5mcm9tVXRmOCkoYXR0ci5rZXksIHRydWUpLFxuICAgICAgICAgICAgdmFsdWU6IHR5cGVvZiBhdHRyLnZhbHVlID09IFwic3RyaW5nXCIgPyBhdHRyLnZhbHVlIDogKDAsIGVuY29kaW5nXzEuZnJvbVV0ZjgpKGF0dHIudmFsdWUsIHRydWUpLFxuICAgICAgICB9KSksXG4gICAgfTtcbn1cbmV4cG9ydHMuZnJvbVRlbmRlcm1pbnRFdmVudCA9IGZyb21UZW5kZXJtaW50RXZlbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/events.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/fee.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/fee.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.calculateFee = exports.GasPrice = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\n/**\n * Denom checker for the Cosmos SDK 0.42 denom pattern\n * (https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/types/coin.go#L599-L601).\n *\n * This is like a regexp but with helpful error messages.\n */\nfunction checkDenom(denom) {\n    if (denom.length < 3 || denom.length > 128) {\n        throw new Error(\"Denom must be between 3 and 128 characters\");\n    }\n}\n/**\n * A gas price, i.e. the price of a single unit of gas. This is typically a fraction of\n * the smallest fee token unit, such as 0.012utoken.\n */\nclass GasPrice {\n    constructor(amount, denom) {\n        this.amount = amount;\n        this.denom = denom;\n    }\n    /**\n     * Parses a gas price formatted as `<amount><denom>`, e.g. `GasPrice.fromString(\"0.012utoken\")`.\n     *\n     * The denom must match the Cosmos SDK 0.42 pattern (https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/types/coin.go#L599-L601).\n     * See `GasPrice` in @cosmjs/stargate for a more generic matcher.\n     *\n     * Separators are not yet supported.\n     */\n    static fromString(gasPrice) {\n        // Use Decimal.fromUserInput and checkDenom for detailed checks and helpful error messages\n        const matchResult = gasPrice.match(/^([0-9.]+)([a-zA-Z][a-zA-Z0-9/:._-]*)$/);\n        if (!matchResult) {\n            throw new Error(\"Invalid gas price string\");\n        }\n        const [_, amount, denom] = matchResult;\n        checkDenom(denom);\n        const fractionalDigits = 18;\n        const decimalAmount = math_1.Decimal.fromUserInput(amount, fractionalDigits);\n        return new GasPrice(decimalAmount, denom);\n    }\n    /**\n     * Returns a string representation of this gas price, e.g. \"0.025uatom\".\n     * This can be used as an input to `GasPrice.fromString`.\n     */\n    toString() {\n        return this.amount.toString() + this.denom;\n    }\n}\nexports.GasPrice = GasPrice;\nfunction calculateFee(gasLimit, gasPrice) {\n    const processedGasPrice = typeof gasPrice === \"string\" ? GasPrice.fromString(gasPrice) : gasPrice;\n    const { denom, amount: gasPriceAmount } = processedGasPrice;\n    // Note: Amount can exceed the safe integer range (https://github.com/cosmos/cosmjs/issues/1134),\n    // which we handle by converting from Decimal to string without going through number.\n    const amount = gasPriceAmount.multiply(new math_1.Uint53(gasLimit)).ceil().toString();\n    return {\n        amount: (0, proto_signing_1.coins)(amount, denom),\n        gas: gasLimit.toString(),\n    };\n}\nexports.calculateFee = calculateFee;\n//# sourceMappingURL=fee.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9mZWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CLEdBQUcsZ0JBQWdCO0FBQ3ZDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBYztBQUNyQyx3QkFBd0IsbUJBQU8sQ0FBQyx3RkFBdUI7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQSxZQUFZLGdDQUFnQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL2ZlZS5qcz85NWMyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jYWxjdWxhdGVGZWUgPSBleHBvcnRzLkdhc1ByaWNlID0gdm9pZCAwO1xuY29uc3QgbWF0aF8xID0gcmVxdWlyZShcIkBjb3NtanMvbWF0aFwiKTtcbmNvbnN0IHByb3RvX3NpZ25pbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL3Byb3RvLXNpZ25pbmdcIik7XG4vKipcbiAqIERlbm9tIGNoZWNrZXIgZm9yIHRoZSBDb3Ntb3MgU0RLIDAuNDIgZGVub20gcGF0dGVyblxuICogKGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iL3YwLjQyLjQvdHlwZXMvY29pbi5nbyNMNTk5LUw2MDEpLlxuICpcbiAqIFRoaXMgaXMgbGlrZSBhIHJlZ2V4cCBidXQgd2l0aCBoZWxwZnVsIGVycm9yIG1lc3NhZ2VzLlxuICovXG5mdW5jdGlvbiBjaGVja0Rlbm9tKGRlbm9tKSB7XG4gICAgaWYgKGRlbm9tLmxlbmd0aCA8IDMgfHwgZGVub20ubGVuZ3RoID4gMTI4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkRlbm9tIG11c3QgYmUgYmV0d2VlbiAzIGFuZCAxMjggY2hhcmFjdGVyc1wiKTtcbiAgICB9XG59XG4vKipcbiAqIEEgZ2FzIHByaWNlLCBpLmUuIHRoZSBwcmljZSBvZiBhIHNpbmdsZSB1bml0IG9mIGdhcy4gVGhpcyBpcyB0eXBpY2FsbHkgYSBmcmFjdGlvbiBvZlxuICogdGhlIHNtYWxsZXN0IGZlZSB0b2tlbiB1bml0LCBzdWNoIGFzIDAuMDEydXRva2VuLlxuICovXG5jbGFzcyBHYXNQcmljZSB7XG4gICAgY29uc3RydWN0b3IoYW1vdW50LCBkZW5vbSkge1xuICAgICAgICB0aGlzLmFtb3VudCA9IGFtb3VudDtcbiAgICAgICAgdGhpcy5kZW5vbSA9IGRlbm9tO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBQYXJzZXMgYSBnYXMgcHJpY2UgZm9ybWF0dGVkIGFzIGA8YW1vdW50PjxkZW5vbT5gLCBlLmcuIGBHYXNQcmljZS5mcm9tU3RyaW5nKFwiMC4wMTJ1dG9rZW5cIilgLlxuICAgICAqXG4gICAgICogVGhlIGRlbm9tIG11c3QgbWF0Y2ggdGhlIENvc21vcyBTREsgMC40MiBwYXR0ZXJuIChodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvYmxvYi92MC40Mi40L3R5cGVzL2NvaW4uZ28jTDU5OS1MNjAxKS5cbiAgICAgKiBTZWUgYEdhc1ByaWNlYCBpbiBAY29zbWpzL3N0YXJnYXRlIGZvciBhIG1vcmUgZ2VuZXJpYyBtYXRjaGVyLlxuICAgICAqXG4gICAgICogU2VwYXJhdG9ycyBhcmUgbm90IHlldCBzdXBwb3J0ZWQuXG4gICAgICovXG4gICAgc3RhdGljIGZyb21TdHJpbmcoZ2FzUHJpY2UpIHtcbiAgICAgICAgLy8gVXNlIERlY2ltYWwuZnJvbVVzZXJJbnB1dCBhbmQgY2hlY2tEZW5vbSBmb3IgZGV0YWlsZWQgY2hlY2tzIGFuZCBoZWxwZnVsIGVycm9yIG1lc3NhZ2VzXG4gICAgICAgIGNvbnN0IG1hdGNoUmVzdWx0ID0gZ2FzUHJpY2UubWF0Y2goL14oWzAtOS5dKykoW2EtekEtWl1bYS16QS1aMC05LzouXy1dKikkLyk7XG4gICAgICAgIGlmICghbWF0Y2hSZXN1bHQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgZ2FzIHByaWNlIHN0cmluZ1wiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBbXywgYW1vdW50LCBkZW5vbV0gPSBtYXRjaFJlc3VsdDtcbiAgICAgICAgY2hlY2tEZW5vbShkZW5vbSk7XG4gICAgICAgIGNvbnN0IGZyYWN0aW9uYWxEaWdpdHMgPSAxODtcbiAgICAgICAgY29uc3QgZGVjaW1hbEFtb3VudCA9IG1hdGhfMS5EZWNpbWFsLmZyb21Vc2VySW5wdXQoYW1vdW50LCBmcmFjdGlvbmFsRGlnaXRzKTtcbiAgICAgICAgcmV0dXJuIG5ldyBHYXNQcmljZShkZWNpbWFsQW1vdW50LCBkZW5vbSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhpcyBnYXMgcHJpY2UsIGUuZy4gXCIwLjAyNXVhdG9tXCIuXG4gICAgICogVGhpcyBjYW4gYmUgdXNlZCBhcyBhbiBpbnB1dCB0byBgR2FzUHJpY2UuZnJvbVN0cmluZ2AuXG4gICAgICovXG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmFtb3VudC50b1N0cmluZygpICsgdGhpcy5kZW5vbTtcbiAgICB9XG59XG5leHBvcnRzLkdhc1ByaWNlID0gR2FzUHJpY2U7XG5mdW5jdGlvbiBjYWxjdWxhdGVGZWUoZ2FzTGltaXQsIGdhc1ByaWNlKSB7XG4gICAgY29uc3QgcHJvY2Vzc2VkR2FzUHJpY2UgPSB0eXBlb2YgZ2FzUHJpY2UgPT09IFwic3RyaW5nXCIgPyBHYXNQcmljZS5mcm9tU3RyaW5nKGdhc1ByaWNlKSA6IGdhc1ByaWNlO1xuICAgIGNvbnN0IHsgZGVub20sIGFtb3VudDogZ2FzUHJpY2VBbW91bnQgfSA9IHByb2Nlc3NlZEdhc1ByaWNlO1xuICAgIC8vIE5vdGU6IEFtb3VudCBjYW4gZXhjZWVkIHRoZSBzYWZlIGludGVnZXIgcmFuZ2UgKGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbWpzL2lzc3Vlcy8xMTM0KSxcbiAgICAvLyB3aGljaCB3ZSBoYW5kbGUgYnkgY29udmVydGluZyBmcm9tIERlY2ltYWwgdG8gc3RyaW5nIHdpdGhvdXQgZ29pbmcgdGhyb3VnaCBudW1iZXIuXG4gICAgY29uc3QgYW1vdW50ID0gZ2FzUHJpY2VBbW91bnQubXVsdGlwbHkobmV3IG1hdGhfMS5VaW50NTMoZ2FzTGltaXQpKS5jZWlsKCkudG9TdHJpbmcoKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhbW91bnQ6ICgwLCBwcm90b19zaWduaW5nXzEuY29pbnMpKGFtb3VudCwgZGVub20pLFxuICAgICAgICBnYXM6IGdhc0xpbWl0LnRvU3RyaW5nKCksXG4gICAgfTtcbn1cbmV4cG9ydHMuY2FsY3VsYXRlRmVlID0gY2FsY3VsYXRlRmVlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZmVlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/fee.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgUndelegateEncodeObject = exports.isMsgTransferEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgSendEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDepositEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgCancelUnbondingDelegationEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgVerifyInvariant = exports.isAminoMsgUnjail = exports.isAminoMsgUndelegate = exports.isAminoMsgTransfer = exports.isAminoMsgSubmitProposal = exports.isAminoMsgSubmitEvidence = exports.isAminoMsgSetWithdrawAddress = exports.isAminoMsgSend = exports.isAminoMsgMultiSend = exports.isAminoMsgFundCommunityPool = exports.isAminoMsgEditValidator = exports.isAminoMsgDeposit = exports.isAminoMsgDelegate = exports.isAminoMsgCreateVestingAccount = exports.isAminoMsgCreateValidator = exports.isAminoMsgBeginRedelegate = exports.createVestingAminoConverters = exports.createStakingAminoConverters = exports.createSlashingAminoConverters = exports.createIbcAminoConverters = exports.createGroupAminoConverters = exports.createGovAminoConverters = exports.createFeegrantAminoConverters = exports.createEvidenceAminoConverters = exports.createDistributionAminoConverters = exports.createCrysisAminoConverters = exports.createBankAminoConverters = exports.createAuthzAminoConverters = exports.logs = exports.GasPrice = exports.calculateFee = exports.fromTendermintEvent = exports.AminoTypes = exports.accountFromAny = void 0;\nexports.parseCoins = exports.makeCosmoshubPath = exports.coins = exports.coin = exports.TimeoutError = exports.StargateClient = exports.isDeliverTxSuccess = exports.isDeliverTxFailure = exports.BroadcastTxError = exports.assertIsDeliverTxSuccess = exports.assertIsDeliverTxFailure = exports.SigningStargateClient = exports.defaultRegistryTypes = exports.createDefaultAminoConverters = exports.isSearchTxQueryArray = exports.QueryClient = exports.decodeCosmosSdkDecFromProto = exports.createProtobufRpcClient = exports.createPagination = exports.makeMultisignedTxBytes = exports.makeMultisignedTx = exports.setupTxExtension = exports.setupStakingExtension = exports.setupSlashingExtension = exports.setupMintExtension = exports.setupIbcExtension = exports.setupGovExtension = exports.setupFeegrantExtension = exports.setupDistributionExtension = exports.setupBankExtension = exports.setupAuthzExtension = exports.setupAuthExtension = exports.isMsgWithdrawDelegatorRewardEncodeObject = void 0;\nvar accounts_1 = __webpack_require__(/*! ./accounts */ \"(ssr)/./node_modules/@cosmjs/stargate/build/accounts.js\");\nObject.defineProperty(exports, \"accountFromAny\", ({ enumerable: true, get: function () { return accounts_1.accountFromAny; } }));\nvar aminotypes_1 = __webpack_require__(/*! ./aminotypes */ \"(ssr)/./node_modules/@cosmjs/stargate/build/aminotypes.js\");\nObject.defineProperty(exports, \"AminoTypes\", ({ enumerable: true, get: function () { return aminotypes_1.AminoTypes; } }));\nvar events_1 = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/@cosmjs/stargate/build/events.js\");\nObject.defineProperty(exports, \"fromTendermintEvent\", ({ enumerable: true, get: function () { return events_1.fromTendermintEvent; } }));\nvar fee_1 = __webpack_require__(/*! ./fee */ \"(ssr)/./node_modules/@cosmjs/stargate/build/fee.js\");\nObject.defineProperty(exports, \"calculateFee\", ({ enumerable: true, get: function () { return fee_1.calculateFee; } }));\nObject.defineProperty(exports, \"GasPrice\", ({ enumerable: true, get: function () { return fee_1.GasPrice; } }));\nexports.logs = __importStar(__webpack_require__(/*! ./logs */ \"(ssr)/./node_modules/@cosmjs/stargate/build/logs.js\"));\nvar modules_1 = __webpack_require__(/*! ./modules */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/index.js\");\nObject.defineProperty(exports, \"createAuthzAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createAuthzAminoConverters; } }));\nObject.defineProperty(exports, \"createBankAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createBankAminoConverters; } }));\nObject.defineProperty(exports, \"createCrysisAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createCrysisAminoConverters; } }));\nObject.defineProperty(exports, \"createDistributionAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createDistributionAminoConverters; } }));\nObject.defineProperty(exports, \"createEvidenceAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createEvidenceAminoConverters; } }));\nObject.defineProperty(exports, \"createFeegrantAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createFeegrantAminoConverters; } }));\nObject.defineProperty(exports, \"createGovAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createGovAminoConverters; } }));\nObject.defineProperty(exports, \"createGroupAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createGroupAminoConverters; } }));\nObject.defineProperty(exports, \"createIbcAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createIbcAminoConverters; } }));\nObject.defineProperty(exports, \"createSlashingAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createSlashingAminoConverters; } }));\nObject.defineProperty(exports, \"createStakingAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createStakingAminoConverters; } }));\nObject.defineProperty(exports, \"createVestingAminoConverters\", ({ enumerable: true, get: function () { return modules_1.createVestingAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgBeginRedelegate\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgBeginRedelegate; } }));\nObject.defineProperty(exports, \"isAminoMsgCreateValidator\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgCreateValidator; } }));\nObject.defineProperty(exports, \"isAminoMsgCreateVestingAccount\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgCreateVestingAccount; } }));\nObject.defineProperty(exports, \"isAminoMsgDelegate\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgDelegate; } }));\nObject.defineProperty(exports, \"isAminoMsgDeposit\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgDeposit; } }));\nObject.defineProperty(exports, \"isAminoMsgEditValidator\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgEditValidator; } }));\nObject.defineProperty(exports, \"isAminoMsgFundCommunityPool\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgFundCommunityPool; } }));\nObject.defineProperty(exports, \"isAminoMsgMultiSend\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgMultiSend; } }));\nObject.defineProperty(exports, \"isAminoMsgSend\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgSend; } }));\nObject.defineProperty(exports, \"isAminoMsgSetWithdrawAddress\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgSetWithdrawAddress; } }));\nObject.defineProperty(exports, \"isAminoMsgSubmitEvidence\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgSubmitEvidence; } }));\nObject.defineProperty(exports, \"isAminoMsgSubmitProposal\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgSubmitProposal; } }));\nObject.defineProperty(exports, \"isAminoMsgTransfer\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgTransfer; } }));\nObject.defineProperty(exports, \"isAminoMsgUndelegate\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgUndelegate; } }));\nObject.defineProperty(exports, \"isAminoMsgUnjail\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgUnjail; } }));\nObject.defineProperty(exports, \"isAminoMsgVerifyInvariant\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgVerifyInvariant; } }));\nObject.defineProperty(exports, \"isAminoMsgVote\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgVote; } }));\nObject.defineProperty(exports, \"isAminoMsgVoteWeighted\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgVoteWeighted; } }));\nObject.defineProperty(exports, \"isAminoMsgWithdrawDelegatorReward\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgWithdrawDelegatorReward; } }));\nObject.defineProperty(exports, \"isAminoMsgWithdrawValidatorCommission\", ({ enumerable: true, get: function () { return modules_1.isAminoMsgWithdrawValidatorCommission; } }));\nObject.defineProperty(exports, \"isMsgBeginRedelegateEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgBeginRedelegateEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgCancelUnbondingDelegationEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgCancelUnbondingDelegationEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgCreateValidatorEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgCreateValidatorEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgDelegateEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgDelegateEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgDepositEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgDepositEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgEditValidatorEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgEditValidatorEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgSendEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgSendEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgSubmitProposalEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgSubmitProposalEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgTransferEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgTransferEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgUndelegateEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgUndelegateEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgVoteEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgVoteEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgVoteWeightedEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgVoteWeightedEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgWithdrawDelegatorRewardEncodeObject\", ({ enumerable: true, get: function () { return modules_1.isMsgWithdrawDelegatorRewardEncodeObject; } }));\nObject.defineProperty(exports, \"setupAuthExtension\", ({ enumerable: true, get: function () { return modules_1.setupAuthExtension; } }));\nObject.defineProperty(exports, \"setupAuthzExtension\", ({ enumerable: true, get: function () { return modules_1.setupAuthzExtension; } }));\nObject.defineProperty(exports, \"setupBankExtension\", ({ enumerable: true, get: function () { return modules_1.setupBankExtension; } }));\nObject.defineProperty(exports, \"setupDistributionExtension\", ({ enumerable: true, get: function () { return modules_1.setupDistributionExtension; } }));\nObject.defineProperty(exports, \"setupFeegrantExtension\", ({ enumerable: true, get: function () { return modules_1.setupFeegrantExtension; } }));\nObject.defineProperty(exports, \"setupGovExtension\", ({ enumerable: true, get: function () { return modules_1.setupGovExtension; } }));\nObject.defineProperty(exports, \"setupIbcExtension\", ({ enumerable: true, get: function () { return modules_1.setupIbcExtension; } }));\nObject.defineProperty(exports, \"setupMintExtension\", ({ enumerable: true, get: function () { return modules_1.setupMintExtension; } }));\nObject.defineProperty(exports, \"setupSlashingExtension\", ({ enumerable: true, get: function () { return modules_1.setupSlashingExtension; } }));\nObject.defineProperty(exports, \"setupStakingExtension\", ({ enumerable: true, get: function () { return modules_1.setupStakingExtension; } }));\nObject.defineProperty(exports, \"setupTxExtension\", ({ enumerable: true, get: function () { return modules_1.setupTxExtension; } }));\nvar multisignature_1 = __webpack_require__(/*! ./multisignature */ \"(ssr)/./node_modules/@cosmjs/stargate/build/multisignature.js\");\nObject.defineProperty(exports, \"makeMultisignedTx\", ({ enumerable: true, get: function () { return multisignature_1.makeMultisignedTx; } }));\nObject.defineProperty(exports, \"makeMultisignedTxBytes\", ({ enumerable: true, get: function () { return multisignature_1.makeMultisignedTxBytes; } }));\nvar queryclient_1 = __webpack_require__(/*! ./queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nObject.defineProperty(exports, \"createPagination\", ({ enumerable: true, get: function () { return queryclient_1.createPagination; } }));\nObject.defineProperty(exports, \"createProtobufRpcClient\", ({ enumerable: true, get: function () { return queryclient_1.createProtobufRpcClient; } }));\nObject.defineProperty(exports, \"decodeCosmosSdkDecFromProto\", ({ enumerable: true, get: function () { return queryclient_1.decodeCosmosSdkDecFromProto; } }));\nObject.defineProperty(exports, \"QueryClient\", ({ enumerable: true, get: function () { return queryclient_1.QueryClient; } }));\nvar search_1 = __webpack_require__(/*! ./search */ \"(ssr)/./node_modules/@cosmjs/stargate/build/search.js\");\nObject.defineProperty(exports, \"isSearchTxQueryArray\", ({ enumerable: true, get: function () { return search_1.isSearchTxQueryArray; } }));\nvar signingstargateclient_1 = __webpack_require__(/*! ./signingstargateclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/signingstargateclient.js\");\nObject.defineProperty(exports, \"createDefaultAminoConverters\", ({ enumerable: true, get: function () { return signingstargateclient_1.createDefaultAminoConverters; } }));\nObject.defineProperty(exports, \"defaultRegistryTypes\", ({ enumerable: true, get: function () { return signingstargateclient_1.defaultRegistryTypes; } }));\nObject.defineProperty(exports, \"SigningStargateClient\", ({ enumerable: true, get: function () { return signingstargateclient_1.SigningStargateClient; } }));\nvar stargateclient_1 = __webpack_require__(/*! ./stargateclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/stargateclient.js\");\nObject.defineProperty(exports, \"assertIsDeliverTxFailure\", ({ enumerable: true, get: function () { return stargateclient_1.assertIsDeliverTxFailure; } }));\nObject.defineProperty(exports, \"assertIsDeliverTxSuccess\", ({ enumerable: true, get: function () { return stargateclient_1.assertIsDeliverTxSuccess; } }));\nObject.defineProperty(exports, \"BroadcastTxError\", ({ enumerable: true, get: function () { return stargateclient_1.BroadcastTxError; } }));\nObject.defineProperty(exports, \"isDeliverTxFailure\", ({ enumerable: true, get: function () { return stargateclient_1.isDeliverTxFailure; } }));\nObject.defineProperty(exports, \"isDeliverTxSuccess\", ({ enumerable: true, get: function () { return stargateclient_1.isDeliverTxSuccess; } }));\nObject.defineProperty(exports, \"StargateClient\", ({ enumerable: true, get: function () { return stargateclient_1.StargateClient; } }));\nObject.defineProperty(exports, \"TimeoutError\", ({ enumerable: true, get: function () { return stargateclient_1.TimeoutError; } }));\nvar proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\nObject.defineProperty(exports, \"coin\", ({ enumerable: true, get: function () { return proto_signing_1.coin; } }));\nObject.defineProperty(exports, \"coins\", ({ enumerable: true, get: function () { return proto_signing_1.coins; } }));\nObject.defineProperty(exports, \"makeCosmoshubPath\", ({ enumerable: true, get: function () { return proto_signing_1.makeCosmoshubPath; } }));\nObject.defineProperty(exports, \"parseCoins\", ({ enumerable: true, get: function () { return proto_signing_1.parseCoins; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLEdBQUcsNkJBQTZCLEdBQUcsbUNBQW1DLEdBQUcsaUNBQWlDLEdBQUcsdUNBQXVDLEdBQUcsNkJBQTZCLEdBQUcsc0NBQXNDLEdBQUcsZ0NBQWdDLEdBQUcsaUNBQWlDLEdBQUcsd0NBQXdDLEdBQUcsa0RBQWtELEdBQUcsd0NBQXdDLEdBQUcsNkNBQTZDLEdBQUcseUNBQXlDLEdBQUcsOEJBQThCLEdBQUcsc0JBQXNCLEdBQUcsaUNBQWlDLEdBQUcsd0JBQXdCLEdBQUcsNEJBQTRCLEdBQUcsMEJBQTBCLEdBQUcsZ0NBQWdDLEdBQUcsZ0NBQWdDLEdBQUcsb0NBQW9DLEdBQUcsc0JBQXNCLEdBQUcsMkJBQTJCLEdBQUcsbUNBQW1DLEdBQUcsK0JBQStCLEdBQUcseUJBQXlCLEdBQUcsMEJBQTBCLEdBQUcsc0NBQXNDLEdBQUcsaUNBQWlDLEdBQUcsaUNBQWlDLEdBQUcsb0NBQW9DLEdBQUcsb0NBQW9DLEdBQUcscUNBQXFDLEdBQUcsZ0NBQWdDLEdBQUcsa0NBQWtDLEdBQUcsZ0NBQWdDLEdBQUcscUNBQXFDLEdBQUcscUNBQXFDLEdBQUcseUNBQXlDLEdBQUcsbUNBQW1DLEdBQUcsaUNBQWlDLEdBQUcsa0NBQWtDLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLG9CQUFvQixHQUFHLDJCQUEyQixHQUFHLGtCQUFrQixHQUFHLHNCQUFzQjtBQUM1c0Qsa0JBQWtCLEdBQUcseUJBQXlCLEdBQUcsYUFBYSxHQUFHLFlBQVksR0FBRyxvQkFBb0IsR0FBRyxzQkFBc0IsR0FBRywwQkFBMEIsR0FBRywwQkFBMEIsR0FBRyx3QkFBd0IsR0FBRyxnQ0FBZ0MsR0FBRyxnQ0FBZ0MsR0FBRyw2QkFBNkIsR0FBRyw0QkFBNEIsR0FBRyxvQ0FBb0MsR0FBRyw0QkFBNEIsR0FBRyxtQkFBbUIsR0FBRyxtQ0FBbUMsR0FBRywrQkFBK0IsR0FBRyx3QkFBd0IsR0FBRyw4QkFBOEIsR0FBRyx5QkFBeUIsR0FBRyx3QkFBd0IsR0FBRyw2QkFBNkIsR0FBRyw4QkFBOEIsR0FBRywwQkFBMEIsR0FBRyx5QkFBeUIsR0FBRyx5QkFBeUIsR0FBRyw4QkFBOEIsR0FBRyxrQ0FBa0MsR0FBRywwQkFBMEIsR0FBRywyQkFBMkIsR0FBRywwQkFBMEIsR0FBRyxnREFBZ0Q7QUFDcjlCLGlCQUFpQixtQkFBTyxDQUFDLDJFQUFZO0FBQ3JDLGtEQUFpRCxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM5SCxtQkFBbUIsbUJBQU8sQ0FBQywrRUFBYztBQUN6Qyw4Q0FBNkMsRUFBRSxxQ0FBcUMsbUNBQW1DLEVBQUM7QUFDeEgsZUFBZSxtQkFBTyxDQUFDLHVFQUFVO0FBQ2pDLHVEQUFzRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUN0SSxZQUFZLG1CQUFPLENBQUMsaUVBQU87QUFDM0IsZ0RBQStDLEVBQUUscUNBQXFDLDhCQUE4QixFQUFDO0FBQ3JILDRDQUEyQyxFQUFFLHFDQUFxQywwQkFBMEIsRUFBQztBQUM3RyxZQUFZLGdCQUFnQixtQkFBTyxDQUFDLG1FQUFRO0FBQzVDLGdCQUFnQixtQkFBTyxDQUFDLCtFQUFXO0FBQ25DLDhEQUE2RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNySiw2REFBNEQsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDbkosK0RBQThELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQ3ZKLHFFQUFvRSxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUNuSyxpRUFBZ0UsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDM0osaUVBQWdFLEVBQUUscUNBQXFDLG1EQUFtRCxFQUFDO0FBQzNKLDREQUEyRCxFQUFFLHFDQUFxQyw4Q0FBOEMsRUFBQztBQUNqSiw4REFBNkQsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDckosNERBQTJELEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ2pKLGlFQUFnRSxFQUFFLHFDQUFxQyxtREFBbUQsRUFBQztBQUMzSixnRUFBK0QsRUFBRSxxQ0FBcUMsa0RBQWtELEVBQUM7QUFDekosZ0VBQStELEVBQUUscUNBQXFDLGtEQUFrRCxFQUFDO0FBQ3pKLDZEQUE0RCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUNuSiw2REFBNEQsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDbkosa0VBQWlFLEVBQUUscUNBQXFDLG9EQUFvRCxFQUFDO0FBQzdKLHNEQUFxRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUNySSxxREFBb0QsRUFBRSxxQ0FBcUMsdUNBQXVDLEVBQUM7QUFDbkksMkRBQTBELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQy9JLCtEQUE4RCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUN2Six1REFBc0QsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdkksa0RBQWlELEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQzdILGdFQUErRCxFQUFFLHFDQUFxQyxrREFBa0QsRUFBQztBQUN6Siw0REFBMkQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDakosNERBQTJELEVBQUUscUNBQXFDLDhDQUE4QyxFQUFDO0FBQ2pKLHNEQUFxRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUNySSx3REFBdUQsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDekksb0RBQW1ELEVBQUUscUNBQXFDLHNDQUFzQyxFQUFDO0FBQ2pJLDZEQUE0RCxFQUFFLHFDQUFxQywrQ0FBK0MsRUFBQztBQUNuSixrREFBaUQsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDN0gsMERBQXlELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQzdJLHFFQUFvRSxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUNuSyx5RUFBd0UsRUFBRSxxQ0FBcUMsMkRBQTJELEVBQUM7QUFDM0ssb0VBQW1FLEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQ2pLLDhFQUE2RSxFQUFFLHFDQUFxQyxnRUFBZ0UsRUFBQztBQUNyTCxvRUFBbUUsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDakssNkRBQTRELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQ25KLDREQUEyRCxFQUFFLHFDQUFxQyw4Q0FBOEMsRUFBQztBQUNqSixrRUFBaUUsRUFBRSxxQ0FBcUMsb0RBQW9ELEVBQUM7QUFDN0oseURBQXdELEVBQUUscUNBQXFDLDJDQUEyQyxFQUFDO0FBQzNJLG1FQUFrRSxFQUFFLHFDQUFxQyxxREFBcUQsRUFBQztBQUMvSiw2REFBNEQsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDbkosK0RBQThELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQ3ZKLHlEQUF3RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUMzSSxpRUFBZ0UsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDM0osNEVBQTJFLEVBQUUscUNBQXFDLDhEQUE4RCxFQUFDO0FBQ2pMLHNEQUFxRCxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUNySSx1REFBc0QsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDdkksc0RBQXFELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ3JJLDhEQUE2RCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNySiwwREFBeUQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDN0kscURBQW9ELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ25JLHFEQUFvRCxFQUFFLHFDQUFxQyx1Q0FBdUMsRUFBQztBQUNuSSxzREFBcUQsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDckksMERBQXlELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQzdJLHlEQUF3RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUMzSSxvREFBbUQsRUFBRSxxQ0FBcUMsc0NBQXNDLEVBQUM7QUFDakksdUJBQXVCLG1CQUFPLENBQUMsdUZBQWtCO0FBQ2pELHFEQUFvRCxFQUFFLHFDQUFxQyw4Q0FBOEMsRUFBQztBQUMxSSwwREFBeUQsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDcEosb0JBQW9CLG1CQUFPLENBQUMsdUZBQWU7QUFDM0Msb0RBQW1ELEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQ3JJLDJEQUEwRCxFQUFFLHFDQUFxQyxpREFBaUQsRUFBQztBQUNuSiwrREFBOEQsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDM0osK0NBQThDLEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQzNILGVBQWUsbUJBQU8sQ0FBQyx1RUFBVTtBQUNqQyx3REFBdUQsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDeEksOEJBQThCLG1CQUFPLENBQUMscUdBQXlCO0FBQy9ELGdFQUErRCxFQUFFLHFDQUFxQyxnRUFBZ0UsRUFBQztBQUN2Syx3REFBdUQsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDdkoseURBQXdELEVBQUUscUNBQXFDLHlEQUF5RCxFQUFDO0FBQ3pKLHVCQUF1QixtQkFBTyxDQUFDLHVGQUFrQjtBQUNqRCw0REFBMkQsRUFBRSxxQ0FBcUMscURBQXFELEVBQUM7QUFDeEosNERBQTJELEVBQUUscUNBQXFDLHFEQUFxRCxFQUFDO0FBQ3hKLG9EQUFtRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN4SSxzREFBcUQsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDNUksc0RBQXFELEVBQUUscUNBQXFDLCtDQUErQyxFQUFDO0FBQzVJLGtEQUFpRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUNwSSxnREFBK0MsRUFBRSxxQ0FBcUMseUNBQXlDLEVBQUM7QUFDaEksc0JBQXNCLG1CQUFPLENBQUMsd0ZBQXVCO0FBQ3JELHdDQUF1QyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUMvRyx5Q0FBd0MsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDakgscURBQW9ELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3pJLDhDQUE2QyxFQUFFLHFDQUFxQyxzQ0FBc0MsRUFBQztBQUMzSCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9pbmRleC5qcz8wZDAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzTXNnVm90ZVdlaWdodGVkRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pc01zZ1ZvdGVFbmNvZGVPYmplY3QgPSBleHBvcnRzLmlzTXNnVW5kZWxlZ2F0ZUVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dUcmFuc2ZlckVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dTdWJtaXRQcm9wb3NhbEVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dTZW5kRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pc01zZ0VkaXRWYWxpZGF0b3JFbmNvZGVPYmplY3QgPSBleHBvcnRzLmlzTXNnRGVwb3NpdEVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dEZWxlZ2F0ZUVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dDcmVhdGVWYWxpZGF0b3JFbmNvZGVPYmplY3QgPSBleHBvcnRzLmlzTXNnQ2FuY2VsVW5ib25kaW5nRGVsZWdhdGlvbkVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dCZWdpblJlZGVsZWdhdGVFbmNvZGVPYmplY3QgPSBleHBvcnRzLmlzQW1pbm9Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb24gPSBleHBvcnRzLmlzQW1pbm9Nc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZCA9IGV4cG9ydHMuaXNBbWlub01zZ1ZvdGVXZWlnaHRlZCA9IGV4cG9ydHMuaXNBbWlub01zZ1ZvdGUgPSBleHBvcnRzLmlzQW1pbm9Nc2dWZXJpZnlJbnZhcmlhbnQgPSBleHBvcnRzLmlzQW1pbm9Nc2dVbmphaWwgPSBleHBvcnRzLmlzQW1pbm9Nc2dVbmRlbGVnYXRlID0gZXhwb3J0cy5pc0FtaW5vTXNnVHJhbnNmZXIgPSBleHBvcnRzLmlzQW1pbm9Nc2dTdWJtaXRQcm9wb3NhbCA9IGV4cG9ydHMuaXNBbWlub01zZ1N1Ym1pdEV2aWRlbmNlID0gZXhwb3J0cy5pc0FtaW5vTXNnU2V0V2l0aGRyYXdBZGRyZXNzID0gZXhwb3J0cy5pc0FtaW5vTXNnU2VuZCA9IGV4cG9ydHMuaXNBbWlub01zZ011bHRpU2VuZCA9IGV4cG9ydHMuaXNBbWlub01zZ0Z1bmRDb21tdW5pdHlQb29sID0gZXhwb3J0cy5pc0FtaW5vTXNnRWRpdFZhbGlkYXRvciA9IGV4cG9ydHMuaXNBbWlub01zZ0RlcG9zaXQgPSBleHBvcnRzLmlzQW1pbm9Nc2dEZWxlZ2F0ZSA9IGV4cG9ydHMuaXNBbWlub01zZ0NyZWF0ZVZlc3RpbmdBY2NvdW50ID0gZXhwb3J0cy5pc0FtaW5vTXNnQ3JlYXRlVmFsaWRhdG9yID0gZXhwb3J0cy5pc0FtaW5vTXNnQmVnaW5SZWRlbGVnYXRlID0gZXhwb3J0cy5jcmVhdGVWZXN0aW5nQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5jcmVhdGVTdGFraW5nQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5jcmVhdGVTbGFzaGluZ0FtaW5vQ29udmVydGVycyA9IGV4cG9ydHMuY3JlYXRlSWJjQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5jcmVhdGVHcm91cEFtaW5vQ29udmVydGVycyA9IGV4cG9ydHMuY3JlYXRlR292QW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5jcmVhdGVGZWVncmFudEFtaW5vQ29udmVydGVycyA9IGV4cG9ydHMuY3JlYXRlRXZpZGVuY2VBbWlub0NvbnZlcnRlcnMgPSBleHBvcnRzLmNyZWF0ZURpc3RyaWJ1dGlvbkFtaW5vQ29udmVydGVycyA9IGV4cG9ydHMuY3JlYXRlQ3J5c2lzQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5jcmVhdGVCYW5rQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5jcmVhdGVBdXRoekFtaW5vQ29udmVydGVycyA9IGV4cG9ydHMubG9ncyA9IGV4cG9ydHMuR2FzUHJpY2UgPSBleHBvcnRzLmNhbGN1bGF0ZUZlZSA9IGV4cG9ydHMuZnJvbVRlbmRlcm1pbnRFdmVudCA9IGV4cG9ydHMuQW1pbm9UeXBlcyA9IGV4cG9ydHMuYWNjb3VudEZyb21BbnkgPSB2b2lkIDA7XG5leHBvcnRzLnBhcnNlQ29pbnMgPSBleHBvcnRzLm1ha2VDb3Ntb3NodWJQYXRoID0gZXhwb3J0cy5jb2lucyA9IGV4cG9ydHMuY29pbiA9IGV4cG9ydHMuVGltZW91dEVycm9yID0gZXhwb3J0cy5TdGFyZ2F0ZUNsaWVudCA9IGV4cG9ydHMuaXNEZWxpdmVyVHhTdWNjZXNzID0gZXhwb3J0cy5pc0RlbGl2ZXJUeEZhaWx1cmUgPSBleHBvcnRzLkJyb2FkY2FzdFR4RXJyb3IgPSBleHBvcnRzLmFzc2VydElzRGVsaXZlclR4U3VjY2VzcyA9IGV4cG9ydHMuYXNzZXJ0SXNEZWxpdmVyVHhGYWlsdXJlID0gZXhwb3J0cy5TaWduaW5nU3RhcmdhdGVDbGllbnQgPSBleHBvcnRzLmRlZmF1bHRSZWdpc3RyeVR5cGVzID0gZXhwb3J0cy5jcmVhdGVEZWZhdWx0QW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5pc1NlYXJjaFR4UXVlcnlBcnJheSA9IGV4cG9ydHMuUXVlcnlDbGllbnQgPSBleHBvcnRzLmRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90byA9IGV4cG9ydHMuY3JlYXRlUHJvdG9idWZScGNDbGllbnQgPSBleHBvcnRzLmNyZWF0ZVBhZ2luYXRpb24gPSBleHBvcnRzLm1ha2VNdWx0aXNpZ25lZFR4Qnl0ZXMgPSBleHBvcnRzLm1ha2VNdWx0aXNpZ25lZFR4ID0gZXhwb3J0cy5zZXR1cFR4RXh0ZW5zaW9uID0gZXhwb3J0cy5zZXR1cFN0YWtpbmdFeHRlbnNpb24gPSBleHBvcnRzLnNldHVwU2xhc2hpbmdFeHRlbnNpb24gPSBleHBvcnRzLnNldHVwTWludEV4dGVuc2lvbiA9IGV4cG9ydHMuc2V0dXBJYmNFeHRlbnNpb24gPSBleHBvcnRzLnNldHVwR292RXh0ZW5zaW9uID0gZXhwb3J0cy5zZXR1cEZlZWdyYW50RXh0ZW5zaW9uID0gZXhwb3J0cy5zZXR1cERpc3RyaWJ1dGlvbkV4dGVuc2lvbiA9IGV4cG9ydHMuc2V0dXBCYW5rRXh0ZW5zaW9uID0gZXhwb3J0cy5zZXR1cEF1dGh6RXh0ZW5zaW9uID0gZXhwb3J0cy5zZXR1cEF1dGhFeHRlbnNpb24gPSBleHBvcnRzLmlzTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmRFbmNvZGVPYmplY3QgPSB2b2lkIDA7XG52YXIgYWNjb3VudHNfMSA9IHJlcXVpcmUoXCIuL2FjY291bnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYWNjb3VudEZyb21BbnlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFjY291bnRzXzEuYWNjb3VudEZyb21Bbnk7IH0gfSk7XG52YXIgYW1pbm90eXBlc18xID0gcmVxdWlyZShcIi4vYW1pbm90eXBlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFtaW5vVHlwZXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFtaW5vdHlwZXNfMS5BbWlub1R5cGVzOyB9IH0pO1xudmFyIGV2ZW50c18xID0gcmVxdWlyZShcIi4vZXZlbnRzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZnJvbVRlbmRlcm1pbnRFdmVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZXZlbnRzXzEuZnJvbVRlbmRlcm1pbnRFdmVudDsgfSB9KTtcbnZhciBmZWVfMSA9IHJlcXVpcmUoXCIuL2ZlZVwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNhbGN1bGF0ZUZlZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmVlXzEuY2FsY3VsYXRlRmVlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiR2FzUHJpY2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZlZV8xLkdhc1ByaWNlOyB9IH0pO1xuZXhwb3J0cy5sb2dzID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCIuL2xvZ3NcIikpO1xudmFyIG1vZHVsZXNfMSA9IHJlcXVpcmUoXCIuL21vZHVsZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVBdXRoekFtaW5vQ29udmVydGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmNyZWF0ZUF1dGh6QW1pbm9Db252ZXJ0ZXJzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlQmFua0FtaW5vQ29udmVydGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmNyZWF0ZUJhbmtBbWlub0NvbnZlcnRlcnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVDcnlzaXNBbWlub0NvbnZlcnRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5jcmVhdGVDcnlzaXNBbWlub0NvbnZlcnRlcnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVEaXN0cmlidXRpb25BbWlub0NvbnZlcnRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5jcmVhdGVEaXN0cmlidXRpb25BbWlub0NvbnZlcnRlcnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVFdmlkZW5jZUFtaW5vQ29udmVydGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmNyZWF0ZUV2aWRlbmNlQW1pbm9Db252ZXJ0ZXJzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlRmVlZ3JhbnRBbWlub0NvbnZlcnRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5jcmVhdGVGZWVncmFudEFtaW5vQ29udmVydGVyczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUdvdkFtaW5vQ29udmVydGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmNyZWF0ZUdvdkFtaW5vQ29udmVydGVyczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZUdyb3VwQW1pbm9Db252ZXJ0ZXJzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuY3JlYXRlR3JvdXBBbWlub0NvbnZlcnRlcnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVJYmNBbWlub0NvbnZlcnRlcnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5jcmVhdGVJYmNBbWlub0NvbnZlcnRlcnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVTbGFzaGluZ0FtaW5vQ29udmVydGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmNyZWF0ZVNsYXNoaW5nQW1pbm9Db252ZXJ0ZXJzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlU3Rha2luZ0FtaW5vQ29udmVydGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmNyZWF0ZVN0YWtpbmdBbWlub0NvbnZlcnRlcnM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVWZXN0aW5nQW1pbm9Db252ZXJ0ZXJzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuY3JlYXRlVmVzdGluZ0FtaW5vQ29udmVydGVyczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQW1pbm9Nc2dCZWdpblJlZGVsZWdhdGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnQmVnaW5SZWRlbGVnYXRlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ0NyZWF0ZVZhbGlkYXRvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzQW1pbm9Nc2dDcmVhdGVWYWxpZGF0b3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0FtaW5vTXNnQ3JlYXRlVmVzdGluZ0FjY291bnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnQ3JlYXRlVmVzdGluZ0FjY291bnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0FtaW5vTXNnRGVsZWdhdGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnRGVsZWdhdGU7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0FtaW5vTXNnRGVwb3NpdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzQW1pbm9Nc2dEZXBvc2l0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ0VkaXRWYWxpZGF0b3JcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnRWRpdFZhbGlkYXRvcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQW1pbm9Nc2dGdW5kQ29tbXVuaXR5UG9vbFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzQW1pbm9Nc2dGdW5kQ29tbXVuaXR5UG9vbDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQW1pbm9Nc2dNdWx0aVNlbmRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnTXVsdGlTZW5kOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1NlbmRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnU2VuZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQW1pbm9Nc2dTZXRXaXRoZHJhd0FkZHJlc3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnU2V0V2l0aGRyYXdBZGRyZXNzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1N1Ym1pdEV2aWRlbmNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNBbWlub01zZ1N1Ym1pdEV2aWRlbmNlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1N1Ym1pdFByb3Bvc2FsXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNBbWlub01zZ1N1Ym1pdFByb3Bvc2FsOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1RyYW5zZmVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNBbWlub01zZ1RyYW5zZmVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1VuZGVsZWdhdGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnVW5kZWxlZ2F0ZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQW1pbm9Nc2dVbmphaWxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnVW5qYWlsOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1ZlcmlmeUludmFyaWFudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzQW1pbm9Nc2dWZXJpZnlJbnZhcmlhbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0FtaW5vTXNnVm90ZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzQW1pbm9Nc2dWb3RlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNBbWlub01zZ1ZvdGVXZWlnaHRlZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzQW1pbm9Nc2dWb3RlV2VpZ2h0ZWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0FtaW5vTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc0FtaW5vTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0FtaW5vTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNBbWlub01zZ1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzTXNnQmVnaW5SZWRlbGVnYXRlRW5jb2RlT2JqZWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNNc2dCZWdpblJlZGVsZWdhdGVFbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc01zZ0NhbmNlbFVuYm9uZGluZ0RlbGVnYXRpb25FbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ0NhbmNlbFVuYm9uZGluZ0RlbGVnYXRpb25FbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc01zZ0NyZWF0ZVZhbGlkYXRvckVuY29kZU9iamVjdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzTXNnQ3JlYXRlVmFsaWRhdG9yRW5jb2RlT2JqZWN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNNc2dEZWxlZ2F0ZUVuY29kZU9iamVjdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLmlzTXNnRGVsZWdhdGVFbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc01zZ0RlcG9zaXRFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ0RlcG9zaXRFbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc01zZ0VkaXRWYWxpZGF0b3JFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ0VkaXRWYWxpZGF0b3JFbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc01zZ1NlbmRFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ1NlbmRFbmNvZGVPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc01zZ1N1Ym1pdFByb3Bvc2FsRW5jb2RlT2JqZWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNNc2dTdWJtaXRQcm9wb3NhbEVuY29kZU9iamVjdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzTXNnVHJhbnNmZXJFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ1RyYW5zZmVyRW5jb2RlT2JqZWN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNNc2dVbmRlbGVnYXRlRW5jb2RlT2JqZWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNNc2dVbmRlbGVnYXRlRW5jb2RlT2JqZWN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNNc2dWb3RlRW5jb2RlT2JqZWN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuaXNNc2dWb3RlRW5jb2RlT2JqZWN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNNc2dWb3RlV2VpZ2h0ZWRFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ1ZvdGVXZWlnaHRlZEVuY29kZU9iamVjdDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmRFbmNvZGVPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5pc01zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkRW5jb2RlT2JqZWN0OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2V0dXBBdXRoRXh0ZW5zaW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuc2V0dXBBdXRoRXh0ZW5zaW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2V0dXBBdXRoekV4dGVuc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLnNldHVwQXV0aHpFeHRlbnNpb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzZXR1cEJhbmtFeHRlbnNpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5zZXR1cEJhbmtFeHRlbnNpb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzZXR1cERpc3RyaWJ1dGlvbkV4dGVuc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLnNldHVwRGlzdHJpYnV0aW9uRXh0ZW5zaW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2V0dXBGZWVncmFudEV4dGVuc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLnNldHVwRmVlZ3JhbnRFeHRlbnNpb247IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJzZXR1cEdvdkV4dGVuc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLnNldHVwR292RXh0ZW5zaW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2V0dXBJYmNFeHRlbnNpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5zZXR1cEliY0V4dGVuc2lvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNldHVwTWludEV4dGVuc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLnNldHVwTWludEV4dGVuc2lvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNldHVwU2xhc2hpbmdFeHRlbnNpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG1vZHVsZXNfMS5zZXR1cFNsYXNoaW5nRXh0ZW5zaW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2V0dXBTdGFraW5nRXh0ZW5zaW9uXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtb2R1bGVzXzEuc2V0dXBTdGFraW5nRXh0ZW5zaW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwic2V0dXBUeEV4dGVuc2lvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gbW9kdWxlc18xLnNldHVwVHhFeHRlbnNpb247IH0gfSk7XG52YXIgbXVsdGlzaWduYXR1cmVfMSA9IHJlcXVpcmUoXCIuL211bHRpc2lnbmF0dXJlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibWFrZU11bHRpc2lnbmVkVHhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIG11bHRpc2lnbmF0dXJlXzEubWFrZU11bHRpc2lnbmVkVHg7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJtYWtlTXVsdGlzaWduZWRUeEJ5dGVzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBtdWx0aXNpZ25hdHVyZV8xLm1ha2VNdWx0aXNpZ25lZFR4Qnl0ZXM7IH0gfSk7XG52YXIgcXVlcnljbGllbnRfMSA9IHJlcXVpcmUoXCIuL3F1ZXJ5Y2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlUGFnaW5hdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY3JlYXRlUHJvdG9idWZScGNDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUHJvdG9idWZScGNDbGllbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWNvZGVDb3Ntb3NTZGtEZWNGcm9tUHJvdG9cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHF1ZXJ5Y2xpZW50XzEuZGVjb2RlQ29zbW9zU2RrRGVjRnJvbVByb3RvOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUXVlcnlDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHF1ZXJ5Y2xpZW50XzEuUXVlcnlDbGllbnQ7IH0gfSk7XG52YXIgc2VhcmNoXzEgPSByZXF1aXJlKFwiLi9zZWFyY2hcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1NlYXJjaFR4UXVlcnlBcnJheVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc2VhcmNoXzEuaXNTZWFyY2hUeFF1ZXJ5QXJyYXk7IH0gfSk7XG52YXIgc2lnbmluZ3N0YXJnYXRlY2xpZW50XzEgPSByZXF1aXJlKFwiLi9zaWduaW5nc3RhcmdhdGVjbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjcmVhdGVEZWZhdWx0QW1pbm9Db252ZXJ0ZXJzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduaW5nc3RhcmdhdGVjbGllbnRfMS5jcmVhdGVEZWZhdWx0QW1pbm9Db252ZXJ0ZXJzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVmYXVsdFJlZ2lzdHJ5VHlwZXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHNpZ25pbmdzdGFyZ2F0ZWNsaWVudF8xLmRlZmF1bHRSZWdpc3RyeVR5cGVzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU2lnbmluZ1N0YXJnYXRlQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzaWduaW5nc3RhcmdhdGVjbGllbnRfMS5TaWduaW5nU3RhcmdhdGVDbGllbnQ7IH0gfSk7XG52YXIgc3RhcmdhdGVjbGllbnRfMSA9IHJlcXVpcmUoXCIuL3N0YXJnYXRlY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXNzZXJ0SXNEZWxpdmVyVHhGYWlsdXJlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdGFyZ2F0ZWNsaWVudF8xLmFzc2VydElzRGVsaXZlclR4RmFpbHVyZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImFzc2VydElzRGVsaXZlclR4U3VjY2Vzc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gc3RhcmdhdGVjbGllbnRfMS5hc3NlcnRJc0RlbGl2ZXJUeFN1Y2Nlc3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCcm9hZGNhc3RUeEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdGFyZ2F0ZWNsaWVudF8xLkJyb2FkY2FzdFR4RXJyb3I7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0RlbGl2ZXJUeEZhaWx1cmVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHN0YXJnYXRlY2xpZW50XzEuaXNEZWxpdmVyVHhGYWlsdXJlOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiaXNEZWxpdmVyVHhTdWNjZXNzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdGFyZ2F0ZWNsaWVudF8xLmlzRGVsaXZlclR4U3VjY2VzczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlN0YXJnYXRlQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdGFyZ2F0ZWNsaWVudF8xLlN0YXJnYXRlQ2xpZW50OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGltZW91dEVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzdGFyZ2F0ZWNsaWVudF8xLlRpbWVvdXRFcnJvcjsgfSB9KTtcbnZhciBwcm90b19zaWduaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9wcm90by1zaWduaW5nXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiY29pblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvdG9fc2lnbmluZ18xLmNvaW47IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjb2luc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvdG9fc2lnbmluZ18xLmNvaW5zOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwibWFrZUNvc21vc2h1YlBhdGhcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3RvX3NpZ25pbmdfMS5tYWtlQ29zbW9zaHViUGF0aDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInBhcnNlQ29pbnNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb3RvX3NpZ25pbmdfMS5wYXJzZUNvaW5zOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/logs.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/logs.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.findAttribute = exports.parseRawLog = exports.parseLogs = exports.parseLog = exports.parseEvent = exports.parseAttribute = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nfunction parseAttribute(input) {\n    if (!(0, utils_1.isNonNullObject)(input))\n        throw new Error(\"Attribute must be a non-null object\");\n    const { key, value } = input;\n    if (typeof key !== \"string\" || !key)\n        throw new Error(\"Attribute's key must be a non-empty string\");\n    if (typeof value !== \"string\" && typeof value !== \"undefined\") {\n        throw new Error(\"Attribute's value must be a string or unset\");\n    }\n    return {\n        key: key,\n        value: value || \"\",\n    };\n}\nexports.parseAttribute = parseAttribute;\nfunction parseEvent(input) {\n    if (!(0, utils_1.isNonNullObject)(input))\n        throw new Error(\"Event must be a non-null object\");\n    const { type, attributes } = input;\n    if (typeof type !== \"string\" || type === \"\") {\n        throw new Error(`Event type must be a non-empty string`);\n    }\n    if (!Array.isArray(attributes))\n        throw new Error(\"Event's attributes must be an array\");\n    return {\n        type: type,\n        attributes: attributes.map(parseAttribute),\n    };\n}\nexports.parseEvent = parseEvent;\nfunction parseLog(input) {\n    if (!(0, utils_1.isNonNullObject)(input))\n        throw new Error(\"Log must be a non-null object\");\n    const { msg_index, log, events } = input;\n    if (typeof msg_index !== \"number\")\n        throw new Error(\"Log's msg_index must be a number\");\n    if (typeof log !== \"string\")\n        throw new Error(\"Log's log must be a string\");\n    if (!Array.isArray(events))\n        throw new Error(\"Log's events must be an array\");\n    return {\n        msg_index: msg_index,\n        log: log,\n        events: events.map(parseEvent),\n    };\n}\nexports.parseLog = parseLog;\nfunction parseLogs(input) {\n    if (!Array.isArray(input))\n        throw new Error(\"Logs must be an array\");\n    return input.map(parseLog);\n}\nexports.parseLogs = parseLogs;\nfunction parseRawLog(input) {\n    // Cosmos SDK >= 0.50 gives us an empty string here. This should be handled like undefined.\n    if (!input)\n        return [];\n    const logsToParse = JSON.parse(input).map(({ events }, i) => ({\n        msg_index: i,\n        events,\n        log: \"\",\n    }));\n    return parseLogs(logsToParse);\n}\nexports.parseRawLog = parseRawLog;\n/**\n * Searches in logs for the first event of the given event type and in that event\n * for the first first attribute with the given attribute key.\n *\n * Throws if the attribute was not found.\n */\nfunction findAttribute(logs, eventType, attrKey) {\n    const firstLogs = logs.find(() => true);\n    const out = firstLogs?.events\n        .find((event) => event.type === eventType)\n        ?.attributes.find((attr) => attr.key === attrKey);\n    if (!out) {\n        throw new Error(`Could not find attribute '${attrKey}' in first event of type '${eventType}' in first log.`);\n    }\n    return out;\n}\nexports.findAttribute = findAttribute;\n//# sourceMappingURL=logs.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9sb2dzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLG1CQUFtQixHQUFHLGlCQUFpQixHQUFHLGdCQUFnQixHQUFHLGtCQUFrQixHQUFHLHNCQUFzQjtBQUNoSTtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLFlBQVksYUFBYTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1CQUFtQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQSxZQUFZLHlCQUF5QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxRQUFRO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxRQUFRLDRCQUE0QixVQUFVO0FBQ25HO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9sb2dzLmpzP2ZiY2EiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZpbmRBdHRyaWJ1dGUgPSBleHBvcnRzLnBhcnNlUmF3TG9nID0gZXhwb3J0cy5wYXJzZUxvZ3MgPSBleHBvcnRzLnBhcnNlTG9nID0gZXhwb3J0cy5wYXJzZUV2ZW50ID0gZXhwb3J0cy5wYXJzZUF0dHJpYnV0ZSA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAY29zbWpzL3V0aWxzXCIpO1xuZnVuY3Rpb24gcGFyc2VBdHRyaWJ1dGUoaW5wdXQpIHtcbiAgICBpZiAoISgwLCB1dGlsc18xLmlzTm9uTnVsbE9iamVjdCkoaW5wdXQpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRyaWJ1dGUgbXVzdCBiZSBhIG5vbi1udWxsIG9iamVjdFwiKTtcbiAgICBjb25zdCB7IGtleSwgdmFsdWUgfSA9IGlucHV0O1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSBcInN0cmluZ1wiIHx8ICFrZXkpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkF0dHJpYnV0ZSdzIGtleSBtdXN0IGJlIGEgbm9uLWVtcHR5IHN0cmluZ1wiKTtcbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSBcInN0cmluZ1wiICYmIHR5cGVvZiB2YWx1ZSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJBdHRyaWJ1dGUncyB2YWx1ZSBtdXN0IGJlIGEgc3RyaW5nIG9yIHVuc2V0XCIpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgdmFsdWU6IHZhbHVlIHx8IFwiXCIsXG4gICAgfTtcbn1cbmV4cG9ydHMucGFyc2VBdHRyaWJ1dGUgPSBwYXJzZUF0dHJpYnV0ZTtcbmZ1bmN0aW9uIHBhcnNlRXZlbnQoaW5wdXQpIHtcbiAgICBpZiAoISgwLCB1dGlsc18xLmlzTm9uTnVsbE9iamVjdCkoaW5wdXQpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFdmVudCBtdXN0IGJlIGEgbm9uLW51bGwgb2JqZWN0XCIpO1xuICAgIGNvbnN0IHsgdHlwZSwgYXR0cmlidXRlcyB9ID0gaW5wdXQ7XG4gICAgaWYgKHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiIHx8IHR5cGUgPT09IFwiXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFdmVudCB0eXBlIG11c3QgYmUgYSBub24tZW1wdHkgc3RyaW5nYCk7XG4gICAgfVxuICAgIGlmICghQXJyYXkuaXNBcnJheShhdHRyaWJ1dGVzKSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRXZlbnQncyBhdHRyaWJ1dGVzIG11c3QgYmUgYW4gYXJyYXlcIik7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogdHlwZSxcbiAgICAgICAgYXR0cmlidXRlczogYXR0cmlidXRlcy5tYXAocGFyc2VBdHRyaWJ1dGUpLFxuICAgIH07XG59XG5leHBvcnRzLnBhcnNlRXZlbnQgPSBwYXJzZUV2ZW50O1xuZnVuY3Rpb24gcGFyc2VMb2coaW5wdXQpIHtcbiAgICBpZiAoISgwLCB1dGlsc18xLmlzTm9uTnVsbE9iamVjdCkoaW5wdXQpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb2cgbXVzdCBiZSBhIG5vbi1udWxsIG9iamVjdFwiKTtcbiAgICBjb25zdCB7IG1zZ19pbmRleCwgbG9nLCBldmVudHMgfSA9IGlucHV0O1xuICAgIGlmICh0eXBlb2YgbXNnX2luZGV4ICE9PSBcIm51bWJlclwiKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb2cncyBtc2dfaW5kZXggbXVzdCBiZSBhIG51bWJlclwiKTtcbiAgICBpZiAodHlwZW9mIGxvZyAhPT0gXCJzdHJpbmdcIilcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTG9nJ3MgbG9nIG11c3QgYmUgYSBzdHJpbmdcIik7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGV2ZW50cykpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkxvZydzIGV2ZW50cyBtdXN0IGJlIGFuIGFycmF5XCIpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG1zZ19pbmRleDogbXNnX2luZGV4LFxuICAgICAgICBsb2c6IGxvZyxcbiAgICAgICAgZXZlbnRzOiBldmVudHMubWFwKHBhcnNlRXZlbnQpLFxuICAgIH07XG59XG5leHBvcnRzLnBhcnNlTG9nID0gcGFyc2VMb2c7XG5mdW5jdGlvbiBwYXJzZUxvZ3MoaW5wdXQpIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXQpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMb2dzIG11c3QgYmUgYW4gYXJyYXlcIik7XG4gICAgcmV0dXJuIGlucHV0Lm1hcChwYXJzZUxvZyk7XG59XG5leHBvcnRzLnBhcnNlTG9ncyA9IHBhcnNlTG9ncztcbmZ1bmN0aW9uIHBhcnNlUmF3TG9nKGlucHV0KSB7XG4gICAgLy8gQ29zbW9zIFNESyA+PSAwLjUwIGdpdmVzIHVzIGFuIGVtcHR5IHN0cmluZyBoZXJlLiBUaGlzIHNob3VsZCBiZSBoYW5kbGVkIGxpa2UgdW5kZWZpbmVkLlxuICAgIGlmICghaW5wdXQpXG4gICAgICAgIHJldHVybiBbXTtcbiAgICBjb25zdCBsb2dzVG9QYXJzZSA9IEpTT04ucGFyc2UoaW5wdXQpLm1hcCgoeyBldmVudHMgfSwgaSkgPT4gKHtcbiAgICAgICAgbXNnX2luZGV4OiBpLFxuICAgICAgICBldmVudHMsXG4gICAgICAgIGxvZzogXCJcIixcbiAgICB9KSk7XG4gICAgcmV0dXJuIHBhcnNlTG9ncyhsb2dzVG9QYXJzZSk7XG59XG5leHBvcnRzLnBhcnNlUmF3TG9nID0gcGFyc2VSYXdMb2c7XG4vKipcbiAqIFNlYXJjaGVzIGluIGxvZ3MgZm9yIHRoZSBmaXJzdCBldmVudCBvZiB0aGUgZ2l2ZW4gZXZlbnQgdHlwZSBhbmQgaW4gdGhhdCBldmVudFxuICogZm9yIHRoZSBmaXJzdCBmaXJzdCBhdHRyaWJ1dGUgd2l0aCB0aGUgZ2l2ZW4gYXR0cmlidXRlIGtleS5cbiAqXG4gKiBUaHJvd3MgaWYgdGhlIGF0dHJpYnV0ZSB3YXMgbm90IGZvdW5kLlxuICovXG5mdW5jdGlvbiBmaW5kQXR0cmlidXRlKGxvZ3MsIGV2ZW50VHlwZSwgYXR0cktleSkge1xuICAgIGNvbnN0IGZpcnN0TG9ncyA9IGxvZ3MuZmluZCgoKSA9PiB0cnVlKTtcbiAgICBjb25zdCBvdXQgPSBmaXJzdExvZ3M/LmV2ZW50c1xuICAgICAgICAuZmluZCgoZXZlbnQpID0+IGV2ZW50LnR5cGUgPT09IGV2ZW50VHlwZSlcbiAgICAgICAgPy5hdHRyaWJ1dGVzLmZpbmQoKGF0dHIpID0+IGF0dHIua2V5ID09PSBhdHRyS2V5KTtcbiAgICBpZiAoIW91dCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBmaW5kIGF0dHJpYnV0ZSAnJHthdHRyS2V5fScgaW4gZmlyc3QgZXZlbnQgb2YgdHlwZSAnJHtldmVudFR5cGV9JyBpbiBmaXJzdCBsb2cuYCk7XG4gICAgfVxuICAgIHJldHVybiBvdXQ7XG59XG5leHBvcnRzLmZpbmRBdHRyaWJ1dGUgPSBmaW5kQXR0cmlidXRlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bG9ncy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/logs.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/auth/queries.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/auth/queries.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupAuthExtension = void 0;\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/auth/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/auth/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupAuthExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        auth: {\n            account: async (address) => {\n                const { account } = await queryService.Account({ address: address });\n                return account ?? null;\n            },\n        },\n    };\n}\nexports.setupAuthExtension = setupAuthExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2F1dGgvcXVlcmllcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsZ0JBQWdCLG1CQUFPLENBQUMsOEdBQXdDO0FBQ2hFLHNCQUFzQixtQkFBTyxDQUFDLDJGQUFtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFVBQVUsK0JBQStCLGtCQUFrQjtBQUNuRjtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2F1dGgvcXVlcmllcy5qcz9iOWNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zZXR1cEF1dGhFeHRlbnNpb24gPSB2b2lkIDA7XG5jb25zdCBxdWVyeV8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvYXV0aC92MWJldGExL3F1ZXJ5XCIpO1xuY29uc3QgcXVlcnljbGllbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi9xdWVyeWNsaWVudFwiKTtcbmZ1bmN0aW9uIHNldHVwQXV0aEV4dGVuc2lvbihiYXNlKSB7XG4gICAgY29uc3QgcnBjID0gKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUHJvdG9idWZScGNDbGllbnQpKGJhc2UpO1xuICAgIC8vIFVzZSB0aGlzIHNlcnZpY2UgdG8gZ2V0IGVhc3kgdHlwZWQgYWNjZXNzIHRvIHF1ZXJ5IG1ldGhvZHNcbiAgICAvLyBUaGlzIGNhbm5vdCBiZSB1c2VkIGZvciBwcm9vZiB2ZXJpZmljYXRpb25cbiAgICBjb25zdCBxdWVyeVNlcnZpY2UgPSBuZXcgcXVlcnlfMS5RdWVyeUNsaWVudEltcGwocnBjKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBhdXRoOiB7XG4gICAgICAgICAgICBhY2NvdW50OiBhc3luYyAoYWRkcmVzcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYWNjb3VudCB9ID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkFjY291bnQoeyBhZGRyZXNzOiBhZGRyZXNzIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBhY2NvdW50ID8/IG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnNldHVwQXV0aEV4dGVuc2lvbiA9IHNldHVwQXV0aEV4dGVuc2lvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXF1ZXJpZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/auth/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createAuthzAminoConverters = void 0;\nfunction createAuthzAminoConverters() {\n    return {\n    // For Cosmos SDK < 0.46 the Amino JSON codec was broken on chain and thus inaccessible.\n    // Now this can be implemented for 0.46+ chains, see\n    // https://github.com/cosmos/cosmjs/issues/1092\n    //\n    // \"/cosmos.authz.v1beta1.MsgGrant\": IMPLEMENT ME,\n    // \"/cosmos.authz.v1beta1.MsgExec\": IMPLEMENT ME,\n    // \"/cosmos.authz.v1beta1.MsgRevoke\": IMPLEMENT ME,\n    };\n}\nexports.createAuthzAminoConverters = createAuthzAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2F1dGh6L2FtaW5vbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0M7QUFDbEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9hdXRoei9hbWlub21lc3NhZ2VzLmpzPzJhOGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUF1dGh6QW1pbm9Db252ZXJ0ZXJzID0gdm9pZCAwO1xuZnVuY3Rpb24gY3JlYXRlQXV0aHpBbWlub0NvbnZlcnRlcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAvLyBGb3IgQ29zbW9zIFNESyA8IDAuNDYgdGhlIEFtaW5vIEpTT04gY29kZWMgd2FzIGJyb2tlbiBvbiBjaGFpbiBhbmQgdGh1cyBpbmFjY2Vzc2libGUuXG4gICAgLy8gTm93IHRoaXMgY2FuIGJlIGltcGxlbWVudGVkIGZvciAwLjQ2KyBjaGFpbnMsIHNlZVxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbWpzL2lzc3Vlcy8xMDkyXG4gICAgLy9cbiAgICAvLyBcIi9jb3Ntb3MuYXV0aHoudjFiZXRhMS5Nc2dHcmFudFwiOiBJTVBMRU1FTlQgTUUsXG4gICAgLy8gXCIvY29zbW9zLmF1dGh6LnYxYmV0YTEuTXNnRXhlY1wiOiBJTVBMRU1FTlQgTUUsXG4gICAgLy8gXCIvY29zbW9zLmF1dGh6LnYxYmV0YTEuTXNnUmV2b2tlXCI6IElNUExFTUVOVCBNRSxcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVBdXRoekFtaW5vQ29udmVydGVycyA9IGNyZWF0ZUF1dGh6QW1pbm9Db252ZXJ0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW1pbm9tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/messages.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/authz/messages.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.authzTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/authz/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/authz/v1beta1/tx.js\");\nexports.authzTypes = [\n    [\"/cosmos.authz.v1beta1.MsgExec\", tx_1.MsgExec],\n    [\"/cosmos.authz.v1beta1.MsgGrant\", tx_1.MsgGrant],\n    [\"/cosmos.authz.v1beta1.MsgRevoke\", tx_1.MsgRevoke],\n];\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2F1dGh6L21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixhQUFhLG1CQUFPLENBQUMsMEdBQXNDO0FBQzNELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvYXV0aHovbWVzc2FnZXMuanM/M2FmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYXV0aHpUeXBlcyA9IHZvaWQgMDtcbmNvbnN0IHR4XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9hdXRoei92MWJldGExL3R4XCIpO1xuZXhwb3J0cy5hdXRoelR5cGVzID0gW1xuICAgIFtcIi9jb3Ntb3MuYXV0aHoudjFiZXRhMS5Nc2dFeGVjXCIsIHR4XzEuTXNnRXhlY10sXG4gICAgW1wiL2Nvc21vcy5hdXRoei52MWJldGExLk1zZ0dyYW50XCIsIHR4XzEuTXNnR3JhbnRdLFxuICAgIFtcIi9jb3Ntb3MuYXV0aHoudjFiZXRhMS5Nc2dSZXZva2VcIiwgdHhfMS5Nc2dSZXZva2VdLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/queries.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/authz/queries.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupAuthzExtension = void 0;\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/authz/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/authz/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupAuthzExtension(base) {\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        authz: {\n            grants: async (granter, grantee, msgTypeUrl, paginationKey) => {\n                return await queryService.Grants({\n                    granter: granter,\n                    grantee: grantee,\n                    msgTypeUrl: msgTypeUrl,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n            },\n            granteeGrants: async (grantee, paginationKey) => {\n                return await queryService.GranteeGrants({\n                    grantee: grantee,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n            },\n            granterGrants: async (granter, paginationKey) => {\n                return await queryService.GranterGrants({\n                    granter: granter,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n            },\n        },\n    };\n}\nexports.setupAuthzExtension = setupAuthzExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2F1dGh6L3F1ZXJpZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCO0FBQzNCLGdCQUFnQixtQkFBTyxDQUFDLGdIQUF5QztBQUNqRSxzQkFBc0IsbUJBQU8sQ0FBQywyRkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9hdXRoei9xdWVyaWVzLmpzP2E2MjQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldHVwQXV0aHpFeHRlbnNpb24gPSB2b2lkIDA7XG5jb25zdCBxdWVyeV8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvYXV0aHovdjFiZXRhMS9xdWVyeVwiKTtcbmNvbnN0IHF1ZXJ5Y2xpZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnljbGllbnRcIik7XG5mdW5jdGlvbiBzZXR1cEF1dGh6RXh0ZW5zaW9uKGJhc2UpIHtcbiAgICAvLyBVc2UgdGhpcyBzZXJ2aWNlIHRvIGdldCBlYXN5IHR5cGVkIGFjY2VzcyB0byBxdWVyeSBtZXRob2RzXG4gICAgLy8gVGhpcyBjYW5ub3QgYmUgdXNlZCBmb3IgcHJvb2YgdmVyaWZpY2F0aW9uXG4gICAgY29uc3QgcnBjID0gKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUHJvdG9idWZScGNDbGllbnQpKGJhc2UpO1xuICAgIGNvbnN0IHF1ZXJ5U2VydmljZSA9IG5ldyBxdWVyeV8xLlF1ZXJ5Q2xpZW50SW1wbChycGMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIGF1dGh6OiB7XG4gICAgICAgICAgICBncmFudHM6IGFzeW5jIChncmFudGVyLCBncmFudGVlLCBtc2dUeXBlVXJsLCBwYWdpbmF0aW9uS2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHF1ZXJ5U2VydmljZS5HcmFudHMoe1xuICAgICAgICAgICAgICAgICAgICBncmFudGVyOiBncmFudGVyLFxuICAgICAgICAgICAgICAgICAgICBncmFudGVlOiBncmFudGVlLFxuICAgICAgICAgICAgICAgICAgICBtc2dUeXBlVXJsOiBtc2dUeXBlVXJsLFxuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBncmFudGVlR3JhbnRzOiBhc3luYyAoZ3JhbnRlZSwgcGFnaW5hdGlvbktleSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBxdWVyeVNlcnZpY2UuR3JhbnRlZUdyYW50cyh7XG4gICAgICAgICAgICAgICAgICAgIGdyYW50ZWU6IGdyYW50ZWUsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVBhZ2luYXRpb24pKHBhZ2luYXRpb25LZXkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdyYW50ZXJHcmFudHM6IGFzeW5jIChncmFudGVyLCBwYWdpbmF0aW9uS2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IHF1ZXJ5U2VydmljZS5HcmFudGVyR3JhbnRzKHtcbiAgICAgICAgICAgICAgICAgICAgZ3JhbnRlcjogZ3JhbnRlcixcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnNldHVwQXV0aHpFeHRlbnNpb24gPSBzZXR1cEF1dGh6RXh0ZW5zaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createBankAminoConverters = exports.isAminoMsgMultiSend = exports.isAminoMsgSend = void 0;\nfunction isAminoMsgSend(msg) {\n    return msg.type === \"cosmos-sdk/MsgSend\";\n}\nexports.isAminoMsgSend = isAminoMsgSend;\nfunction isAminoMsgMultiSend(msg) {\n    return msg.type === \"cosmos-sdk/MsgMultiSend\";\n}\nexports.isAminoMsgMultiSend = isAminoMsgMultiSend;\nfunction createBankAminoConverters() {\n    return {\n        \"/cosmos.bank.v1beta1.MsgSend\": {\n            aminoType: \"cosmos-sdk/MsgSend\",\n            toAmino: ({ fromAddress, toAddress, amount }) => ({\n                from_address: fromAddress,\n                to_address: toAddress,\n                amount: [...amount],\n            }),\n            fromAmino: ({ from_address, to_address, amount }) => ({\n                fromAddress: from_address,\n                toAddress: to_address,\n                amount: [...amount],\n            }),\n        },\n        \"/cosmos.bank.v1beta1.MsgMultiSend\": {\n            aminoType: \"cosmos-sdk/MsgMultiSend\",\n            toAmino: ({ inputs, outputs }) => ({\n                inputs: inputs.map((input) => ({\n                    address: input.address,\n                    coins: [...input.coins],\n                })),\n                outputs: outputs.map((output) => ({\n                    address: output.address,\n                    coins: [...output.coins],\n                })),\n            }),\n            fromAmino: ({ inputs, outputs }) => ({\n                inputs: inputs.map((input) => ({\n                    address: input.address,\n                    coins: [...input.coins],\n                })),\n                outputs: outputs.map((output) => ({\n                    address: output.address,\n                    coins: [...output.coins],\n                })),\n            }),\n        },\n    };\n}\nexports.createBankAminoConverters = createBankAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2JhbmsvYW1pbm9tZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRywyQkFBMkIsR0FBRyxzQkFBc0I7QUFDeEY7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnQ0FBZ0M7QUFDeEQ7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLDBCQUEwQixrQ0FBa0M7QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYiwwQkFBMEIsaUJBQWlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvYmFuay9hbWlub21lc3NhZ2VzLmpzP2Q1NzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUJhbmtBbWlub0NvbnZlcnRlcnMgPSBleHBvcnRzLmlzQW1pbm9Nc2dNdWx0aVNlbmQgPSBleHBvcnRzLmlzQW1pbm9Nc2dTZW5kID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNBbWlub01zZ1NlbmQobXNnKSB7XG4gICAgcmV0dXJuIG1zZy50eXBlID09PSBcImNvc21vcy1zZGsvTXNnU2VuZFwiO1xufVxuZXhwb3J0cy5pc0FtaW5vTXNnU2VuZCA9IGlzQW1pbm9Nc2dTZW5kO1xuZnVuY3Rpb24gaXNBbWlub01zZ011bHRpU2VuZChtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dNdWx0aVNlbmRcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ011bHRpU2VuZCA9IGlzQW1pbm9Nc2dNdWx0aVNlbmQ7XG5mdW5jdGlvbiBjcmVhdGVCYW5rQW1pbm9Db252ZXJ0ZXJzKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIFwiL2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnU2VuZFwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dTZW5kXCIsXG4gICAgICAgICAgICB0b0FtaW5vOiAoeyBmcm9tQWRkcmVzcywgdG9BZGRyZXNzLCBhbW91bnQgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICBmcm9tX2FkZHJlc3M6IGZyb21BZGRyZXNzLFxuICAgICAgICAgICAgICAgIHRvX2FkZHJlc3M6IHRvQWRkcmVzcyxcbiAgICAgICAgICAgICAgICBhbW91bnQ6IFsuLi5hbW91bnRdLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBmcm9tQW1pbm86ICh7IGZyb21fYWRkcmVzcywgdG9fYWRkcmVzcywgYW1vdW50IH0pID0+ICh7XG4gICAgICAgICAgICAgICAgZnJvbUFkZHJlc3M6IGZyb21fYWRkcmVzcyxcbiAgICAgICAgICAgICAgICB0b0FkZHJlc3M6IHRvX2FkZHJlc3MsXG4gICAgICAgICAgICAgICAgYW1vdW50OiBbLi4uYW1vdW50XSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9LFxuICAgICAgICBcIi9jb3Ntb3MuYmFuay52MWJldGExLk1zZ011bHRpU2VuZFwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dNdWx0aVNlbmRcIixcbiAgICAgICAgICAgIHRvQW1pbm86ICh7IGlucHV0cywgb3V0cHV0cyB9KSA9PiAoe1xuICAgICAgICAgICAgICAgIGlucHV0czogaW5wdXRzLm1hcCgoaW5wdXQpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IGlucHV0LmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIGNvaW5zOiBbLi4uaW5wdXQuY29pbnNdLFxuICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICBvdXRwdXRzOiBvdXRwdXRzLm1hcCgob3V0cHV0KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiBvdXRwdXQuYWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgY29pbnM6IFsuLi5vdXRwdXQuY29pbnNdLFxuICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZnJvbUFtaW5vOiAoeyBpbnB1dHMsIG91dHB1dHMgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICBpbnB1dHM6IGlucHV0cy5tYXAoKGlucHV0KSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiBpbnB1dC5hZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICBjb2luczogWy4uLmlucHV0LmNvaW5zXSxcbiAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgb3V0cHV0czogb3V0cHV0cy5tYXAoKG91dHB1dCkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogb3V0cHV0LmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICAgIGNvaW5zOiBbLi4ub3V0cHV0LmNvaW5zXSxcbiAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVCYW5rQW1pbm9Db252ZXJ0ZXJzID0gY3JlYXRlQmFua0FtaW5vQ29udmVydGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFtaW5vbWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/messages.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/bank/messages.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMsgSendEncodeObject = exports.bankTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/bank/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/bank/v1beta1/tx.js\");\nexports.bankTypes = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", tx_1.MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", tx_1.MsgSend],\n];\nfunction isMsgSendEncodeObject(encodeObject) {\n    return encodeObject.typeUrl === \"/cosmos.bank.v1beta1.MsgSend\";\n}\nexports.isMsgSendEncodeObject = isMsgSendEncodeObject;\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2JhbmsvbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNkJBQTZCLEdBQUcsaUJBQWlCO0FBQ2pELGFBQWEsbUJBQU8sQ0FBQyx3R0FBcUM7QUFDMUQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2JhbmsvbWVzc2FnZXMuanM/NjVkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNNc2dTZW5kRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5iYW5rVHlwZXMgPSB2b2lkIDA7XG5jb25zdCB0eF8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvYmFuay92MWJldGExL3R4XCIpO1xuZXhwb3J0cy5iYW5rVHlwZXMgPSBbXG4gICAgW1wiL2Nvc21vcy5iYW5rLnYxYmV0YTEuTXNnTXVsdGlTZW5kXCIsIHR4XzEuTXNnTXVsdGlTZW5kXSxcbiAgICBbXCIvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kXCIsIHR4XzEuTXNnU2VuZF0sXG5dO1xuZnVuY3Rpb24gaXNNc2dTZW5kRW5jb2RlT2JqZWN0KGVuY29kZU9iamVjdCkge1xuICAgIHJldHVybiBlbmNvZGVPYmplY3QudHlwZVVybCA9PT0gXCIvY29zbW9zLmJhbmsudjFiZXRhMS5Nc2dTZW5kXCI7XG59XG5leHBvcnRzLmlzTXNnU2VuZEVuY29kZU9iamVjdCA9IGlzTXNnU2VuZEVuY29kZU9iamVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/queries.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/bank/queries.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupBankExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/bank/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/bank/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupBankExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        bank: {\n            balance: async (address, denom) => {\n                const { balance } = await queryService.Balance({ address: address, denom: denom });\n                (0, utils_1.assert)(balance);\n                return balance;\n            },\n            allBalances: async (address) => {\n                const { balances } = await queryService.AllBalances(query_1.QueryAllBalancesRequest.fromPartial({ address: address }));\n                return balances;\n            },\n            totalSupply: async (paginationKey) => {\n                const response = await queryService.TotalSupply({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            supplyOf: async (denom) => {\n                const { amount } = await queryService.SupplyOf({ denom: denom });\n                (0, utils_1.assert)(amount);\n                return amount;\n            },\n            denomMetadata: async (denom) => {\n                const { metadata } = await queryService.DenomMetadata({ denom });\n                (0, utils_1.assert)(metadata);\n                return metadata;\n            },\n            denomsMetadata: async () => {\n                const { metadatas } = await queryService.DenomsMetadata(query_1.QueryDenomsMetadataRequest.fromPartial({\n                    pagination: undefined, // Not implemented\n                }));\n                return metadatas;\n            },\n        },\n    };\n}\nexports.setupBankExtension = setupBankExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2JhbmsvcXVlcmllcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUI7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyx3RUFBZTtBQUN2QyxnQkFBZ0IsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDaEUsc0JBQXNCLG1CQUFPLENBQUMsMkZBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsVUFBVSwrQkFBK0IsZ0NBQWdDO0FBQ2pHO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx3QkFBd0IsV0FBVywrRUFBK0Usa0JBQWtCO0FBQ3BJO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBLHdCQUF3QixTQUFTLGdDQUFnQyxjQUFjO0FBQy9FO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSx3QkFBd0IsV0FBVyxxQ0FBcUMsT0FBTztBQUMvRTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esd0JBQXdCLFlBQVk7QUFDcEM7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9iYW5rL3F1ZXJpZXMuanM/MmIwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0dXBCYW5rRXh0ZW5zaW9uID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBjb3NtanMvdXRpbHNcIik7XG5jb25zdCBxdWVyeV8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvYmFuay92MWJldGExL3F1ZXJ5XCIpO1xuY29uc3QgcXVlcnljbGllbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi9xdWVyeWNsaWVudFwiKTtcbmZ1bmN0aW9uIHNldHVwQmFua0V4dGVuc2lvbihiYXNlKSB7XG4gICAgY29uc3QgcnBjID0gKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUHJvdG9idWZScGNDbGllbnQpKGJhc2UpO1xuICAgIC8vIFVzZSB0aGlzIHNlcnZpY2UgdG8gZ2V0IGVhc3kgdHlwZWQgYWNjZXNzIHRvIHF1ZXJ5IG1ldGhvZHNcbiAgICAvLyBUaGlzIGNhbm5vdCBiZSB1c2VkIGZvciBwcm9vZiB2ZXJpZmljYXRpb25cbiAgICBjb25zdCBxdWVyeVNlcnZpY2UgPSBuZXcgcXVlcnlfMS5RdWVyeUNsaWVudEltcGwocnBjKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBiYW5rOiB7XG4gICAgICAgICAgICBiYWxhbmNlOiBhc3luYyAoYWRkcmVzcywgZGVub20pID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGJhbGFuY2UgfSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5CYWxhbmNlKHsgYWRkcmVzczogYWRkcmVzcywgZGVub206IGRlbm9tIH0pO1xuICAgICAgICAgICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoYmFsYW5jZSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJhbGFuY2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYWxsQmFsYW5jZXM6IGFzeW5jIChhZGRyZXNzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBiYWxhbmNlcyB9ID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkFsbEJhbGFuY2VzKHF1ZXJ5XzEuUXVlcnlBbGxCYWxhbmNlc1JlcXVlc3QuZnJvbVBhcnRpYWwoeyBhZGRyZXNzOiBhZGRyZXNzIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYmFsYW5jZXM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdG90YWxTdXBwbHk6IGFzeW5jIChwYWdpbmF0aW9uS2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBxdWVyeVNlcnZpY2UuVG90YWxTdXBwbHkoe1xuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3VwcGx5T2Y6IGFzeW5jIChkZW5vbSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgYW1vdW50IH0gPSBhd2FpdCBxdWVyeVNlcnZpY2UuU3VwcGx5T2YoeyBkZW5vbTogZGVub20gfSk7XG4gICAgICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShhbW91bnQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhbW91bnQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVub21NZXRhZGF0YTogYXN5bmMgKGRlbm9tKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBtZXRhZGF0YSB9ID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkRlbm9tTWV0YWRhdGEoeyBkZW5vbSB9KTtcbiAgICAgICAgICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKG1ldGFkYXRhKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWV0YWRhdGE7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVub21zTWV0YWRhdGE6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IG1ldGFkYXRhcyB9ID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkRlbm9tc01ldGFkYXRhKHF1ZXJ5XzEuUXVlcnlEZW5vbXNNZXRhZGF0YVJlcXVlc3QuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiB1bmRlZmluZWQsIC8vIE5vdCBpbXBsZW1lbnRlZFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gbWV0YWRhdGFzO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5zZXR1cEJhbmtFeHRlbnNpb24gPSBzZXR1cEJhbmtFeHRlbnNpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyaWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createCrysisAminoConverters = exports.isAminoMsgVerifyInvariant = void 0;\nfunction isAminoMsgVerifyInvariant(msg) {\n    return msg.type === \"cosmos-sdk/MsgVerifyInvariant\";\n}\nexports.isAminoMsgVerifyInvariant = isAminoMsgVerifyInvariant;\nfunction createCrysisAminoConverters() {\n    throw new Error(\"Not implemented\");\n}\nexports.createCrysisAminoConverters = createCrysisAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2NyaXNpcy9hbWlub21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQyxHQUFHLGlDQUFpQztBQUN2RTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvY3Jpc2lzL2FtaW5vbWVzc2FnZXMuanM/ODRkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlQ3J5c2lzQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5pc0FtaW5vTXNnVmVyaWZ5SW52YXJpYW50ID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNBbWlub01zZ1ZlcmlmeUludmFyaWFudChtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dWZXJpZnlJbnZhcmlhbnRcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1ZlcmlmeUludmFyaWFudCA9IGlzQW1pbm9Nc2dWZXJpZnlJbnZhcmlhbnQ7XG5mdW5jdGlvbiBjcmVhdGVDcnlzaXNBbWlub0NvbnZlcnRlcnMoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xufVxuZXhwb3J0cy5jcmVhdGVDcnlzaXNBbWlub0NvbnZlcnRlcnMgPSBjcmVhdGVDcnlzaXNBbWlub0NvbnZlcnRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbWlub21lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createDistributionAminoConverters = exports.isAminoMsgFundCommunityPool = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgSetWithdrawAddress = void 0;\nfunction isAminoMsgSetWithdrawAddress(msg) {\n    // NOTE: Type string and names diverge here!\n    return msg.type === \"cosmos-sdk/MsgModifyWithdrawAddress\";\n}\nexports.isAminoMsgSetWithdrawAddress = isAminoMsgSetWithdrawAddress;\nfunction isAminoMsgWithdrawDelegatorReward(msg) {\n    // NOTE: Type string and names diverge here!\n    return msg.type === \"cosmos-sdk/MsgWithdrawDelegationReward\";\n}\nexports.isAminoMsgWithdrawDelegatorReward = isAminoMsgWithdrawDelegatorReward;\nfunction isAminoMsgWithdrawValidatorCommission(msg) {\n    return msg.type === \"cosmos-sdk/MsgWithdrawValidatorCommission\";\n}\nexports.isAminoMsgWithdrawValidatorCommission = isAminoMsgWithdrawValidatorCommission;\nfunction isAminoMsgFundCommunityPool(msg) {\n    return msg.type === \"cosmos-sdk/MsgFundCommunityPool\";\n}\nexports.isAminoMsgFundCommunityPool = isAminoMsgFundCommunityPool;\nfunction createDistributionAminoConverters() {\n    return {\n        \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\": {\n            aminoType: \"cosmos-sdk/MsgFundCommunityPool\",\n            toAmino: ({ amount, depositor }) => ({\n                amount: [...amount],\n                depositor: depositor,\n            }),\n            fromAmino: ({ amount, depositor }) => ({\n                amount: [...amount],\n                depositor: depositor,\n            }),\n        },\n        \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\": {\n            aminoType: \"cosmos-sdk/MsgModifyWithdrawAddress\",\n            toAmino: ({ delegatorAddress, withdrawAddress, }) => ({\n                delegator_address: delegatorAddress,\n                withdraw_address: withdrawAddress,\n            }),\n            fromAmino: ({ delegator_address, withdraw_address, }) => ({\n                delegatorAddress: delegator_address,\n                withdrawAddress: withdraw_address,\n            }),\n        },\n        \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\": {\n            aminoType: \"cosmos-sdk/MsgWithdrawDelegationReward\",\n            toAmino: ({ delegatorAddress, validatorAddress, }) => ({\n                delegator_address: delegatorAddress,\n                validator_address: validatorAddress,\n            }),\n            fromAmino: ({ delegator_address, validator_address, }) => ({\n                delegatorAddress: delegator_address,\n                validatorAddress: validator_address,\n            }),\n        },\n        \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\": {\n            aminoType: \"cosmos-sdk/MsgWithdrawValidatorCommission\",\n            toAmino: ({ validatorAddress, }) => ({\n                validator_address: validatorAddress,\n            }),\n            fromAmino: ({ validator_address, }) => ({\n                validatorAddress: validator_address,\n            }),\n        },\n    };\n}\nexports.createDistributionAminoConverters = createDistributionAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2Rpc3RyaWJ1dGlvbi9hbWlub21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlDQUF5QyxHQUFHLG1DQUFtQyxHQUFHLDZDQUE2QyxHQUFHLHlDQUF5QyxHQUFHLG9DQUFvQztBQUNsTjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBO0FBQ0EsYUFBYTtBQUNiLDBCQUEwQixtQkFBbUI7QUFDN0M7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QixvQ0FBb0M7QUFDNUQ7QUFDQTtBQUNBLGFBQWE7QUFDYiwwQkFBMEIsc0NBQXNDO0FBQ2hFO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSx3QkFBd0IscUNBQXFDO0FBQzdEO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsMEJBQTBCLHVDQUF1QztBQUNqRTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0Esd0JBQXdCLG1CQUFtQjtBQUMzQztBQUNBLGFBQWE7QUFDYiwwQkFBMEIsb0JBQW9CO0FBQzlDO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvZGlzdHJpYnV0aW9uL2FtaW5vbWVzc2FnZXMuanM/OGM5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY3JlYXRlRGlzdHJpYnV0aW9uQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5pc0FtaW5vTXNnRnVuZENvbW11bml0eVBvb2wgPSBleHBvcnRzLmlzQW1pbm9Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb24gPSBleHBvcnRzLmlzQW1pbm9Nc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZCA9IGV4cG9ydHMuaXNBbWlub01zZ1NldFdpdGhkcmF3QWRkcmVzcyA9IHZvaWQgMDtcbmZ1bmN0aW9uIGlzQW1pbm9Nc2dTZXRXaXRoZHJhd0FkZHJlc3MobXNnKSB7XG4gICAgLy8gTk9URTogVHlwZSBzdHJpbmcgYW5kIG5hbWVzIGRpdmVyZ2UgaGVyZSFcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dNb2RpZnlXaXRoZHJhd0FkZHJlc3NcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1NldFdpdGhkcmF3QWRkcmVzcyA9IGlzQW1pbm9Nc2dTZXRXaXRoZHJhd0FkZHJlc3M7XG5mdW5jdGlvbiBpc0FtaW5vTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmQobXNnKSB7XG4gICAgLy8gTk9URTogVHlwZSBzdHJpbmcgYW5kIG5hbWVzIGRpdmVyZ2UgaGVyZSFcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dXaXRoZHJhd0RlbGVnYXRpb25SZXdhcmRcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkID0gaXNBbWlub01zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkO1xuZnVuY3Rpb24gaXNBbWlub01zZ1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvbihtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb25cIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvbiA9IGlzQW1pbm9Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb247XG5mdW5jdGlvbiBpc0FtaW5vTXNnRnVuZENvbW11bml0eVBvb2wobXNnKSB7XG4gICAgcmV0dXJuIG1zZy50eXBlID09PSBcImNvc21vcy1zZGsvTXNnRnVuZENvbW11bml0eVBvb2xcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ0Z1bmRDb21tdW5pdHlQb29sID0gaXNBbWlub01zZ0Z1bmRDb21tdW5pdHlQb29sO1xuZnVuY3Rpb24gY3JlYXRlRGlzdHJpYnV0aW9uQW1pbm9Db252ZXJ0ZXJzKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIFwiL2Nvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dGdW5kQ29tbXVuaXR5UG9vbFwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dGdW5kQ29tbXVuaXR5UG9vbFwiLFxuICAgICAgICAgICAgdG9BbWlubzogKHsgYW1vdW50LCBkZXBvc2l0b3IgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICBhbW91bnQ6IFsuLi5hbW91bnRdLFxuICAgICAgICAgICAgICAgIGRlcG9zaXRvcjogZGVwb3NpdG9yLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBmcm9tQW1pbm86ICh7IGFtb3VudCwgZGVwb3NpdG9yIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgYW1vdW50OiBbLi4uYW1vdW50XSxcbiAgICAgICAgICAgICAgICBkZXBvc2l0b3I6IGRlcG9zaXRvcixcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9LFxuICAgICAgICBcIi9jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnU2V0V2l0aGRyYXdBZGRyZXNzXCI6IHtcbiAgICAgICAgICAgIGFtaW5vVHlwZTogXCJjb3Ntb3Mtc2RrL01zZ01vZGlmeVdpdGhkcmF3QWRkcmVzc1wiLFxuICAgICAgICAgICAgdG9BbWlubzogKHsgZGVsZWdhdG9yQWRkcmVzcywgd2l0aGRyYXdBZGRyZXNzLCB9KSA9PiAoe1xuICAgICAgICAgICAgICAgIGRlbGVnYXRvcl9hZGRyZXNzOiBkZWxlZ2F0b3JBZGRyZXNzLFxuICAgICAgICAgICAgICAgIHdpdGhkcmF3X2FkZHJlc3M6IHdpdGhkcmF3QWRkcmVzcyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZnJvbUFtaW5vOiAoeyBkZWxlZ2F0b3JfYWRkcmVzcywgd2l0aGRyYXdfYWRkcmVzcywgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICBkZWxlZ2F0b3JBZGRyZXNzOiBkZWxlZ2F0b3JfYWRkcmVzcyxcbiAgICAgICAgICAgICAgICB3aXRoZHJhd0FkZHJlc3M6IHdpdGhkcmF3X2FkZHJlc3MsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkXCI6IHtcbiAgICAgICAgICAgIGFtaW5vVHlwZTogXCJjb3Ntb3Mtc2RrL01zZ1dpdGhkcmF3RGVsZWdhdGlvblJld2FyZFwiLFxuICAgICAgICAgICAgdG9BbWlubzogKHsgZGVsZWdhdG9yQWRkcmVzcywgdmFsaWRhdG9yQWRkcmVzcywgfSkgPT4gKHtcbiAgICAgICAgICAgICAgICBkZWxlZ2F0b3JfYWRkcmVzczogZGVsZWdhdG9yQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB2YWxpZGF0b3JfYWRkcmVzczogdmFsaWRhdG9yQWRkcmVzcyxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZnJvbUFtaW5vOiAoeyBkZWxlZ2F0b3JfYWRkcmVzcywgdmFsaWRhdG9yX2FkZHJlc3MsIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgZGVsZWdhdG9yQWRkcmVzczogZGVsZWdhdG9yX2FkZHJlc3MsXG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yQWRkcmVzczogdmFsaWRhdG9yX2FkZHJlc3MsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3VmFsaWRhdG9yQ29tbWlzc2lvblwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dXaXRoZHJhd1ZhbGlkYXRvckNvbW1pc3Npb25cIixcbiAgICAgICAgICAgIHRvQW1pbm86ICh7IHZhbGlkYXRvckFkZHJlc3MsIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yX2FkZHJlc3M6IHZhbGlkYXRvckFkZHJlc3MsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGZyb21BbWlubzogKHsgdmFsaWRhdG9yX2FkZHJlc3MsIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgdmFsaWRhdG9yQWRkcmVzczogdmFsaWRhdG9yX2FkZHJlc3MsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVEaXN0cmlidXRpb25BbWlub0NvbnZlcnRlcnMgPSBjcmVhdGVEaXN0cmlidXRpb25BbWlub0NvbnZlcnRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbWlub21lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/messages.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/distribution/messages.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMsgWithdrawDelegatorRewardEncodeObject = exports.distributionTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/distribution/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js\");\nexports.distributionTypes = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", tx_1.MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", tx_1.MsgSetWithdrawAddress],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", tx_1.MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", tx_1.MsgWithdrawValidatorCommission],\n];\nfunction isMsgWithdrawDelegatorRewardEncodeObject(object) {\n    return (object.typeUrl ===\n        \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\");\n}\nexports.isMsgWithdrawDelegatorRewardEncodeObject = isMsgWithdrawDelegatorRewardEncodeObject;\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2Rpc3RyaWJ1dGlvbi9tZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnREFBZ0QsR0FBRyx5QkFBeUI7QUFDNUUsYUFBYSxtQkFBTyxDQUFDLHdIQUE2QztBQUNsRSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdEO0FBQ2hEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvZGlzdHJpYnV0aW9uL21lc3NhZ2VzLmpzPzAxNGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmRFbmNvZGVPYmplY3QgPSBleHBvcnRzLmRpc3RyaWJ1dGlvblR5cGVzID0gdm9pZCAwO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL2Rpc3RyaWJ1dGlvbi92MWJldGExL3R4XCIpO1xuZXhwb3J0cy5kaXN0cmlidXRpb25UeXBlcyA9IFtcbiAgICBbXCIvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ0Z1bmRDb21tdW5pdHlQb29sXCIsIHR4XzEuTXNnRnVuZENvbW11bml0eVBvb2xdLFxuICAgIFtcIi9jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnU2V0V2l0aGRyYXdBZGRyZXNzXCIsIHR4XzEuTXNnU2V0V2l0aGRyYXdBZGRyZXNzXSxcbiAgICBbXCIvY29zbW9zLmRpc3RyaWJ1dGlvbi52MWJldGExLk1zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkXCIsIHR4XzEuTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmRdLFxuICAgIFtcIi9jb3Ntb3MuZGlzdHJpYnV0aW9uLnYxYmV0YTEuTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uXCIsIHR4XzEuTXNnV2l0aGRyYXdWYWxpZGF0b3JDb21taXNzaW9uXSxcbl07XG5mdW5jdGlvbiBpc01zZ1dpdGhkcmF3RGVsZWdhdG9yUmV3YXJkRW5jb2RlT2JqZWN0KG9iamVjdCkge1xuICAgIHJldHVybiAob2JqZWN0LnR5cGVVcmwgPT09XG4gICAgICAgIFwiL2Nvc21vcy5kaXN0cmlidXRpb24udjFiZXRhMS5Nc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZFwiKTtcbn1cbmV4cG9ydHMuaXNNc2dXaXRoZHJhd0RlbGVnYXRvclJld2FyZEVuY29kZU9iamVjdCA9IGlzTXNnV2l0aGRyYXdEZWxlZ2F0b3JSZXdhcmRFbmNvZGVPYmplY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/queries.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/distribution/queries.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupDistributionExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/distribution/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/distribution/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupDistributionExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        distribution: {\n            communityPool: async () => {\n                const response = await queryService.CommunityPool({});\n                return response;\n            },\n            delegationRewards: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.DelegationRewards({\n                    delegatorAddress: delegatorAddress,\n                    validatorAddress: validatorAddress,\n                });\n                return response;\n            },\n            delegationTotalRewards: async (delegatorAddress) => {\n                const response = await queryService.DelegationTotalRewards({\n                    delegatorAddress: delegatorAddress,\n                });\n                return response;\n            },\n            delegatorValidators: async (delegatorAddress) => {\n                const response = await queryService.DelegatorValidators({\n                    delegatorAddress: delegatorAddress,\n                });\n                return response;\n            },\n            delegatorWithdrawAddress: async (delegatorAddress) => {\n                const response = await queryService.DelegatorWithdrawAddress({\n                    delegatorAddress: delegatorAddress,\n                });\n                return response;\n            },\n            params: async () => {\n                const response = await queryService.Params({});\n                return response;\n            },\n            validatorCommission: async (validatorAddress) => {\n                const response = await queryService.ValidatorCommission({\n                    validatorAddress: validatorAddress,\n                });\n                return response;\n            },\n            validatorOutstandingRewards: async (validatorAddress) => {\n                const response = await queryService.ValidatorOutstandingRewards({\n                    validatorAddress: validatorAddress,\n                });\n                return response;\n            },\n            validatorSlashes: async (validatorAddress, startingHeight, endingHeight, paginationKey) => {\n                const response = await queryService.ValidatorSlashes({\n                    validatorAddress: validatorAddress,\n                    startingHeight: BigInt(startingHeight),\n                    endingHeight: BigInt(endingHeight),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupDistributionExtension = setupDistributionExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2Rpc3RyaWJ1dGlvbi9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQztBQUNsQztBQUNBLGdCQUFnQixtQkFBTyxDQUFDLDhIQUFnRDtBQUN4RSxzQkFBc0IsbUJBQU8sQ0FBQywyRkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRTtBQUNwRTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBLDZEQUE2RDtBQUM3RDtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtDQUFrQztBQUNsQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2Rpc3RyaWJ1dGlvbi9xdWVyaWVzLmpzPzkwNTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldHVwRGlzdHJpYnV0aW9uRXh0ZW5zaW9uID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCBxdWVyeV8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvZGlzdHJpYnV0aW9uL3YxYmV0YTEvcXVlcnlcIik7XG5jb25zdCBxdWVyeWNsaWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3F1ZXJ5Y2xpZW50XCIpO1xuZnVuY3Rpb24gc2V0dXBEaXN0cmlidXRpb25FeHRlbnNpb24oYmFzZSkge1xuICAgIGNvbnN0IHJwYyA9ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVByb3RvYnVmUnBjQ2xpZW50KShiYXNlKTtcbiAgICAvLyBVc2UgdGhpcyBzZXJ2aWNlIHRvIGdldCBlYXN5IHR5cGVkIGFjY2VzcyB0byBxdWVyeSBtZXRob2RzXG4gICAgLy8gVGhpcyBjYW5ub3QgYmUgdXNlZCBmb3IgcHJvb2YgdmVyaWZpY2F0aW9uXG4gICAgY29uc3QgcXVlcnlTZXJ2aWNlID0gbmV3IHF1ZXJ5XzEuUXVlcnlDbGllbnRJbXBsKHJwYyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZGlzdHJpYnV0aW9uOiB7XG4gICAgICAgICAgICBjb21tdW5pdHlQb29sOiBhc3luYyAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBxdWVyeVNlcnZpY2UuQ29tbXVuaXR5UG9vbCh7fSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlbGVnYXRpb25SZXdhcmRzOiBhc3luYyAoZGVsZWdhdG9yQWRkcmVzcywgdmFsaWRhdG9yQWRkcmVzcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkRlbGVnYXRpb25SZXdhcmRzKHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZWdhdG9yQWRkcmVzczogZGVsZWdhdG9yQWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgdmFsaWRhdG9yQWRkcmVzczogdmFsaWRhdG9yQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZWdhdGlvblRvdGFsUmV3YXJkczogYXN5bmMgKGRlbGVnYXRvckFkZHJlc3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5EZWxlZ2F0aW9uVG90YWxSZXdhcmRzKHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZWdhdG9yQWRkcmVzczogZGVsZWdhdG9yQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZWdhdG9yVmFsaWRhdG9yczogYXN5bmMgKGRlbGVnYXRvckFkZHJlc3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5EZWxlZ2F0b3JWYWxpZGF0b3JzKHtcbiAgICAgICAgICAgICAgICAgICAgZGVsZWdhdG9yQWRkcmVzczogZGVsZWdhdG9yQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZGVsZWdhdG9yV2l0aGRyYXdBZGRyZXNzOiBhc3luYyAoZGVsZWdhdG9yQWRkcmVzcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkRlbGVnYXRvcldpdGhkcmF3QWRkcmVzcyh7XG4gICAgICAgICAgICAgICAgICAgIGRlbGVnYXRvckFkZHJlc3M6IGRlbGVnYXRvckFkZHJlc3MsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHBhcmFtczogYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLlBhcmFtcyh7fSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHZhbGlkYXRvckNvbW1pc3Npb246IGFzeW5jICh2YWxpZGF0b3JBZGRyZXNzKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBxdWVyeVNlcnZpY2UuVmFsaWRhdG9yQ29tbWlzc2lvbih7XG4gICAgICAgICAgICAgICAgICAgIHZhbGlkYXRvckFkZHJlc3M6IHZhbGlkYXRvckFkZHJlc3MsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHZhbGlkYXRvck91dHN0YW5kaW5nUmV3YXJkczogYXN5bmMgKHZhbGlkYXRvckFkZHJlc3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5WYWxpZGF0b3JPdXRzdGFuZGluZ1Jld2FyZHMoe1xuICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JBZGRyZXNzOiB2YWxpZGF0b3JBZGRyZXNzLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2YWxpZGF0b3JTbGFzaGVzOiBhc3luYyAodmFsaWRhdG9yQWRkcmVzcywgc3RhcnRpbmdIZWlnaHQsIGVuZGluZ0hlaWdodCwgcGFnaW5hdGlvbktleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLlZhbGlkYXRvclNsYXNoZXMoe1xuICAgICAgICAgICAgICAgICAgICB2YWxpZGF0b3JBZGRyZXNzOiB2YWxpZGF0b3JBZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgICBzdGFydGluZ0hlaWdodDogQmlnSW50KHN0YXJ0aW5nSGVpZ2h0KSxcbiAgICAgICAgICAgICAgICAgICAgZW5kaW5nSGVpZ2h0OiBCaWdJbnQoZW5kaW5nSGVpZ2h0KSxcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5zZXR1cERpc3RyaWJ1dGlvbkV4dGVuc2lvbiA9IHNldHVwRGlzdHJpYnV0aW9uRXh0ZW5zaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createEvidenceAminoConverters = exports.isAminoMsgSubmitEvidence = void 0;\nfunction isAminoMsgSubmitEvidence(msg) {\n    return msg.type === \"cosmos-sdk/MsgSubmitEvidence\";\n}\nexports.isAminoMsgSubmitEvidence = isAminoMsgSubmitEvidence;\nfunction createEvidenceAminoConverters() {\n    throw new Error(\"Not implemented\");\n}\nexports.createEvidenceAminoConverters = createEvidenceAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2V2aWRlbmNlL2FtaW5vbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLEdBQUcsZ0NBQWdDO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9ldmlkZW5jZS9hbWlub21lc3NhZ2VzLmpzPzM1MWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUV2aWRlbmNlQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5pc0FtaW5vTXNnU3VibWl0RXZpZGVuY2UgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc0FtaW5vTXNnU3VibWl0RXZpZGVuY2UobXNnKSB7XG4gICAgcmV0dXJuIG1zZy50eXBlID09PSBcImNvc21vcy1zZGsvTXNnU3VibWl0RXZpZGVuY2VcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1N1Ym1pdEV2aWRlbmNlID0gaXNBbWlub01zZ1N1Ym1pdEV2aWRlbmNlO1xuZnVuY3Rpb24gY3JlYXRlRXZpZGVuY2VBbWlub0NvbnZlcnRlcnMoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpO1xufVxuZXhwb3J0cy5jcmVhdGVFdmlkZW5jZUFtaW5vQ29udmVydGVycyA9IGNyZWF0ZUV2aWRlbmNlQW1pbm9Db252ZXJ0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW1pbm9tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createFeegrantAminoConverters = void 0;\nfunction createFeegrantAminoConverters() {\n    return {\n    // For Cosmos SDK < 0.46 the Amino JSON codec was broken on chain and thus inaccessible.\n    // Now this can be implemented for 0.46+ chains, see\n    // https://github.com/cosmos/cosmjs/issues/1092\n    //\n    // \"/cosmos.feegrant.v1beta1.MsgGrantAllowance\": IMPLEMENT_ME,\n    // \"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\": IMPLEMENT_ME,\n    };\n}\nexports.createFeegrantAminoConverters = createFeegrantAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2ZlZWdyYW50L2FtaW5vbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvZmVlZ3JhbnQvYW1pbm9tZXNzYWdlcy5qcz9kODcwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVGZWVncmFudEFtaW5vQ29udmVydGVycyA9IHZvaWQgMDtcbmZ1bmN0aW9uIGNyZWF0ZUZlZWdyYW50QW1pbm9Db252ZXJ0ZXJzKCkge1xuICAgIHJldHVybiB7XG4gICAgLy8gRm9yIENvc21vcyBTREsgPCAwLjQ2IHRoZSBBbWlubyBKU09OIGNvZGVjIHdhcyBicm9rZW4gb24gY2hhaW4gYW5kIHRodXMgaW5hY2Nlc3NpYmxlLlxuICAgIC8vIE5vdyB0aGlzIGNhbiBiZSBpbXBsZW1lbnRlZCBmb3IgMC40NisgY2hhaW5zLCBzZWVcbiAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21qcy9pc3N1ZXMvMTA5MlxuICAgIC8vXG4gICAgLy8gXCIvY29zbW9zLmZlZWdyYW50LnYxYmV0YTEuTXNnR3JhbnRBbGxvd2FuY2VcIjogSU1QTEVNRU5UX01FLFxuICAgIC8vIFwiL2Nvc21vcy5mZWVncmFudC52MWJldGExLk1zZ1Jldm9rZUFsbG93YW5jZVwiOiBJTVBMRU1FTlRfTUUsXG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlRmVlZ3JhbnRBbWlub0NvbnZlcnRlcnMgPSBjcmVhdGVGZWVncmFudEFtaW5vQ29udmVydGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFtaW5vbWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.feegrantTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/feegrant/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/feegrant/v1beta1/tx.js\");\nexports.feegrantTypes = [\n    [\"/cosmos.feegrant.v1beta1.MsgGrantAllowance\", tx_1.MsgGrantAllowance],\n    [\"/cosmos.feegrant.v1beta1.MsgRevokeAllowance\", tx_1.MsgRevokeAllowance],\n];\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2ZlZWdyYW50L21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsZ0hBQXlDO0FBQzlELHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2ZlZWdyYW50L21lc3NhZ2VzLmpzPzg1ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmZlZWdyYW50VHlwZXMgPSB2b2lkIDA7XG5jb25zdCB0eF8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvZmVlZ3JhbnQvdjFiZXRhMS90eFwiKTtcbmV4cG9ydHMuZmVlZ3JhbnRUeXBlcyA9IFtcbiAgICBbXCIvY29zbW9zLmZlZWdyYW50LnYxYmV0YTEuTXNnR3JhbnRBbGxvd2FuY2VcIiwgdHhfMS5Nc2dHcmFudEFsbG93YW5jZV0sXG4gICAgW1wiL2Nvc21vcy5mZWVncmFudC52MWJldGExLk1zZ1Jldm9rZUFsbG93YW5jZVwiLCB0eF8xLk1zZ1Jldm9rZUFsbG93YW5jZV0sXG5dO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupFeegrantExtension = void 0;\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/feegrant/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/feegrant/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupFeegrantExtension(base) {\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        feegrant: {\n            allowance: async (granter, grantee) => {\n                const response = await queryService.Allowance({\n                    granter: granter,\n                    grantee: grantee,\n                });\n                return response;\n            },\n            allowances: async (grantee, paginationKey) => {\n                const response = await queryService.Allowances({\n                    grantee: grantee,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupFeegrantExtension = setupFeegrantExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2ZlZWdyYW50L3F1ZXJpZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLGdCQUFnQixtQkFBTyxDQUFDLHNIQUE0QztBQUNwRSxzQkFBc0IsbUJBQU8sQ0FBQywyRkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2ZlZWdyYW50L3F1ZXJpZXMuanM/MTQyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0dXBGZWVncmFudEV4dGVuc2lvbiA9IHZvaWQgMDtcbmNvbnN0IHF1ZXJ5XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9mZWVncmFudC92MWJldGExL3F1ZXJ5XCIpO1xuY29uc3QgcXVlcnljbGllbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi9xdWVyeWNsaWVudFwiKTtcbmZ1bmN0aW9uIHNldHVwRmVlZ3JhbnRFeHRlbnNpb24oYmFzZSkge1xuICAgIC8vIFVzZSB0aGlzIHNlcnZpY2UgdG8gZ2V0IGVhc3kgdHlwZWQgYWNjZXNzIHRvIHF1ZXJ5IG1ldGhvZHNcbiAgICAvLyBUaGlzIGNhbm5vdCBiZSB1c2VkIGZvciBwcm9vZiB2ZXJpZmljYXRpb25cbiAgICBjb25zdCBycGMgPSAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQcm90b2J1ZlJwY0NsaWVudCkoYmFzZSk7XG4gICAgY29uc3QgcXVlcnlTZXJ2aWNlID0gbmV3IHF1ZXJ5XzEuUXVlcnlDbGllbnRJbXBsKHJwYyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZmVlZ3JhbnQ6IHtcbiAgICAgICAgICAgIGFsbG93YW5jZTogYXN5bmMgKGdyYW50ZXIsIGdyYW50ZWUpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5BbGxvd2FuY2Uoe1xuICAgICAgICAgICAgICAgICAgICBncmFudGVyOiBncmFudGVyLFxuICAgICAgICAgICAgICAgICAgICBncmFudGVlOiBncmFudGVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhbGxvd2FuY2VzOiBhc3luYyAoZ3JhbnRlZSwgcGFnaW5hdGlvbktleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkFsbG93YW5jZXMoe1xuICAgICAgICAgICAgICAgICAgICBncmFudGVlOiBncmFudGVlLFxuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnNldHVwRmVlZ3JhbnRFeHRlbnNpb24gPSBzZXR1cEZlZWdyYW50RXh0ZW5zaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createGovAminoConverters = exports.isAminoMsgDeposit = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst gov_1 = __webpack_require__(/*! cosmjs-types/cosmos/gov/v1beta1/gov */ \"(ssr)/./node_modules/cosmjs-types/cosmos/gov/v1beta1/gov.js\");\nconst any_1 = __webpack_require__(/*! cosmjs-types/google/protobuf/any */ \"(ssr)/./node_modules/cosmjs-types/google/protobuf/any.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction isAminoMsgSubmitProposal(msg) {\n    return msg.type === \"cosmos-sdk/MsgSubmitProposal\";\n}\nexports.isAminoMsgSubmitProposal = isAminoMsgSubmitProposal;\nfunction isAminoMsgVote(msg) {\n    return msg.type === \"cosmos-sdk/MsgVote\";\n}\nexports.isAminoMsgVote = isAminoMsgVote;\nfunction isAminoMsgVoteWeighted(msg) {\n    return msg.type === \"cosmos-sdk/MsgVoteWeighted\";\n}\nexports.isAminoMsgVoteWeighted = isAminoMsgVoteWeighted;\nfunction isAminoMsgDeposit(msg) {\n    return msg.type === \"cosmos-sdk/MsgDeposit\";\n}\nexports.isAminoMsgDeposit = isAminoMsgDeposit;\nfunction createGovAminoConverters() {\n    // Gov v1 types missing, see\n    // https://github.com/cosmos/cosmjs/issues/1442\n    return {\n        \"/cosmos.gov.v1beta1.MsgDeposit\": {\n            aminoType: \"cosmos-sdk/MsgDeposit\",\n            toAmino: ({ amount, depositor, proposalId }) => {\n                return {\n                    amount,\n                    depositor,\n                    proposal_id: proposalId.toString(),\n                };\n            },\n            fromAmino: ({ amount, depositor, proposal_id }) => {\n                return {\n                    amount: Array.from(amount),\n                    depositor,\n                    proposalId: BigInt(proposal_id),\n                };\n            },\n        },\n        \"/cosmos.gov.v1beta1.MsgVote\": {\n            aminoType: \"cosmos-sdk/MsgVote\",\n            toAmino: ({ option, proposalId, voter }) => {\n                return {\n                    option: option,\n                    proposal_id: proposalId.toString(),\n                    voter: voter,\n                };\n            },\n            fromAmino: ({ option, proposal_id, voter }) => {\n                return {\n                    option: (0, gov_1.voteOptionFromJSON)(option),\n                    proposalId: BigInt(proposal_id),\n                    voter: voter,\n                };\n            },\n        },\n        \"/cosmos.gov.v1beta1.MsgVoteWeighted\": {\n            aminoType: \"cosmos-sdk/MsgVoteWeighted\",\n            toAmino: ({ options, proposalId, voter }) => {\n                return {\n                    options: options.map((o) => ({\n                        option: o.option,\n                        // Weight is between 0 and 1, so we always have 20 characters when printing all trailing\n                        // zeros (e.g. \"0.700000000000000000\" or \"1.000000000000000000\")\n                        weight: (0, queryclient_1.decodeCosmosSdkDecFromProto)(o.weight).toString().padEnd(20, \"0\"),\n                    })),\n                    proposal_id: proposalId.toString(),\n                    voter: voter,\n                };\n            },\n            fromAmino: ({ options, proposal_id, voter }) => {\n                return {\n                    proposalId: BigInt(proposal_id),\n                    voter: voter,\n                    options: options.map((o) => ({\n                        option: (0, gov_1.voteOptionFromJSON)(o.option),\n                        weight: math_1.Decimal.fromUserInput(o.weight, 18).atomics,\n                    })),\n                };\n            },\n        },\n        \"/cosmos.gov.v1beta1.MsgSubmitProposal\": {\n            aminoType: \"cosmos-sdk/MsgSubmitProposal\",\n            toAmino: ({ initialDeposit, proposer, content, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(content);\n                let proposal;\n                switch (content.typeUrl) {\n                    case \"/cosmos.gov.v1beta1.TextProposal\": {\n                        const textProposal = gov_1.TextProposal.decode(content.value);\n                        proposal = {\n                            type: \"cosmos-sdk/TextProposal\",\n                            value: {\n                                description: textProposal.description,\n                                title: textProposal.title,\n                            },\n                        };\n                        break;\n                    }\n                    default:\n                        throw new Error(`Unsupported proposal type: '${content.typeUrl}'`);\n                }\n                return {\n                    initial_deposit: initialDeposit,\n                    proposer: proposer,\n                    content: proposal,\n                };\n            },\n            fromAmino: ({ initial_deposit, proposer, content, }) => {\n                let any_content;\n                switch (content.type) {\n                    case \"cosmos-sdk/TextProposal\": {\n                        const { value } = content;\n                        (0, utils_1.assert)((0, utils_1.isNonNullObject)(value));\n                        const { title, description } = value;\n                        (0, utils_1.assert)(typeof title === \"string\");\n                        (0, utils_1.assert)(typeof description === \"string\");\n                        any_content = any_1.Any.fromPartial({\n                            typeUrl: \"/cosmos.gov.v1beta1.TextProposal\",\n                            value: gov_1.TextProposal.encode(gov_1.TextProposal.fromPartial({\n                                title: title,\n                                description: description,\n                            })).finish(),\n                        });\n                        break;\n                    }\n                    default:\n                        throw new Error(`Unsupported proposal type: '${content.type}'`);\n                }\n                return {\n                    initialDeposit: Array.from(initial_deposit),\n                    proposer: proposer,\n                    content: any_content,\n                };\n            },\n        },\n    };\n}\nexports.createGovAminoConverters = createGovAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dvdi9hbWlub21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQyxHQUFHLHlCQUF5QixHQUFHLDhCQUE4QixHQUFHLHNCQUFzQixHQUFHLGdDQUFnQztBQUN6SixlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckMsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsY0FBYyxtQkFBTyxDQUFDLHdHQUFxQztBQUMzRCxjQUFjLG1CQUFPLENBQUMsa0dBQWtDO0FBQ3hELHNCQUFzQixtQkFBTyxDQUFDLDJGQUFtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtCQUErQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLDBCQUEwQixnQ0FBZ0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QiwyQkFBMkI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiwwQkFBMEIsNEJBQTRCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSx3QkFBd0IsNEJBQTRCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsMEJBQTBCLDZCQUE2QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSx3QkFBd0Isb0NBQW9DO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUVBQXVFLGdCQUFnQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsMEJBQTBCLHFDQUFxQztBQUMvRDtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsUUFBUTtBQUN4QztBQUNBLGdDQUFnQyxxQkFBcUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLHVFQUF1RSxhQUFhO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGdDQUFnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dvdi9hbWlub21lc3NhZ2VzLmpzP2I4NDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUdvdkFtaW5vQ29udmVydGVycyA9IGV4cG9ydHMuaXNBbWlub01zZ0RlcG9zaXQgPSBleHBvcnRzLmlzQW1pbm9Nc2dWb3RlV2VpZ2h0ZWQgPSBleHBvcnRzLmlzQW1pbm9Nc2dWb3RlID0gZXhwb3J0cy5pc0FtaW5vTXNnU3VibWl0UHJvcG9zYWwgPSB2b2lkIDA7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuY29uc3QgdXRpbHNfMSA9IHJlcXVpcmUoXCJAY29zbWpzL3V0aWxzXCIpO1xuY29uc3QgZ292XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9nb3YvdjFiZXRhMS9nb3ZcIik7XG5jb25zdCBhbnlfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvZ29vZ2xlL3Byb3RvYnVmL2FueVwiKTtcbmNvbnN0IHF1ZXJ5Y2xpZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnljbGllbnRcIik7XG5mdW5jdGlvbiBpc0FtaW5vTXNnU3VibWl0UHJvcG9zYWwobXNnKSB7XG4gICAgcmV0dXJuIG1zZy50eXBlID09PSBcImNvc21vcy1zZGsvTXNnU3VibWl0UHJvcG9zYWxcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1N1Ym1pdFByb3Bvc2FsID0gaXNBbWlub01zZ1N1Ym1pdFByb3Bvc2FsO1xuZnVuY3Rpb24gaXNBbWlub01zZ1ZvdGUobXNnKSB7XG4gICAgcmV0dXJuIG1zZy50eXBlID09PSBcImNvc21vcy1zZGsvTXNnVm90ZVwiO1xufVxuZXhwb3J0cy5pc0FtaW5vTXNnVm90ZSA9IGlzQW1pbm9Nc2dWb3RlO1xuZnVuY3Rpb24gaXNBbWlub01zZ1ZvdGVXZWlnaHRlZChtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dWb3RlV2VpZ2h0ZWRcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1ZvdGVXZWlnaHRlZCA9IGlzQW1pbm9Nc2dWb3RlV2VpZ2h0ZWQ7XG5mdW5jdGlvbiBpc0FtaW5vTXNnRGVwb3NpdChtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dEZXBvc2l0XCI7XG59XG5leHBvcnRzLmlzQW1pbm9Nc2dEZXBvc2l0ID0gaXNBbWlub01zZ0RlcG9zaXQ7XG5mdW5jdGlvbiBjcmVhdGVHb3ZBbWlub0NvbnZlcnRlcnMoKSB7XG4gICAgLy8gR292IHYxIHR5cGVzIG1pc3NpbmcsIHNlZVxuICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbWpzL2lzc3Vlcy8xNDQyXG4gICAgcmV0dXJuIHtcbiAgICAgICAgXCIvY29zbW9zLmdvdi52MWJldGExLk1zZ0RlcG9zaXRcIjoge1xuICAgICAgICAgICAgYW1pbm9UeXBlOiBcImNvc21vcy1zZGsvTXNnRGVwb3NpdFwiLFxuICAgICAgICAgICAgdG9BbWlubzogKHsgYW1vdW50LCBkZXBvc2l0b3IsIHByb3Bvc2FsSWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGFtb3VudCxcbiAgICAgICAgICAgICAgICAgICAgZGVwb3NpdG9yLFxuICAgICAgICAgICAgICAgICAgICBwcm9wb3NhbF9pZDogcHJvcG9zYWxJZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZnJvbUFtaW5vOiAoeyBhbW91bnQsIGRlcG9zaXRvciwgcHJvcG9zYWxfaWQgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGFtb3VudDogQXJyYXkuZnJvbShhbW91bnQpLFxuICAgICAgICAgICAgICAgICAgICBkZXBvc2l0b3IsXG4gICAgICAgICAgICAgICAgICAgIHByb3Bvc2FsSWQ6IEJpZ0ludChwcm9wb3NhbF9pZCksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIFwiL2Nvc21vcy5nb3YudjFiZXRhMS5Nc2dWb3RlXCI6IHtcbiAgICAgICAgICAgIGFtaW5vVHlwZTogXCJjb3Ntb3Mtc2RrL01zZ1ZvdGVcIixcbiAgICAgICAgICAgIHRvQW1pbm86ICh7IG9wdGlvbiwgcHJvcG9zYWxJZCwgdm90ZXIgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbjogb3B0aW9uLFxuICAgICAgICAgICAgICAgICAgICBwcm9wb3NhbF9pZDogcHJvcG9zYWxJZC50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICB2b3Rlcjogdm90ZXIsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBmcm9tQW1pbm86ICh7IG9wdGlvbiwgcHJvcG9zYWxfaWQsIHZvdGVyIH0pID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb246ICgwLCBnb3ZfMS52b3RlT3B0aW9uRnJvbUpTT04pKG9wdGlvbiksXG4gICAgICAgICAgICAgICAgICAgIHByb3Bvc2FsSWQ6IEJpZ0ludChwcm9wb3NhbF9pZCksXG4gICAgICAgICAgICAgICAgICAgIHZvdGVyOiB2b3RlcixcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgXCIvY29zbW9zLmdvdi52MWJldGExLk1zZ1ZvdGVXZWlnaHRlZFwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dWb3RlV2VpZ2h0ZWRcIixcbiAgICAgICAgICAgIHRvQW1pbm86ICh7IG9wdGlvbnMsIHByb3Bvc2FsSWQsIHZvdGVyIH0pID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBvcHRpb25zOiBvcHRpb25zLm1hcCgobykgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbjogby5vcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBXZWlnaHQgaXMgYmV0d2VlbiAwIGFuZCAxLCBzbyB3ZSBhbHdheXMgaGF2ZSAyMCBjaGFyYWN0ZXJzIHdoZW4gcHJpbnRpbmcgYWxsIHRyYWlsaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB6ZXJvcyAoZS5nLiBcIjAuNzAwMDAwMDAwMDAwMDAwMDAwXCIgb3IgXCIxLjAwMDAwMDAwMDAwMDAwMDAwMFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgd2VpZ2h0OiAoMCwgcXVlcnljbGllbnRfMS5kZWNvZGVDb3Ntb3NTZGtEZWNGcm9tUHJvdG8pKG8ud2VpZ2h0KS50b1N0cmluZygpLnBhZEVuZCgyMCwgXCIwXCIpLFxuICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgICAgIHByb3Bvc2FsX2lkOiBwcm9wb3NhbElkLnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIHZvdGVyOiB2b3RlcixcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZyb21BbWlubzogKHsgb3B0aW9ucywgcHJvcG9zYWxfaWQsIHZvdGVyIH0pID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBwcm9wb3NhbElkOiBCaWdJbnQocHJvcG9zYWxfaWQpLFxuICAgICAgICAgICAgICAgICAgICB2b3Rlcjogdm90ZXIsXG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IG9wdGlvbnMubWFwKChvKSA9PiAoe1xuICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uOiAoMCwgZ292XzEudm90ZU9wdGlvbkZyb21KU09OKShvLm9wdGlvbiksXG4gICAgICAgICAgICAgICAgICAgICAgICB3ZWlnaHQ6IG1hdGhfMS5EZWNpbWFsLmZyb21Vc2VySW5wdXQoby53ZWlnaHQsIDE4KS5hdG9taWNzLFxuICAgICAgICAgICAgICAgICAgICB9KSksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIFwiL2Nvc21vcy5nb3YudjFiZXRhMS5Nc2dTdWJtaXRQcm9wb3NhbFwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dTdWJtaXRQcm9wb3NhbFwiLFxuICAgICAgICAgICAgdG9BbWlubzogKHsgaW5pdGlhbERlcG9zaXQsIHByb3Bvc2VyLCBjb250ZW50LCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGwpKGNvbnRlbnQpO1xuICAgICAgICAgICAgICAgIGxldCBwcm9wb3NhbDtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGNvbnRlbnQudHlwZVVybCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiL2Nvc21vcy5nb3YudjFiZXRhMS5UZXh0UHJvcG9zYWxcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdGV4dFByb3Bvc2FsID0gZ292XzEuVGV4dFByb3Bvc2FsLmRlY29kZShjb250ZW50LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHByb3Bvc2FsID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwiY29zbW9zLXNkay9UZXh0UHJvcG9zYWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogdGV4dFByb3Bvc2FsLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGV4dFByb3Bvc2FsLnRpdGxlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgcHJvcG9zYWwgdHlwZTogJyR7Y29udGVudC50eXBlVXJsfSdgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgaW5pdGlhbF9kZXBvc2l0OiBpbml0aWFsRGVwb3NpdCxcbiAgICAgICAgICAgICAgICAgICAgcHJvcG9zZXI6IHByb3Bvc2VyLFxuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiBwcm9wb3NhbCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGZyb21BbWlubzogKHsgaW5pdGlhbF9kZXBvc2l0LCBwcm9wb3NlciwgY29udGVudCwgfSkgPT4ge1xuICAgICAgICAgICAgICAgIGxldCBhbnlfY29udGVudDtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGNvbnRlbnQudHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiY29zbW9zLXNkay9UZXh0UHJvcG9zYWxcIjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gY29udGVudDtcbiAgICAgICAgICAgICAgICAgICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoKDAsIHV0aWxzXzEuaXNOb25OdWxsT2JqZWN0KSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyB0aXRsZSwgZGVzY3JpcHRpb24gfSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KSh0eXBlb2YgdGl0bGUgPT09IFwic3RyaW5nXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KSh0eXBlb2YgZGVzY3JpcHRpb24gPT09IFwic3RyaW5nXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYW55X2NvbnRlbnQgPSBhbnlfMS5BbnkuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVVcmw6IFwiL2Nvc21vcy5nb3YudjFiZXRhMS5UZXh0UHJvcG9zYWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ292XzEuVGV4dFByb3Bvc2FsLmVuY29kZShnb3ZfMS5UZXh0UHJvcG9zYWwuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBkZXNjcmlwdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkuZmluaXNoKCksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuc3VwcG9ydGVkIHByb3Bvc2FsIHR5cGU6ICcke2NvbnRlbnQudHlwZX0nYCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIGluaXRpYWxEZXBvc2l0OiBBcnJheS5mcm9tKGluaXRpYWxfZGVwb3NpdCksXG4gICAgICAgICAgICAgICAgICAgIHByb3Bvc2VyOiBwcm9wb3NlcixcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogYW55X2NvbnRlbnQsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlR292QW1pbm9Db252ZXJ0ZXJzID0gY3JlYXRlR292QW1pbm9Db252ZXJ0ZXJzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YW1pbm9tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/messages.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/gov/messages.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgDepositEncodeObject = exports.govTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/gov/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/gov/v1/tx.js\");\nconst tx_2 = __webpack_require__(/*! cosmjs-types/cosmos/gov/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/gov/v1beta1/tx.js\");\nexports.govTypes = [\n    [\"/cosmos.gov.v1.MsgDeposit\", tx_1.MsgDeposit],\n    [\"/cosmos.gov.v1.MsgSubmitProposal\", tx_1.MsgSubmitProposal],\n    [\"/cosmos.gov.v1.MsgUpdateParams\", tx_1.MsgUpdateParams],\n    [\"/cosmos.gov.v1.MsgVote\", tx_1.MsgVote],\n    [\"/cosmos.gov.v1.MsgVoteWeighted\", tx_1.MsgVoteWeighted],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", tx_2.MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", tx_2.MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgVote\", tx_2.MsgVote],\n    [\"/cosmos.gov.v1beta1.MsgVoteWeighted\", tx_2.MsgVoteWeighted],\n];\nfunction isMsgDepositEncodeObject(object) {\n    return object.typeUrl === \"/cosmos.gov.v1beta1.MsgDeposit\";\n}\nexports.isMsgDepositEncodeObject = isMsgDepositEncodeObject;\nfunction isMsgSubmitProposalEncodeObject(object) {\n    return object.typeUrl === \"/cosmos.gov.v1beta1.MsgSubmitProposal\";\n}\nexports.isMsgSubmitProposalEncodeObject = isMsgSubmitProposalEncodeObject;\nfunction isMsgVoteEncodeObject(object) {\n    return object.typeUrl === \"/cosmos.gov.v1beta1.MsgVote\";\n}\nexports.isMsgVoteEncodeObject = isMsgVoteEncodeObject;\nfunction isMsgVoteWeightedEncodeObject(object) {\n    return object.typeUrl === \"/cosmos.gov.v1beta1.MsgVoteWeighted\";\n}\nexports.isMsgVoteWeightedEncodeObject = isMsgVoteWeightedEncodeObject;\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dvdi9tZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQ0FBcUMsR0FBRyw2QkFBNkIsR0FBRyx1Q0FBdUMsR0FBRyxnQ0FBZ0MsR0FBRyxnQkFBZ0I7QUFDckssYUFBYSxtQkFBTyxDQUFDLDRGQUErQjtBQUNwRCxhQUFhLG1CQUFPLENBQUMsc0dBQW9DO0FBQ3pELGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQztBQUNyQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dvdi9tZXNzYWdlcy5qcz83MmU2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc01zZ1ZvdGVXZWlnaHRlZEVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dWb3RlRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pc01zZ1N1Ym1pdFByb3Bvc2FsRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pc01zZ0RlcG9zaXRFbmNvZGVPYmplY3QgPSBleHBvcnRzLmdvdlR5cGVzID0gdm9pZCAwO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL2dvdi92MS90eFwiKTtcbmNvbnN0IHR4XzIgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9nb3YvdjFiZXRhMS90eFwiKTtcbmV4cG9ydHMuZ292VHlwZXMgPSBbXG4gICAgW1wiL2Nvc21vcy5nb3YudjEuTXNnRGVwb3NpdFwiLCB0eF8xLk1zZ0RlcG9zaXRdLFxuICAgIFtcIi9jb3Ntb3MuZ292LnYxLk1zZ1N1Ym1pdFByb3Bvc2FsXCIsIHR4XzEuTXNnU3VibWl0UHJvcG9zYWxdLFxuICAgIFtcIi9jb3Ntb3MuZ292LnYxLk1zZ1VwZGF0ZVBhcmFtc1wiLCB0eF8xLk1zZ1VwZGF0ZVBhcmFtc10sXG4gICAgW1wiL2Nvc21vcy5nb3YudjEuTXNnVm90ZVwiLCB0eF8xLk1zZ1ZvdGVdLFxuICAgIFtcIi9jb3Ntb3MuZ292LnYxLk1zZ1ZvdGVXZWlnaHRlZFwiLCB0eF8xLk1zZ1ZvdGVXZWlnaHRlZF0sXG4gICAgW1wiL2Nvc21vcy5nb3YudjFiZXRhMS5Nc2dEZXBvc2l0XCIsIHR4XzIuTXNnRGVwb3NpdF0sXG4gICAgW1wiL2Nvc21vcy5nb3YudjFiZXRhMS5Nc2dTdWJtaXRQcm9wb3NhbFwiLCB0eF8yLk1zZ1N1Ym1pdFByb3Bvc2FsXSxcbiAgICBbXCIvY29zbW9zLmdvdi52MWJldGExLk1zZ1ZvdGVcIiwgdHhfMi5Nc2dWb3RlXSxcbiAgICBbXCIvY29zbW9zLmdvdi52MWJldGExLk1zZ1ZvdGVXZWlnaHRlZFwiLCB0eF8yLk1zZ1ZvdGVXZWlnaHRlZF0sXG5dO1xuZnVuY3Rpb24gaXNNc2dEZXBvc2l0RW5jb2RlT2JqZWN0KG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QudHlwZVVybCA9PT0gXCIvY29zbW9zLmdvdi52MWJldGExLk1zZ0RlcG9zaXRcIjtcbn1cbmV4cG9ydHMuaXNNc2dEZXBvc2l0RW5jb2RlT2JqZWN0ID0gaXNNc2dEZXBvc2l0RW5jb2RlT2JqZWN0O1xuZnVuY3Rpb24gaXNNc2dTdWJtaXRQcm9wb3NhbEVuY29kZU9iamVjdChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0LnR5cGVVcmwgPT09IFwiL2Nvc21vcy5nb3YudjFiZXRhMS5Nc2dTdWJtaXRQcm9wb3NhbFwiO1xufVxuZXhwb3J0cy5pc01zZ1N1Ym1pdFByb3Bvc2FsRW5jb2RlT2JqZWN0ID0gaXNNc2dTdWJtaXRQcm9wb3NhbEVuY29kZU9iamVjdDtcbmZ1bmN0aW9uIGlzTXNnVm90ZUVuY29kZU9iamVjdChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0LnR5cGVVcmwgPT09IFwiL2Nvc21vcy5nb3YudjFiZXRhMS5Nc2dWb3RlXCI7XG59XG5leHBvcnRzLmlzTXNnVm90ZUVuY29kZU9iamVjdCA9IGlzTXNnVm90ZUVuY29kZU9iamVjdDtcbmZ1bmN0aW9uIGlzTXNnVm90ZVdlaWdodGVkRW5jb2RlT2JqZWN0KG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QudHlwZVVybCA9PT0gXCIvY29zbW9zLmdvdi52MWJldGExLk1zZ1ZvdGVXZWlnaHRlZFwiO1xufVxuZXhwb3J0cy5pc01zZ1ZvdGVXZWlnaHRlZEVuY29kZU9iamVjdCA9IGlzTXNnVm90ZVdlaWdodGVkRW5jb2RlT2JqZWN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/queries.js":
/*!********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/gov/queries.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupGovExtension = void 0;\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/gov/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/gov/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupGovExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        gov: {\n            params: async (parametersType) => {\n                const response = await queryService.Params({ paramsType: parametersType });\n                return response;\n            },\n            proposals: async (proposalStatus, depositorAddress, voterAddress, paginationKey) => {\n                const response = await queryService.Proposals({\n                    proposalStatus,\n                    depositor: depositorAddress,\n                    voter: voterAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            proposal: async (proposalId) => {\n                const response = await queryService.Proposal({ proposalId: (0, queryclient_1.longify)(proposalId) });\n                return response;\n            },\n            deposits: async (proposalId, paginationKey) => {\n                const response = await queryService.Deposits({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            deposit: async (proposalId, depositorAddress) => {\n                const response = await queryService.Deposit({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    depositor: depositorAddress,\n                });\n                return response;\n            },\n            tally: async (proposalId) => {\n                const response = await queryService.TallyResult({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                });\n                return response;\n            },\n            votes: async (proposalId, paginationKey) => {\n                const response = await queryService.Votes({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            vote: async (proposalId, voterAddress) => {\n                const response = await queryService.Vote({\n                    proposalId: (0, queryclient_1.longify)(proposalId),\n                    voter: voterAddress,\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupGovExtension = setupGovExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dvdi9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QixnQkFBZ0IsbUJBQU8sQ0FBQyw0R0FBdUM7QUFDL0Qsc0JBQXNCLG1CQUFPLENBQUMsMkZBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsNEJBQTRCO0FBQ3pGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBLCtEQUErRCxvREFBb0Q7QUFDbkg7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvZ292L3F1ZXJpZXMuanM/NmU0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0dXBHb3ZFeHRlbnNpb24gPSB2b2lkIDA7XG5jb25zdCBxdWVyeV8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvZ292L3YxYmV0YTEvcXVlcnlcIik7XG5jb25zdCBxdWVyeWNsaWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3F1ZXJ5Y2xpZW50XCIpO1xuZnVuY3Rpb24gc2V0dXBHb3ZFeHRlbnNpb24oYmFzZSkge1xuICAgIGNvbnN0IHJwYyA9ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVByb3RvYnVmUnBjQ2xpZW50KShiYXNlKTtcbiAgICAvLyBVc2UgdGhpcyBzZXJ2aWNlIHRvIGdldCBlYXN5IHR5cGVkIGFjY2VzcyB0byBxdWVyeSBtZXRob2RzXG4gICAgLy8gVGhpcyBjYW5ub3QgYmUgdXNlZCBmb3IgcHJvb2YgdmVyaWZpY2F0aW9uXG4gICAgY29uc3QgcXVlcnlTZXJ2aWNlID0gbmV3IHF1ZXJ5XzEuUXVlcnlDbGllbnRJbXBsKHJwYyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZ292OiB7XG4gICAgICAgICAgICBwYXJhbXM6IGFzeW5jIChwYXJhbWV0ZXJzVHlwZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLlBhcmFtcyh7IHBhcmFtc1R5cGU6IHBhcmFtZXRlcnNUeXBlIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwcm9wb3NhbHM6IGFzeW5jIChwcm9wb3NhbFN0YXR1cywgZGVwb3NpdG9yQWRkcmVzcywgdm90ZXJBZGRyZXNzLCBwYWdpbmF0aW9uS2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBxdWVyeVNlcnZpY2UuUHJvcG9zYWxzKHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcG9zYWxTdGF0dXMsXG4gICAgICAgICAgICAgICAgICAgIGRlcG9zaXRvcjogZGVwb3NpdG9yQWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgdm90ZXI6IHZvdGVyQWRkcmVzcyxcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByb3Bvc2FsOiBhc3luYyAocHJvcG9zYWxJZCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLlByb3Bvc2FsKHsgcHJvcG9zYWxJZDogKDAsIHF1ZXJ5Y2xpZW50XzEubG9uZ2lmeSkocHJvcG9zYWxJZCkgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRlcG9zaXRzOiBhc3luYyAocHJvcG9zYWxJZCwgcGFnaW5hdGlvbktleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkRlcG9zaXRzKHtcbiAgICAgICAgICAgICAgICAgICAgcHJvcG9zYWxJZDogKDAsIHF1ZXJ5Y2xpZW50XzEubG9uZ2lmeSkocHJvcG9zYWxJZCksXG4gICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVBhZ2luYXRpb24pKHBhZ2luYXRpb25LZXkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBkZXBvc2l0OiBhc3luYyAocHJvcG9zYWxJZCwgZGVwb3NpdG9yQWRkcmVzcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLkRlcG9zaXQoe1xuICAgICAgICAgICAgICAgICAgICBwcm9wb3NhbElkOiAoMCwgcXVlcnljbGllbnRfMS5sb25naWZ5KShwcm9wb3NhbElkKSxcbiAgICAgICAgICAgICAgICAgICAgZGVwb3NpdG9yOiBkZXBvc2l0b3JBZGRyZXNzLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0YWxseTogYXN5bmMgKHByb3Bvc2FsSWQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5UYWxseVJlc3VsdCh7XG4gICAgICAgICAgICAgICAgICAgIHByb3Bvc2FsSWQ6ICgwLCBxdWVyeWNsaWVudF8xLmxvbmdpZnkpKHByb3Bvc2FsSWQpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB2b3RlczogYXN5bmMgKHByb3Bvc2FsSWQsIHBhZ2luYXRpb25LZXkpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5Wb3Rlcyh7XG4gICAgICAgICAgICAgICAgICAgIHByb3Bvc2FsSWQ6ICgwLCBxdWVyeWNsaWVudF8xLmxvbmdpZnkpKHByb3Bvc2FsSWQpLFxuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdm90ZTogYXN5bmMgKHByb3Bvc2FsSWQsIHZvdGVyQWRkcmVzcykgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLlZvdGUoe1xuICAgICAgICAgICAgICAgICAgICBwcm9wb3NhbElkOiAoMCwgcXVlcnljbGllbnRfMS5sb25naWZ5KShwcm9wb3NhbElkKSxcbiAgICAgICAgICAgICAgICAgICAgdm90ZXI6IHZvdGVyQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnNldHVwR292RXh0ZW5zaW9uID0gc2V0dXBHb3ZFeHRlbnNpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyaWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/group/aminomessages.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/group/aminomessages.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createGroupAminoConverters = void 0;\nfunction createGroupAminoConverters() {\n    // Missing, see https://github.com/cosmos/cosmjs/issues/1441\n    return {};\n}\nexports.createGroupAminoConverters = createGroupAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dyb3VwL2FtaW5vbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvZ3JvdXAvYW1pbm9tZXNzYWdlcy5qcz83YWYzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVHcm91cEFtaW5vQ29udmVydGVycyA9IHZvaWQgMDtcbmZ1bmN0aW9uIGNyZWF0ZUdyb3VwQW1pbm9Db252ZXJ0ZXJzKCkge1xuICAgIC8vIE1pc3NpbmcsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21qcy9pc3N1ZXMvMTQ0MVxuICAgIHJldHVybiB7fTtcbn1cbmV4cG9ydHMuY3JlYXRlR3JvdXBBbWlub0NvbnZlcnRlcnMgPSBjcmVhdGVHcm91cEFtaW5vQ29udmVydGVycztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFtaW5vbWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/group/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/group/messages.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/group/messages.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.groupTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/group/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/group/v1/tx.js\");\nexports.groupTypes = [\n    [\"/cosmos.group.v1.MsgCreateGroup\", tx_1.MsgCreateGroup],\n    [\"/cosmos.group.v1.MsgCreateGroupPolicy\", tx_1.MsgCreateGroupPolicy],\n    [\"/cosmos.group.v1.MsgCreateGroupWithPolicy\", tx_1.MsgCreateGroupWithPolicy],\n    [\"/cosmos.group.v1.MsgExec\", tx_1.MsgExec],\n    [\"/cosmos.group.v1.MsgLeaveGroup\", tx_1.MsgLeaveGroup],\n    [\"/cosmos.group.v1.MsgSubmitProposal\", tx_1.MsgSubmitProposal],\n    [\"/cosmos.group.v1.MsgUpdateGroupAdmin\", tx_1.MsgUpdateGroupAdmin],\n    [\"/cosmos.group.v1.MsgUpdateGroupMembers\", tx_1.MsgUpdateGroupMembers],\n    [\"/cosmos.group.v1.MsgUpdateGroupMetadata\", tx_1.MsgUpdateGroupMetadata],\n    [\"/cosmos.group.v1.MsgUpdateGroupPolicyAdmin\", tx_1.MsgUpdateGroupPolicyAdmin],\n    [\"/cosmos.group.v1.MsgUpdateGroupPolicyDecisionPolicy\", tx_1.MsgUpdateGroupPolicyDecisionPolicy],\n    [\"/cosmos.group.v1.MsgUpdateGroupPolicyMetadata\", tx_1.MsgUpdateGroupPolicyMetadata],\n    [\"/cosmos.group.v1.MsgVote\", tx_1.MsgVote],\n    [\"/cosmos.group.v1.MsgWithdrawProposal\", tx_1.MsgWithdrawProposal],\n];\n// There are no EncodeObject implementations for the new v1 message types because\n// those things don't scale (https://github.com/cosmos/cosmjs/issues/1440). We need to\n// address this more fundamentally. Users can use\n// const msg = {\n//   typeUrl: \"/cosmos.group.v1.MsgCreateGroup\",\n//   value: MsgCreateGroup.fromPartial({ ... })\n// }\n// in their app.\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2dyb3VwL21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFrQjtBQUNsQixhQUFhLG1CQUFPLENBQUMsZ0dBQWlDO0FBQ3RELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLEtBQUs7QUFDOUM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvZ3JvdXAvbWVzc2FnZXMuanM/YzQ4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ3JvdXBUeXBlcyA9IHZvaWQgMDtcbmNvbnN0IHR4XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9ncm91cC92MS90eFwiKTtcbmV4cG9ydHMuZ3JvdXBUeXBlcyA9IFtcbiAgICBbXCIvY29zbW9zLmdyb3VwLnYxLk1zZ0NyZWF0ZUdyb3VwXCIsIHR4XzEuTXNnQ3JlYXRlR3JvdXBdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnQ3JlYXRlR3JvdXBQb2xpY3lcIiwgdHhfMS5Nc2dDcmVhdGVHcm91cFBvbGljeV0sXG4gICAgW1wiL2Nvc21vcy5ncm91cC52MS5Nc2dDcmVhdGVHcm91cFdpdGhQb2xpY3lcIiwgdHhfMS5Nc2dDcmVhdGVHcm91cFdpdGhQb2xpY3ldLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnRXhlY1wiLCB0eF8xLk1zZ0V4ZWNdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnTGVhdmVHcm91cFwiLCB0eF8xLk1zZ0xlYXZlR3JvdXBdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnU3VibWl0UHJvcG9zYWxcIiwgdHhfMS5Nc2dTdWJtaXRQcm9wb3NhbF0sXG4gICAgW1wiL2Nvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cEFkbWluXCIsIHR4XzEuTXNnVXBkYXRlR3JvdXBBZG1pbl0sXG4gICAgW1wiL2Nvc21vcy5ncm91cC52MS5Nc2dVcGRhdGVHcm91cE1lbWJlcnNcIiwgdHhfMS5Nc2dVcGRhdGVHcm91cE1lbWJlcnNdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBNZXRhZGF0YVwiLCB0eF8xLk1zZ1VwZGF0ZUdyb3VwTWV0YWRhdGFdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBQb2xpY3lBZG1pblwiLCB0eF8xLk1zZ1VwZGF0ZUdyb3VwUG9saWN5QWRtaW5dLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBQb2xpY3lEZWNpc2lvblBvbGljeVwiLCB0eF8xLk1zZ1VwZGF0ZUdyb3VwUG9saWN5RGVjaXNpb25Qb2xpY3ldLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnVXBkYXRlR3JvdXBQb2xpY3lNZXRhZGF0YVwiLCB0eF8xLk1zZ1VwZGF0ZUdyb3VwUG9saWN5TWV0YWRhdGFdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnVm90ZVwiLCB0eF8xLk1zZ1ZvdGVdLFxuICAgIFtcIi9jb3Ntb3MuZ3JvdXAudjEuTXNnV2l0aGRyYXdQcm9wb3NhbFwiLCB0eF8xLk1zZ1dpdGhkcmF3UHJvcG9zYWxdLFxuXTtcbi8vIFRoZXJlIGFyZSBubyBFbmNvZGVPYmplY3QgaW1wbGVtZW50YXRpb25zIGZvciB0aGUgbmV3IHYxIG1lc3NhZ2UgdHlwZXMgYmVjYXVzZVxuLy8gdGhvc2UgdGhpbmdzIGRvbid0IHNjYWxlIChodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21qcy9pc3N1ZXMvMTQ0MCkuIFdlIG5lZWQgdG9cbi8vIGFkZHJlc3MgdGhpcyBtb3JlIGZ1bmRhbWVudGFsbHkuIFVzZXJzIGNhbiB1c2Vcbi8vIGNvbnN0IG1zZyA9IHtcbi8vICAgdHlwZVVybDogXCIvY29zbW9zLmdyb3VwLnYxLk1zZ0NyZWF0ZUdyb3VwXCIsXG4vLyAgIHZhbHVlOiBNc2dDcmVhdGVHcm91cC5mcm9tUGFydGlhbCh7IC4uLiB9KVxuLy8gfVxuLy8gaW4gdGhlaXIgYXBwLlxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/group/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createIbcAminoConverters = exports.isAminoMsgTransfer = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst tx_1 = __webpack_require__(/*! cosmjs-types/ibc/applications/transfer/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js\");\nfunction isAminoMsgTransfer(msg) {\n    return msg.type === \"cosmos-sdk/MsgTransfer\";\n}\nexports.isAminoMsgTransfer = isAminoMsgTransfer;\nfunction createIbcAminoConverters() {\n    return {\n        \"/ibc.applications.transfer.v1.MsgTransfer\": {\n            aminoType: \"cosmos-sdk/MsgTransfer\",\n            toAmino: ({ sourcePort, sourceChannel, token, sender, receiver, timeoutHeight, timeoutTimestamp, memo, }) => ({\n                source_port: sourcePort,\n                source_channel: sourceChannel,\n                token: token,\n                sender: sender,\n                receiver: receiver,\n                timeout_height: timeoutHeight\n                    ? {\n                        revision_height: (0, amino_1.omitDefault)(timeoutHeight.revisionHeight)?.toString(),\n                        revision_number: (0, amino_1.omitDefault)(timeoutHeight.revisionNumber)?.toString(),\n                    }\n                    : {},\n                timeout_timestamp: (0, amino_1.omitDefault)(timeoutTimestamp)?.toString(),\n                memo: (0, amino_1.omitDefault)(memo),\n            }),\n            fromAmino: ({ source_port, source_channel, token, sender, receiver, timeout_height, timeout_timestamp, memo, }) => tx_1.MsgTransfer.fromPartial({\n                sourcePort: source_port,\n                sourceChannel: source_channel,\n                token: token,\n                sender: sender,\n                receiver: receiver,\n                timeoutHeight: timeout_height\n                    ? {\n                        revisionHeight: BigInt(timeout_height.revision_height || \"0\"),\n                        revisionNumber: BigInt(timeout_height.revision_number || \"0\"),\n                    }\n                    : undefined,\n                timeoutTimestamp: BigInt(timeout_timestamp || \"0\"),\n                memo: memo ?? \"\",\n            }),\n        },\n    };\n}\nexports.createIbcAminoConverters = createIbcAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2liYy9hbWlub21lc3NhZ2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdDQUFnQyxHQUFHLDBCQUEwQjtBQUM3RDtBQUNBLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFlO0FBQ3ZDLGFBQWEsbUJBQU8sQ0FBQywwSEFBOEM7QUFDbkU7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDRGQUE0RjtBQUNwSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsYUFBYTtBQUNiLDBCQUEwQixnR0FBZ0c7QUFDMUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9pYmMvYW1pbm9tZXNzYWdlcy5qcz80YWNlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVJYmNBbWlub0NvbnZlcnRlcnMgPSBleHBvcnRzLmlzQW1pbm9Nc2dUcmFuc2ZlciA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuY29uc3QgYW1pbm9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2FtaW5vXCIpO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvaWJjL2FwcGxpY2F0aW9ucy90cmFuc2Zlci92MS90eFwiKTtcbmZ1bmN0aW9uIGlzQW1pbm9Nc2dUcmFuc2Zlcihtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dUcmFuc2ZlclwiO1xufVxuZXhwb3J0cy5pc0FtaW5vTXNnVHJhbnNmZXIgPSBpc0FtaW5vTXNnVHJhbnNmZXI7XG5mdW5jdGlvbiBjcmVhdGVJYmNBbWlub0NvbnZlcnRlcnMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgXCIvaWJjLmFwcGxpY2F0aW9ucy50cmFuc2Zlci52MS5Nc2dUcmFuc2ZlclwiOiB7XG4gICAgICAgICAgICBhbWlub1R5cGU6IFwiY29zbW9zLXNkay9Nc2dUcmFuc2ZlclwiLFxuICAgICAgICAgICAgdG9BbWlubzogKHsgc291cmNlUG9ydCwgc291cmNlQ2hhbm5lbCwgdG9rZW4sIHNlbmRlciwgcmVjZWl2ZXIsIHRpbWVvdXRIZWlnaHQsIHRpbWVvdXRUaW1lc3RhbXAsIG1lbW8sIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgc291cmNlX3BvcnQ6IHNvdXJjZVBvcnQsXG4gICAgICAgICAgICAgICAgc291cmNlX2NoYW5uZWw6IHNvdXJjZUNoYW5uZWwsXG4gICAgICAgICAgICAgICAgdG9rZW46IHRva2VuLFxuICAgICAgICAgICAgICAgIHNlbmRlcjogc2VuZGVyLFxuICAgICAgICAgICAgICAgIHJlY2VpdmVyOiByZWNlaXZlcixcbiAgICAgICAgICAgICAgICB0aW1lb3V0X2hlaWdodDogdGltZW91dEhlaWdodFxuICAgICAgICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldmlzaW9uX2hlaWdodDogKDAsIGFtaW5vXzEub21pdERlZmF1bHQpKHRpbWVvdXRIZWlnaHQucmV2aXNpb25IZWlnaHQpPy50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV2aXNpb25fbnVtYmVyOiAoMCwgYW1pbm9fMS5vbWl0RGVmYXVsdCkodGltZW91dEhlaWdodC5yZXZpc2lvbk51bWJlcik/LnRvU3RyaW5nKCksXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgOiB7fSxcbiAgICAgICAgICAgICAgICB0aW1lb3V0X3RpbWVzdGFtcDogKDAsIGFtaW5vXzEub21pdERlZmF1bHQpKHRpbWVvdXRUaW1lc3RhbXApPy50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgIG1lbW86ICgwLCBhbWlub18xLm9taXREZWZhdWx0KShtZW1vKSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgZnJvbUFtaW5vOiAoeyBzb3VyY2VfcG9ydCwgc291cmNlX2NoYW5uZWwsIHRva2VuLCBzZW5kZXIsIHJlY2VpdmVyLCB0aW1lb3V0X2hlaWdodCwgdGltZW91dF90aW1lc3RhbXAsIG1lbW8sIH0pID0+IHR4XzEuTXNnVHJhbnNmZXIuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgIHNvdXJjZVBvcnQ6IHNvdXJjZV9wb3J0LFxuICAgICAgICAgICAgICAgIHNvdXJjZUNoYW5uZWw6IHNvdXJjZV9jaGFubmVsLFxuICAgICAgICAgICAgICAgIHRva2VuOiB0b2tlbixcbiAgICAgICAgICAgICAgICBzZW5kZXI6IHNlbmRlcixcbiAgICAgICAgICAgICAgICByZWNlaXZlcjogcmVjZWl2ZXIsXG4gICAgICAgICAgICAgICAgdGltZW91dEhlaWdodDogdGltZW91dF9oZWlnaHRcbiAgICAgICAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXZpc2lvbkhlaWdodDogQmlnSW50KHRpbWVvdXRfaGVpZ2h0LnJldmlzaW9uX2hlaWdodCB8fCBcIjBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICByZXZpc2lvbk51bWJlcjogQmlnSW50KHRpbWVvdXRfaGVpZ2h0LnJldmlzaW9uX251bWJlciB8fCBcIjBcIiksXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgdGltZW91dFRpbWVzdGFtcDogQmlnSW50KHRpbWVvdXRfdGltZXN0YW1wIHx8IFwiMFwiKSxcbiAgICAgICAgICAgICAgICBtZW1vOiBtZW1vID8/IFwiXCIsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5jcmVhdGVJYmNBbWlub0NvbnZlcnRlcnMgPSBjcmVhdGVJYmNBbWlub0NvbnZlcnRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbWlub21lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/messages.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/ibc/messages.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMsgTransferEncodeObject = exports.ibcTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/ibc/applications/transfer/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js\");\nconst tx_2 = __webpack_require__(/*! cosmjs-types/ibc/core/channel/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/channel/v1/tx.js\");\nconst tx_3 = __webpack_require__(/*! cosmjs-types/ibc/core/client/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/client/v1/tx.js\");\nconst tx_4 = __webpack_require__(/*! cosmjs-types/ibc/core/connection/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/connection/v1/tx.js\");\nexports.ibcTypes = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", tx_1.MsgTransfer],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", tx_2.MsgAcknowledgement],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", tx_2.MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", tx_2.MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", tx_2.MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", tx_2.MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", tx_2.MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", tx_2.MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", tx_2.MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeout\", tx_2.MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", tx_2.MsgTimeoutOnClose],\n    [\"/ibc.core.client.v1.MsgCreateClient\", tx_3.MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", tx_3.MsgSubmitMisbehaviour],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", tx_3.MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", tx_3.MsgUpgradeClient],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", tx_4.MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", tx_4.MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", tx_4.MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", tx_4.MsgConnectionOpenTry],\n];\nfunction isMsgTransferEncodeObject(object) {\n    return object.typeUrl === \"/ibc.applications.transfer.v1.MsgTransfer\";\n}\nexports.isMsgTransferEncodeObject = isMsgTransferEncodeObject;\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2liYy9tZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUMsR0FBRyxnQkFBZ0I7QUFDcEQsYUFBYSxtQkFBTyxDQUFDLDBIQUE4QztBQUNuRSxhQUFhLG1CQUFPLENBQUMsd0dBQXFDO0FBQzFELGFBQWEsbUJBQU8sQ0FBQyxzR0FBb0M7QUFDekQsYUFBYSxtQkFBTyxDQUFDLDhHQUF3QztBQUM3RCxnQkFBZ0I7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2liYy9tZXNzYWdlcy5qcz9jY2JiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc01zZ1RyYW5zZmVyRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pYmNUeXBlcyA9IHZvaWQgMDtcbmNvbnN0IHR4XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2liYy9hcHBsaWNhdGlvbnMvdHJhbnNmZXIvdjEvdHhcIik7XG5jb25zdCB0eF8yID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9pYmMvY29yZS9jaGFubmVsL3YxL3R4XCIpO1xuY29uc3QgdHhfMyA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvaWJjL2NvcmUvY2xpZW50L3YxL3R4XCIpO1xuY29uc3QgdHhfNCA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvaWJjL2NvcmUvY29ubmVjdGlvbi92MS90eFwiKTtcbmV4cG9ydHMuaWJjVHlwZXMgPSBbXG4gICAgW1wiL2liYy5hcHBsaWNhdGlvbnMudHJhbnNmZXIudjEuTXNnVHJhbnNmZXJcIiwgdHhfMS5Nc2dUcmFuc2Zlcl0sXG4gICAgW1wiL2liYy5jb3JlLmNoYW5uZWwudjEuTXNnQWNrbm93bGVkZ2VtZW50XCIsIHR4XzIuTXNnQWNrbm93bGVkZ2VtZW50XSxcbiAgICBbXCIvaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dDaGFubmVsQ2xvc2VDb25maXJtXCIsIHR4XzIuTXNnQ2hhbm5lbENsb3NlQ29uZmlybV0sXG4gICAgW1wiL2liYy5jb3JlLmNoYW5uZWwudjEuTXNnQ2hhbm5lbENsb3NlSW5pdFwiLCB0eF8yLk1zZ0NoYW5uZWxDbG9zZUluaXRdLFxuICAgIFtcIi9pYmMuY29yZS5jaGFubmVsLnYxLk1zZ0NoYW5uZWxPcGVuQWNrXCIsIHR4XzIuTXNnQ2hhbm5lbE9wZW5BY2tdLFxuICAgIFtcIi9pYmMuY29yZS5jaGFubmVsLnYxLk1zZ0NoYW5uZWxPcGVuQ29uZmlybVwiLCB0eF8yLk1zZ0NoYW5uZWxPcGVuQ29uZmlybV0sXG4gICAgW1wiL2liYy5jb3JlLmNoYW5uZWwudjEuTXNnQ2hhbm5lbE9wZW5Jbml0XCIsIHR4XzIuTXNnQ2hhbm5lbE9wZW5Jbml0XSxcbiAgICBbXCIvaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dDaGFubmVsT3BlblRyeVwiLCB0eF8yLk1zZ0NoYW5uZWxPcGVuVHJ5XSxcbiAgICBbXCIvaWJjLmNvcmUuY2hhbm5lbC52MS5Nc2dSZWN2UGFja2V0XCIsIHR4XzIuTXNnUmVjdlBhY2tldF0sXG4gICAgW1wiL2liYy5jb3JlLmNoYW5uZWwudjEuTXNnVGltZW91dFwiLCB0eF8yLk1zZ1RpbWVvdXRdLFxuICAgIFtcIi9pYmMuY29yZS5jaGFubmVsLnYxLk1zZ1RpbWVvdXRPbkNsb3NlXCIsIHR4XzIuTXNnVGltZW91dE9uQ2xvc2VdLFxuICAgIFtcIi9pYmMuY29yZS5jbGllbnQudjEuTXNnQ3JlYXRlQ2xpZW50XCIsIHR4XzMuTXNnQ3JlYXRlQ2xpZW50XSxcbiAgICBbXCIvaWJjLmNvcmUuY2xpZW50LnYxLk1zZ1N1Ym1pdE1pc2JlaGF2aW91clwiLCB0eF8zLk1zZ1N1Ym1pdE1pc2JlaGF2aW91cl0sXG4gICAgW1wiL2liYy5jb3JlLmNsaWVudC52MS5Nc2dVcGRhdGVDbGllbnRcIiwgdHhfMy5Nc2dVcGRhdGVDbGllbnRdLFxuICAgIFtcIi9pYmMuY29yZS5jbGllbnQudjEuTXNnVXBncmFkZUNsaWVudFwiLCB0eF8zLk1zZ1VwZ3JhZGVDbGllbnRdLFxuICAgIFtcIi9pYmMuY29yZS5jb25uZWN0aW9uLnYxLk1zZ0Nvbm5lY3Rpb25PcGVuQWNrXCIsIHR4XzQuTXNnQ29ubmVjdGlvbk9wZW5BY2tdLFxuICAgIFtcIi9pYmMuY29yZS5jb25uZWN0aW9uLnYxLk1zZ0Nvbm5lY3Rpb25PcGVuQ29uZmlybVwiLCB0eF80Lk1zZ0Nvbm5lY3Rpb25PcGVuQ29uZmlybV0sXG4gICAgW1wiL2liYy5jb3JlLmNvbm5lY3Rpb24udjEuTXNnQ29ubmVjdGlvbk9wZW5Jbml0XCIsIHR4XzQuTXNnQ29ubmVjdGlvbk9wZW5Jbml0XSxcbiAgICBbXCIvaWJjLmNvcmUuY29ubmVjdGlvbi52MS5Nc2dDb25uZWN0aW9uT3BlblRyeVwiLCB0eF80Lk1zZ0Nvbm5lY3Rpb25PcGVuVHJ5XSxcbl07XG5mdW5jdGlvbiBpc01zZ1RyYW5zZmVyRW5jb2RlT2JqZWN0KG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QudHlwZVVybCA9PT0gXCIvaWJjLmFwcGxpY2F0aW9ucy50cmFuc2Zlci52MS5Nc2dUcmFuc2ZlclwiO1xufVxuZXhwb3J0cy5pc01zZ1RyYW5zZmVyRW5jb2RlT2JqZWN0ID0gaXNNc2dUcmFuc2ZlckVuY29kZU9iamVjdDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/queries.js":
/*!********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/ibc/queries.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupIbcExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst query_1 = __webpack_require__(/*! cosmjs-types/ibc/applications/transfer/v1/query */ \"(ssr)/./node_modules/cosmjs-types/ibc/applications/transfer/v1/query.js\");\nconst channel_1 = __webpack_require__(/*! cosmjs-types/ibc/core/channel/v1/channel */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/channel/v1/channel.js\");\nconst query_2 = __webpack_require__(/*! cosmjs-types/ibc/core/channel/v1/query */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/channel/v1/query.js\");\nconst query_3 = __webpack_require__(/*! cosmjs-types/ibc/core/client/v1/query */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/client/v1/query.js\");\nconst query_4 = __webpack_require__(/*! cosmjs-types/ibc/core/connection/v1/query */ \"(ssr)/./node_modules/cosmjs-types/ibc/core/connection/v1/query.js\");\nconst tendermint_1 = __webpack_require__(/*! cosmjs-types/ibc/lightclients/tendermint/v1/tendermint */ \"(ssr)/./node_modules/cosmjs-types/ibc/lightclients/tendermint/v1/tendermint.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction decodeTendermintClientStateAny(clientState) {\n    if (clientState?.typeUrl !== \"/ibc.lightclients.tendermint.v1.ClientState\") {\n        throw new Error(`Unexpected client state type: ${clientState?.typeUrl}`);\n    }\n    return tendermint_1.ClientState.decode(clientState.value);\n}\nfunction decodeTendermintConsensusStateAny(clientState) {\n    if (clientState?.typeUrl !== \"/ibc.lightclients.tendermint.v1.ConsensusState\") {\n        throw new Error(`Unexpected client state type: ${clientState?.typeUrl}`);\n    }\n    return tendermint_1.ConsensusState.decode(clientState.value);\n}\nfunction setupIbcExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use these services to get easy typed access to query methods\n    // These cannot be used for proof verification\n    const channelQueryService = new query_2.QueryClientImpl(rpc);\n    const clientQueryService = new query_3.QueryClientImpl(rpc);\n    const connectionQueryService = new query_4.QueryClientImpl(rpc);\n    const transferQueryService = new query_1.QueryClientImpl(rpc);\n    return {\n        ibc: {\n            channel: {\n                channel: async (portId, channelId) => channelQueryService.Channel({\n                    portId: portId,\n                    channelId: channelId,\n                }),\n                channels: async (paginationKey) => channelQueryService.Channels({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allChannels: async () => {\n                    const channels = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await channelQueryService.Channels({\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        channels.push(...response.channels);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_2.QueryChannelsResponse.fromPartial({\n                        channels: channels,\n                        height: response.height,\n                    });\n                },\n                connectionChannels: async (connection, paginationKey) => channelQueryService.ConnectionChannels({\n                    connection: connection,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allConnectionChannels: async (connection) => {\n                    const channels = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await channelQueryService.ConnectionChannels({\n                            connection: connection,\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        channels.push(...response.channels);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_2.QueryConnectionChannelsResponse.fromPartial({\n                        channels: channels,\n                        height: response.height,\n                    });\n                },\n                clientState: async (portId, channelId) => channelQueryService.ChannelClientState({\n                    portId: portId,\n                    channelId: channelId,\n                }),\n                consensusState: async (portId, channelId, revisionNumber, revisionHeight) => channelQueryService.ChannelConsensusState({\n                    portId: portId,\n                    channelId: channelId,\n                    revisionNumber: BigInt(revisionNumber),\n                    revisionHeight: BigInt(revisionHeight),\n                }),\n                packetCommitment: async (portId, channelId, sequence) => channelQueryService.PacketCommitment({\n                    portId: portId,\n                    channelId: channelId,\n                    sequence: (0, queryclient_1.longify)(sequence),\n                }),\n                packetCommitments: async (portId, channelId, paginationKey) => channelQueryService.PacketCommitments({\n                    channelId: channelId,\n                    portId: portId,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allPacketCommitments: async (portId, channelId) => {\n                    const commitments = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await channelQueryService.PacketCommitments({\n                            channelId: channelId,\n                            portId: portId,\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        commitments.push(...response.commitments);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_2.QueryPacketCommitmentsResponse.fromPartial({\n                        commitments: commitments,\n                        height: response.height,\n                    });\n                },\n                packetReceipt: async (portId, channelId, sequence) => channelQueryService.PacketReceipt({\n                    portId: portId,\n                    channelId: channelId,\n                    sequence: (0, queryclient_1.longify)(sequence),\n                }),\n                packetAcknowledgement: async (portId, channelId, sequence) => channelQueryService.PacketAcknowledgement({\n                    portId: portId,\n                    channelId: channelId,\n                    sequence: (0, queryclient_1.longify)(sequence),\n                }),\n                packetAcknowledgements: async (portId, channelId, paginationKey) => {\n                    const request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({\n                        portId: portId,\n                        channelId: channelId,\n                        pagination: (0, queryclient_1.createPagination)(paginationKey),\n                    });\n                    return channelQueryService.PacketAcknowledgements(request);\n                },\n                allPacketAcknowledgements: async (portId, channelId) => {\n                    const acknowledgements = [];\n                    let response;\n                    let key;\n                    do {\n                        const request = query_2.QueryPacketAcknowledgementsRequest.fromPartial({\n                            channelId: channelId,\n                            portId: portId,\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        response = await channelQueryService.PacketAcknowledgements(request);\n                        acknowledgements.push(...response.acknowledgements);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_2.QueryPacketAcknowledgementsResponse.fromPartial({\n                        acknowledgements: acknowledgements,\n                        height: response.height,\n                    });\n                },\n                unreceivedPackets: async (portId, channelId, packetCommitmentSequences) => channelQueryService.UnreceivedPackets({\n                    portId: portId,\n                    channelId: channelId,\n                    packetCommitmentSequences: packetCommitmentSequences.map((s) => BigInt(s)),\n                }),\n                unreceivedAcks: async (portId, channelId, packetAckSequences) => channelQueryService.UnreceivedAcks({\n                    portId: portId,\n                    channelId: channelId,\n                    packetAckSequences: packetAckSequences.map((s) => BigInt(s)),\n                }),\n                nextSequenceReceive: async (portId, channelId) => channelQueryService.NextSequenceReceive({\n                    portId: portId,\n                    channelId: channelId,\n                }),\n            },\n            client: {\n                state: async (clientId) => clientQueryService.ClientState({ clientId }),\n                states: async (paginationKey) => clientQueryService.ClientStates({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allStates: async () => {\n                    const clientStates = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await clientQueryService.ClientStates({\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        clientStates.push(...response.clientStates);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_3.QueryClientStatesResponse.fromPartial({\n                        clientStates: clientStates,\n                    });\n                },\n                consensusState: async (clientId, consensusHeight) => clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({\n                    clientId: clientId,\n                    revisionHeight: consensusHeight !== undefined ? BigInt(consensusHeight) : undefined,\n                    latestHeight: consensusHeight === undefined,\n                })),\n                consensusStates: async (clientId, paginationKey) => clientQueryService.ConsensusStates({\n                    clientId: clientId,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allConsensusStates: async (clientId) => {\n                    const consensusStates = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await clientQueryService.ConsensusStates({\n                            clientId: clientId,\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        consensusStates.push(...response.consensusStates);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_3.QueryConsensusStatesResponse.fromPartial({\n                        consensusStates: consensusStates,\n                    });\n                },\n                params: async () => clientQueryService.ClientParams({}),\n                stateTm: async (clientId) => {\n                    const response = await clientQueryService.ClientState({ clientId });\n                    return decodeTendermintClientStateAny(response.clientState);\n                },\n                statesTm: async (paginationKey) => {\n                    const { clientStates } = await clientQueryService.ClientStates({\n                        pagination: (0, queryclient_1.createPagination)(paginationKey),\n                    });\n                    return clientStates.map(({ clientState }) => decodeTendermintClientStateAny(clientState));\n                },\n                allStatesTm: async () => {\n                    const clientStates = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await clientQueryService.ClientStates({\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        clientStates.push(...response.clientStates);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return clientStates.map(({ clientState }) => decodeTendermintClientStateAny(clientState));\n                },\n                consensusStateTm: async (clientId, consensusHeight) => {\n                    const response = await clientQueryService.ConsensusState(query_3.QueryConsensusStateRequest.fromPartial({\n                        clientId: clientId,\n                        revisionHeight: consensusHeight?.revisionHeight,\n                        revisionNumber: consensusHeight?.revisionNumber,\n                        latestHeight: consensusHeight === undefined,\n                    }));\n                    return decodeTendermintConsensusStateAny(response.consensusState);\n                },\n            },\n            connection: {\n                connection: async (connectionId) => connectionQueryService.Connection({\n                    connectionId: connectionId,\n                }),\n                connections: async (paginationKey) => connectionQueryService.Connections({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allConnections: async () => {\n                    const connections = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await connectionQueryService.Connections({\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        connections.push(...response.connections);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_4.QueryConnectionsResponse.fromPartial({\n                        connections: connections,\n                        height: response.height,\n                    });\n                },\n                clientConnections: async (clientId) => connectionQueryService.ClientConnections({\n                    clientId: clientId,\n                }),\n                clientState: async (connectionId) => connectionQueryService.ConnectionClientState({\n                    connectionId: connectionId,\n                }),\n                consensusState: async (connectionId, revisionHeight) => connectionQueryService.ConnectionConsensusState(query_4.QueryConnectionConsensusStateRequest.fromPartial({\n                    connectionId: connectionId,\n                    revisionHeight: BigInt(revisionHeight),\n                })),\n            },\n            transfer: {\n                denomTrace: async (hash) => transferQueryService.DenomTrace({ hash: hash }),\n                denomTraces: async (paginationKey) => transferQueryService.DenomTraces({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                }),\n                allDenomTraces: async () => {\n                    const denomTraces = [];\n                    let response;\n                    let key;\n                    do {\n                        response = await transferQueryService.DenomTraces({\n                            pagination: (0, queryclient_1.createPagination)(key),\n                        });\n                        denomTraces.push(...response.denomTraces);\n                        key = response.pagination?.nextKey;\n                    } while (key && key.length);\n                    return query_1.QueryDenomTracesResponse.fromPartial({\n                        denomTraces: denomTraces,\n                    });\n                },\n                params: async () => transferQueryService.Params({}),\n            },\n            verified: {\n                channel: {\n                    channel: async (portId, channelId) => {\n                        // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L55-L65\n                        // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L117-L120\n                        const key = (0, encoding_1.toAscii)(`channelEnds/ports/${portId}/channels/${channelId}`);\n                        const { value } = await base.queryStoreVerified(\"ibc\", key);\n                        return value.length ? channel_1.Channel.decode(value) : null;\n                    },\n                    packetCommitment: async (portId, channelId, sequence) => {\n                        // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L128-L133\n                        // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L183-L185\n                        const key = (0, encoding_1.toAscii)(`commitments/ports/${portId}/channels/${channelId}/packets/${sequence}`);\n                        const { value } = await base.queryStoreVerified(\"ibc\", key);\n                        // keeper code doesn't parse, but returns raw\n                        return value;\n                    },\n                    packetAcknowledgement: async (portId, channelId, sequence) => {\n                        // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L159-L166\n                        // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L153-L156\n                        const key = (0, encoding_1.toAscii)(`acks/ports/${portId}/channels/${channelId}/acknowledgements/${sequence}`);\n                        const { value } = await base.queryStoreVerified(\"ibc\", key);\n                        // keeper code doesn't parse, but returns raw\n                        return value;\n                    },\n                    nextSequenceReceive: async (portId, channelId) => {\n                        // keeper: https://github.com/cosmos/cosmos-sdk/blob/3bafd8255a502e5a9cee07391cf8261538245dfd/x/ibc/04-channel/keeper/keeper.go#L92-L101\n                        // key: https://github.com/cosmos/cosmos-sdk/blob/ef0a7344af345882729598bc2958a21143930a6b/x/ibc/24-host/keys.go#L133-L136\n                        const key = (0, encoding_1.toAscii)(`seqAcks/ports/${portId}/channels/${channelId}/nextSequenceAck`);\n                        const { value } = await base.queryStoreVerified(\"ibc\", key);\n                        return value.length ? math_1.Uint64.fromBytes(value).toNumber() : null;\n                    },\n                },\n            },\n        },\n    };\n}\nexports.setupIbcExtension = setupIbcExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL2liYy9xdWVyaWVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHlCQUF5QjtBQUN6QjtBQUNBLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckMsZ0JBQWdCLG1CQUFPLENBQUMsZ0lBQWlEO0FBQ3pFLGtCQUFrQixtQkFBTyxDQUFDLGtIQUEwQztBQUNwRSxnQkFBZ0IsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDaEUsZ0JBQWdCLG1CQUFPLENBQUMsNEdBQXVDO0FBQy9ELGdCQUFnQixtQkFBTyxDQUFDLG9IQUEyQztBQUNuRSxxQkFBcUIsbUJBQU8sQ0FBQyw4SUFBd0Q7QUFDckYsc0JBQXNCLG1CQUFPLENBQUMsMkZBQW1CO0FBQ2pEO0FBQ0E7QUFDQSx5REFBeUQscUJBQXFCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5REFBeUQscUJBQXFCO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYjtBQUNBLDRFQUE0RSxVQUFVO0FBQ3RGO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCLHNFQUFzRTtBQUN0RTtBQUNBLDRFQUE0RSxVQUFVO0FBQ3RGO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EsNEJBQTRCLGVBQWU7QUFDM0M7QUFDQSxxQkFBcUI7QUFDckIsK0NBQStDLGFBQWE7QUFDNUQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEIsK0NBQStDLGFBQWE7QUFDNUQsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0EsOEVBQThFLFlBQVk7QUFDMUY7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCLGtFQUFrRTtBQUNsRSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlGQUFpRixPQUFPLFlBQVksVUFBVTtBQUM5RyxnQ0FBZ0MsUUFBUTtBQUN4QztBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxpRkFBaUYsT0FBTyxZQUFZLFVBQVUsV0FBVyxTQUFTO0FBQ2xJLGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsMEVBQTBFLE9BQU8sWUFBWSxVQUFVLG9CQUFvQixTQUFTO0FBQ3BJLGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsNkVBQTZFLE9BQU8sWUFBWSxVQUFVO0FBQzFHLGdDQUFnQyxRQUFRO0FBQ3hDO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9pYmMvcXVlcmllcy5qcz80ZmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zZXR1cEliY0V4dGVuc2lvbiA9IHZvaWQgMDtcbi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgbWF0aF8xID0gcmVxdWlyZShcIkBjb3NtanMvbWF0aFwiKTtcbmNvbnN0IHF1ZXJ5XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2liYy9hcHBsaWNhdGlvbnMvdHJhbnNmZXIvdjEvcXVlcnlcIik7XG5jb25zdCBjaGFubmVsXzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2liYy9jb3JlL2NoYW5uZWwvdjEvY2hhbm5lbFwiKTtcbmNvbnN0IHF1ZXJ5XzIgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2liYy9jb3JlL2NoYW5uZWwvdjEvcXVlcnlcIik7XG5jb25zdCBxdWVyeV8zID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9pYmMvY29yZS9jbGllbnQvdjEvcXVlcnlcIik7XG5jb25zdCBxdWVyeV80ID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9pYmMvY29yZS9jb25uZWN0aW9uL3YxL3F1ZXJ5XCIpO1xuY29uc3QgdGVuZGVybWludF8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9pYmMvbGlnaHRjbGllbnRzL3RlbmRlcm1pbnQvdjEvdGVuZGVybWludFwiKTtcbmNvbnN0IHF1ZXJ5Y2xpZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnljbGllbnRcIik7XG5mdW5jdGlvbiBkZWNvZGVUZW5kZXJtaW50Q2xpZW50U3RhdGVBbnkoY2xpZW50U3RhdGUpIHtcbiAgICBpZiAoY2xpZW50U3RhdGU/LnR5cGVVcmwgIT09IFwiL2liYy5saWdodGNsaWVudHMudGVuZGVybWludC52MS5DbGllbnRTdGF0ZVwiKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBjbGllbnQgc3RhdGUgdHlwZTogJHtjbGllbnRTdGF0ZT8udHlwZVVybH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHRlbmRlcm1pbnRfMS5DbGllbnRTdGF0ZS5kZWNvZGUoY2xpZW50U3RhdGUudmFsdWUpO1xufVxuZnVuY3Rpb24gZGVjb2RlVGVuZGVybWludENvbnNlbnN1c1N0YXRlQW55KGNsaWVudFN0YXRlKSB7XG4gICAgaWYgKGNsaWVudFN0YXRlPy50eXBlVXJsICE9PSBcIi9pYmMubGlnaHRjbGllbnRzLnRlbmRlcm1pbnQudjEuQ29uc2Vuc3VzU3RhdGVcIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgY2xpZW50IHN0YXRlIHR5cGU6ICR7Y2xpZW50U3RhdGU/LnR5cGVVcmx9YCk7XG4gICAgfVxuICAgIHJldHVybiB0ZW5kZXJtaW50XzEuQ29uc2Vuc3VzU3RhdGUuZGVjb2RlKGNsaWVudFN0YXRlLnZhbHVlKTtcbn1cbmZ1bmN0aW9uIHNldHVwSWJjRXh0ZW5zaW9uKGJhc2UpIHtcbiAgICBjb25zdCBycGMgPSAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQcm90b2J1ZlJwY0NsaWVudCkoYmFzZSk7XG4gICAgLy8gVXNlIHRoZXNlIHNlcnZpY2VzIHRvIGdldCBlYXN5IHR5cGVkIGFjY2VzcyB0byBxdWVyeSBtZXRob2RzXG4gICAgLy8gVGhlc2UgY2Fubm90IGJlIHVzZWQgZm9yIHByb29mIHZlcmlmaWNhdGlvblxuICAgIGNvbnN0IGNoYW5uZWxRdWVyeVNlcnZpY2UgPSBuZXcgcXVlcnlfMi5RdWVyeUNsaWVudEltcGwocnBjKTtcbiAgICBjb25zdCBjbGllbnRRdWVyeVNlcnZpY2UgPSBuZXcgcXVlcnlfMy5RdWVyeUNsaWVudEltcGwocnBjKTtcbiAgICBjb25zdCBjb25uZWN0aW9uUXVlcnlTZXJ2aWNlID0gbmV3IHF1ZXJ5XzQuUXVlcnlDbGllbnRJbXBsKHJwYyk7XG4gICAgY29uc3QgdHJhbnNmZXJRdWVyeVNlcnZpY2UgPSBuZXcgcXVlcnlfMS5RdWVyeUNsaWVudEltcGwocnBjKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBpYmM6IHtcbiAgICAgICAgICAgIGNoYW5uZWw6IHtcbiAgICAgICAgICAgICAgICBjaGFubmVsOiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQpID0+IGNoYW5uZWxRdWVyeVNlcnZpY2UuQ2hhbm5lbCh7XG4gICAgICAgICAgICAgICAgICAgIHBvcnRJZDogcG9ydElkLFxuICAgICAgICAgICAgICAgICAgICBjaGFubmVsSWQ6IGNoYW5uZWxJZCxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBjaGFubmVsczogYXN5bmMgKHBhZ2luYXRpb25LZXkpID0+IGNoYW5uZWxRdWVyeVNlcnZpY2UuQ2hhbm5lbHMoe1xuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBhbGxDaGFubmVsczogYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjaGFubmVscyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgICAgIGxldCBrZXk7XG4gICAgICAgICAgICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgY2hhbm5lbFF1ZXJ5U2VydmljZS5DaGFubmVscyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikoa2V5KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2hhbm5lbHMucHVzaCguLi5yZXNwb25zZS5jaGFubmVscyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXkgPSByZXNwb25zZS5wYWdpbmF0aW9uPy5uZXh0S2V5O1xuICAgICAgICAgICAgICAgICAgICB9IHdoaWxlIChrZXkgJiYga2V5Lmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBxdWVyeV8yLlF1ZXJ5Q2hhbm5lbHNSZXNwb25zZS5mcm9tUGFydGlhbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGFubmVsczogY2hhbm5lbHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJlc3BvbnNlLmhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBjb25uZWN0aW9uQ2hhbm5lbHM6IGFzeW5jIChjb25uZWN0aW9uLCBwYWdpbmF0aW9uS2V5KSA9PiBjaGFubmVsUXVlcnlTZXJ2aWNlLkNvbm5lY3Rpb25DaGFubmVscyh7XG4gICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb246IGNvbm5lY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVBhZ2luYXRpb24pKHBhZ2luYXRpb25LZXkpLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIGFsbENvbm5lY3Rpb25DaGFubmVsczogYXN5bmMgKGNvbm5lY3Rpb24pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2hhbm5lbHMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICBsZXQga2V5O1xuICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IGNoYW5uZWxRdWVyeVNlcnZpY2UuQ29ubmVjdGlvbkNoYW5uZWxzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uOiBjb25uZWN0aW9uLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVBhZ2luYXRpb24pKGtleSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWxzLnB1c2goLi4ucmVzcG9uc2UuY2hhbm5lbHMpO1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gcmVzcG9uc2UucGFnaW5hdGlvbj8ubmV4dEtleTtcbiAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoa2V5ICYmIGtleS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcXVlcnlfMi5RdWVyeUNvbm5lY3Rpb25DaGFubmVsc1Jlc3BvbnNlLmZyb21QYXJ0aWFsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWxzOiBjaGFubmVscyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogcmVzcG9uc2UuaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNsaWVudFN0YXRlOiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQpID0+IGNoYW5uZWxRdWVyeVNlcnZpY2UuQ2hhbm5lbENsaWVudFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgcG9ydElkOiBwb3J0SWQsXG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWxJZDogY2hhbm5lbElkLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIGNvbnNlbnN1c1N0YXRlOiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHJldmlzaW9uTnVtYmVyLCByZXZpc2lvbkhlaWdodCkgPT4gY2hhbm5lbFF1ZXJ5U2VydmljZS5DaGFubmVsQ29uc2Vuc3VzU3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbElkOiBjaGFubmVsSWQsXG4gICAgICAgICAgICAgICAgICAgIHJldmlzaW9uTnVtYmVyOiBCaWdJbnQocmV2aXNpb25OdW1iZXIpLFxuICAgICAgICAgICAgICAgICAgICByZXZpc2lvbkhlaWdodDogQmlnSW50KHJldmlzaW9uSGVpZ2h0KSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBwYWNrZXRDb21taXRtZW50OiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHNlcXVlbmNlKSA9PiBjaGFubmVsUXVlcnlTZXJ2aWNlLlBhY2tldENvbW1pdG1lbnQoe1xuICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbElkOiBjaGFubmVsSWQsXG4gICAgICAgICAgICAgICAgICAgIHNlcXVlbmNlOiAoMCwgcXVlcnljbGllbnRfMS5sb25naWZ5KShzZXF1ZW5jZSksXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgcGFja2V0Q29tbWl0bWVudHM6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCwgcGFnaW5hdGlvbktleSkgPT4gY2hhbm5lbFF1ZXJ5U2VydmljZS5QYWNrZXRDb21taXRtZW50cyh7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWxJZDogY2hhbm5lbElkLFxuICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgYWxsUGFja2V0Q29tbWl0bWVudHM6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb21taXRtZW50cyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgICAgIGxldCBrZXk7XG4gICAgICAgICAgICAgICAgICAgIGRvIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gYXdhaXQgY2hhbm5lbFF1ZXJ5U2VydmljZS5QYWNrZXRDb21taXRtZW50cyh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hhbm5lbElkOiBjaGFubmVsSWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9ydElkOiBwb3J0SWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikoa2V5KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tbWl0bWVudHMucHVzaCguLi5yZXNwb25zZS5jb21taXRtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXkgPSByZXNwb25zZS5wYWdpbmF0aW9uPy5uZXh0S2V5O1xuICAgICAgICAgICAgICAgICAgICB9IHdoaWxlIChrZXkgJiYga2V5Lmxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBxdWVyeV8yLlF1ZXJ5UGFja2V0Q29tbWl0bWVudHNSZXNwb25zZS5mcm9tUGFydGlhbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21taXRtZW50czogY29tbWl0bWVudHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IHJlc3BvbnNlLmhlaWdodCxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwYWNrZXRSZWNlaXB0OiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHNlcXVlbmNlKSA9PiBjaGFubmVsUXVlcnlTZXJ2aWNlLlBhY2tldFJlY2VpcHQoe1xuICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbElkOiBjaGFubmVsSWQsXG4gICAgICAgICAgICAgICAgICAgIHNlcXVlbmNlOiAoMCwgcXVlcnljbGllbnRfMS5sb25naWZ5KShzZXF1ZW5jZSksXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgcGFja2V0QWNrbm93bGVkZ2VtZW50OiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHNlcXVlbmNlKSA9PiBjaGFubmVsUXVlcnlTZXJ2aWNlLlBhY2tldEFja25vd2xlZGdlbWVudCh7XG4gICAgICAgICAgICAgICAgICAgIHBvcnRJZDogcG9ydElkLFxuICAgICAgICAgICAgICAgICAgICBjaGFubmVsSWQ6IGNoYW5uZWxJZCxcbiAgICAgICAgICAgICAgICAgICAgc2VxdWVuY2U6ICgwLCBxdWVyeWNsaWVudF8xLmxvbmdpZnkpKHNlcXVlbmNlKSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBwYWNrZXRBY2tub3dsZWRnZW1lbnRzOiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHBhZ2luYXRpb25LZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVxdWVzdCA9IHF1ZXJ5XzIuUXVlcnlQYWNrZXRBY2tub3dsZWRnZW1lbnRzUmVxdWVzdC5mcm9tUGFydGlhbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5uZWxJZDogY2hhbm5lbElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2hhbm5lbFF1ZXJ5U2VydmljZS5QYWNrZXRBY2tub3dsZWRnZW1lbnRzKHJlcXVlc3QpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYWxsUGFja2V0QWNrbm93bGVkZ2VtZW50czogYXN5bmMgKHBvcnRJZCwgY2hhbm5lbElkKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGFja25vd2xlZGdlbWVudHMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICBsZXQga2V5O1xuICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0ID0gcXVlcnlfMi5RdWVyeVBhY2tldEFja25vd2xlZGdlbWVudHNSZXF1ZXN0LmZyb21QYXJ0aWFsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFubmVsSWQ6IGNoYW5uZWxJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShrZXkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IGNoYW5uZWxRdWVyeVNlcnZpY2UuUGFja2V0QWNrbm93bGVkZ2VtZW50cyhyZXF1ZXN0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFja25vd2xlZGdlbWVudHMucHVzaCguLi5yZXNwb25zZS5hY2tub3dsZWRnZW1lbnRzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSA9IHJlc3BvbnNlLnBhZ2luYXRpb24/Lm5leHRLZXk7XG4gICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKGtleSAmJiBrZXkubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5XzIuUXVlcnlQYWNrZXRBY2tub3dsZWRnZW1lbnRzUmVzcG9uc2UuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgYWNrbm93bGVkZ2VtZW50czogYWNrbm93bGVkZ2VtZW50cyxcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogcmVzcG9uc2UuaGVpZ2h0LFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHVucmVjZWl2ZWRQYWNrZXRzOiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHBhY2tldENvbW1pdG1lbnRTZXF1ZW5jZXMpID0+IGNoYW5uZWxRdWVyeVNlcnZpY2UuVW5yZWNlaXZlZFBhY2tldHMoe1xuICAgICAgICAgICAgICAgICAgICBwb3J0SWQ6IHBvcnRJZCxcbiAgICAgICAgICAgICAgICAgICAgY2hhbm5lbElkOiBjaGFubmVsSWQsXG4gICAgICAgICAgICAgICAgICAgIHBhY2tldENvbW1pdG1lbnRTZXF1ZW5jZXM6IHBhY2tldENvbW1pdG1lbnRTZXF1ZW5jZXMubWFwKChzKSA9PiBCaWdJbnQocykpLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIHVucmVjZWl2ZWRBY2tzOiBhc3luYyAocG9ydElkLCBjaGFubmVsSWQsIHBhY2tldEFja1NlcXVlbmNlcykgPT4gY2hhbm5lbFF1ZXJ5U2VydmljZS5VbnJlY2VpdmVkQWNrcyh7XG4gICAgICAgICAgICAgICAgICAgIHBvcnRJZDogcG9ydElkLFxuICAgICAgICAgICAgICAgICAgICBjaGFubmVsSWQ6IGNoYW5uZWxJZCxcbiAgICAgICAgICAgICAgICAgICAgcGFja2V0QWNrU2VxdWVuY2VzOiBwYWNrZXRBY2tTZXF1ZW5jZXMubWFwKChzKSA9PiBCaWdJbnQocykpLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG5leHRTZXF1ZW5jZVJlY2VpdmU6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCkgPT4gY2hhbm5lbFF1ZXJ5U2VydmljZS5OZXh0U2VxdWVuY2VSZWNlaXZlKHtcbiAgICAgICAgICAgICAgICAgICAgcG9ydElkOiBwb3J0SWQsXG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWxJZDogY2hhbm5lbElkLFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNsaWVudDoge1xuICAgICAgICAgICAgICAgIHN0YXRlOiBhc3luYyAoY2xpZW50SWQpID0+IGNsaWVudFF1ZXJ5U2VydmljZS5DbGllbnRTdGF0ZSh7IGNsaWVudElkIH0pLFxuICAgICAgICAgICAgICAgIHN0YXRlczogYXN5bmMgKHBhZ2luYXRpb25LZXkpID0+IGNsaWVudFF1ZXJ5U2VydmljZS5DbGllbnRTdGF0ZXMoe1xuICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBhbGxTdGF0ZXM6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpZW50U3RhdGVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGtleTtcbiAgICAgICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnRRdWVyeVNlcnZpY2UuQ2xpZW50U3RhdGVzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShrZXkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRTdGF0ZXMucHVzaCguLi5yZXNwb25zZS5jbGllbnRTdGF0ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gcmVzcG9uc2UucGFnaW5hdGlvbj8ubmV4dEtleTtcbiAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoa2V5ICYmIGtleS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcXVlcnlfMy5RdWVyeUNsaWVudFN0YXRlc1Jlc3BvbnNlLmZyb21QYXJ0aWFsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWVudFN0YXRlczogY2xpZW50U3RhdGVzLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbnNlbnN1c1N0YXRlOiBhc3luYyAoY2xpZW50SWQsIGNvbnNlbnN1c0hlaWdodCkgPT4gY2xpZW50UXVlcnlTZXJ2aWNlLkNvbnNlbnN1c1N0YXRlKHF1ZXJ5XzMuUXVlcnlDb25zZW5zdXNTdGF0ZVJlcXVlc3QuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXG4gICAgICAgICAgICAgICAgICAgIHJldmlzaW9uSGVpZ2h0OiBjb25zZW5zdXNIZWlnaHQgIT09IHVuZGVmaW5lZCA/IEJpZ0ludChjb25zZW5zdXNIZWlnaHQpIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgICAgICBsYXRlc3RIZWlnaHQ6IGNvbnNlbnN1c0hlaWdodCA9PT0gdW5kZWZpbmVkLFxuICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgICAgICBjb25zZW5zdXNTdGF0ZXM6IGFzeW5jIChjbGllbnRJZCwgcGFnaW5hdGlvbktleSkgPT4gY2xpZW50UXVlcnlTZXJ2aWNlLkNvbnNlbnN1c1N0YXRlcyh7XG4gICAgICAgICAgICAgICAgICAgIGNsaWVudElkOiBjbGllbnRJZCxcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgYWxsQ29uc2Vuc3VzU3RhdGVzOiBhc3luYyAoY2xpZW50SWQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29uc2Vuc3VzU3RhdGVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGtleTtcbiAgICAgICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnRRdWVyeVNlcnZpY2UuQ29uc2Vuc3VzU3RhdGVzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRJZDogY2xpZW50SWQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikoa2V5KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc2Vuc3VzU3RhdGVzLnB1c2goLi4ucmVzcG9uc2UuY29uc2Vuc3VzU3RhdGVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSA9IHJlc3BvbnNlLnBhZ2luYXRpb24/Lm5leHRLZXk7XG4gICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKGtleSAmJiBrZXkubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5XzMuUXVlcnlDb25zZW5zdXNTdGF0ZXNSZXNwb25zZS5mcm9tUGFydGlhbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zZW5zdXNTdGF0ZXM6IGNvbnNlbnN1c1N0YXRlcyxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IGFzeW5jICgpID0+IGNsaWVudFF1ZXJ5U2VydmljZS5DbGllbnRQYXJhbXMoe30pLFxuICAgICAgICAgICAgICAgIHN0YXRlVG06IGFzeW5jIChjbGllbnRJZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGNsaWVudFF1ZXJ5U2VydmljZS5DbGllbnRTdGF0ZSh7IGNsaWVudElkIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGVjb2RlVGVuZGVybWludENsaWVudFN0YXRlQW55KHJlc3BvbnNlLmNsaWVudFN0YXRlKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHN0YXRlc1RtOiBhc3luYyAocGFnaW5hdGlvbktleSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB7IGNsaWVudFN0YXRlcyB9ID0gYXdhaXQgY2xpZW50UXVlcnlTZXJ2aWNlLkNsaWVudFN0YXRlcyh7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShwYWdpbmF0aW9uS2V5KSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjbGllbnRTdGF0ZXMubWFwKCh7IGNsaWVudFN0YXRlIH0pID0+IGRlY29kZVRlbmRlcm1pbnRDbGllbnRTdGF0ZUFueShjbGllbnRTdGF0ZSkpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgYWxsU3RhdGVzVG06IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY2xpZW50U3RhdGVzID0gW107XG4gICAgICAgICAgICAgICAgICAgIGxldCByZXNwb25zZTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGtleTtcbiAgICAgICAgICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBhd2FpdCBjbGllbnRRdWVyeVNlcnZpY2UuQ2xpZW50U3RhdGVzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShrZXkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjbGllbnRTdGF0ZXMucHVzaCguLi5yZXNwb25zZS5jbGllbnRTdGF0ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gcmVzcG9uc2UucGFnaW5hdGlvbj8ubmV4dEtleTtcbiAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoa2V5ICYmIGtleS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2xpZW50U3RhdGVzLm1hcCgoeyBjbGllbnRTdGF0ZSB9KSA9PiBkZWNvZGVUZW5kZXJtaW50Q2xpZW50U3RhdGVBbnkoY2xpZW50U3RhdGUpKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGNvbnNlbnN1c1N0YXRlVG06IGFzeW5jIChjbGllbnRJZCwgY29uc2Vuc3VzSGVpZ2h0KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgY2xpZW50UXVlcnlTZXJ2aWNlLkNvbnNlbnN1c1N0YXRlKHF1ZXJ5XzMuUXVlcnlDb25zZW5zdXNTdGF0ZVJlcXVlc3QuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50SWQ6IGNsaWVudElkLFxuICAgICAgICAgICAgICAgICAgICAgICAgcmV2aXNpb25IZWlnaHQ6IGNvbnNlbnN1c0hlaWdodD8ucmV2aXNpb25IZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgICAgICByZXZpc2lvbk51bWJlcjogY29uc2Vuc3VzSGVpZ2h0Py5yZXZpc2lvbk51bWJlcixcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhdGVzdEhlaWdodDogY29uc2Vuc3VzSGVpZ2h0ID09PSB1bmRlZmluZWQsXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRlY29kZVRlbmRlcm1pbnRDb25zZW5zdXNTdGF0ZUFueShyZXNwb25zZS5jb25zZW5zdXNTdGF0ZSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb25uZWN0aW9uOiB7XG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbjogYXN5bmMgKGNvbm5lY3Rpb25JZCkgPT4gY29ubmVjdGlvblF1ZXJ5U2VydmljZS5Db25uZWN0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbklkOiBjb25uZWN0aW9uSWQsXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IGFzeW5jIChwYWdpbmF0aW9uS2V5KSA9PiBjb25uZWN0aW9uUXVlcnlTZXJ2aWNlLkNvbm5lY3Rpb25zKHtcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgYWxsQ29ubmVjdGlvbnM6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29ubmVjdGlvbnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICBsZXQga2V5O1xuICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IGNvbm5lY3Rpb25RdWVyeVNlcnZpY2UuQ29ubmVjdGlvbnMoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVBhZ2luYXRpb24pKGtleSksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbm5lY3Rpb25zLnB1c2goLi4ucmVzcG9uc2UuY29ubmVjdGlvbnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAga2V5ID0gcmVzcG9uc2UucGFnaW5hdGlvbj8ubmV4dEtleTtcbiAgICAgICAgICAgICAgICAgICAgfSB3aGlsZSAoa2V5ICYmIGtleS5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcXVlcnlfNC5RdWVyeUNvbm5lY3Rpb25zUmVzcG9uc2UuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbnM6IGNvbm5lY3Rpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiByZXNwb25zZS5oZWlnaHQsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY2xpZW50Q29ubmVjdGlvbnM6IGFzeW5jIChjbGllbnRJZCkgPT4gY29ubmVjdGlvblF1ZXJ5U2VydmljZS5DbGllbnRDb25uZWN0aW9ucyh7XG4gICAgICAgICAgICAgICAgICAgIGNsaWVudElkOiBjbGllbnRJZCxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBjbGllbnRTdGF0ZTogYXN5bmMgKGNvbm5lY3Rpb25JZCkgPT4gY29ubmVjdGlvblF1ZXJ5U2VydmljZS5Db25uZWN0aW9uQ2xpZW50U3RhdGUoe1xuICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uSWQ6IGNvbm5lY3Rpb25JZCxcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBjb25zZW5zdXNTdGF0ZTogYXN5bmMgKGNvbm5lY3Rpb25JZCwgcmV2aXNpb25IZWlnaHQpID0+IGNvbm5lY3Rpb25RdWVyeVNlcnZpY2UuQ29ubmVjdGlvbkNvbnNlbnN1c1N0YXRlKHF1ZXJ5XzQuUXVlcnlDb25uZWN0aW9uQ29uc2Vuc3VzU3RhdGVSZXF1ZXN0LmZyb21QYXJ0aWFsKHtcbiAgICAgICAgICAgICAgICAgICAgY29ubmVjdGlvbklkOiBjb25uZWN0aW9uSWQsXG4gICAgICAgICAgICAgICAgICAgIHJldmlzaW9uSGVpZ2h0OiBCaWdJbnQocmV2aXNpb25IZWlnaHQpLFxuICAgICAgICAgICAgICAgIH0pKSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0cmFuc2Zlcjoge1xuICAgICAgICAgICAgICAgIGRlbm9tVHJhY2U6IGFzeW5jIChoYXNoKSA9PiB0cmFuc2ZlclF1ZXJ5U2VydmljZS5EZW5vbVRyYWNlKHsgaGFzaDogaGFzaCB9KSxcbiAgICAgICAgICAgICAgICBkZW5vbVRyYWNlczogYXN5bmMgKHBhZ2luYXRpb25LZXkpID0+IHRyYW5zZmVyUXVlcnlTZXJ2aWNlLkRlbm9tVHJhY2VzKHtcbiAgICAgICAgICAgICAgICAgICAgcGFnaW5hdGlvbjogKDAsIHF1ZXJ5Y2xpZW50XzEuY3JlYXRlUGFnaW5hdGlvbikocGFnaW5hdGlvbktleSksXG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgYWxsRGVub21UcmFjZXM6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVub21UcmFjZXMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICBsZXQga2V5O1xuICAgICAgICAgICAgICAgICAgICBkbyB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZSA9IGF3YWl0IHRyYW5zZmVyUXVlcnlTZXJ2aWNlLkRlbm9tVHJhY2VzKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYWdpbmF0aW9uOiAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQYWdpbmF0aW9uKShrZXkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZW5vbVRyYWNlcy5wdXNoKC4uLnJlc3BvbnNlLmRlbm9tVHJhY2VzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtleSA9IHJlc3BvbnNlLnBhZ2luYXRpb24/Lm5leHRLZXk7XG4gICAgICAgICAgICAgICAgICAgIH0gd2hpbGUgKGtleSAmJiBrZXkubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHF1ZXJ5XzEuUXVlcnlEZW5vbVRyYWNlc1Jlc3BvbnNlLmZyb21QYXJ0aWFsKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbm9tVHJhY2VzOiBkZW5vbVRyYWNlcyxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IGFzeW5jICgpID0+IHRyYW5zZmVyUXVlcnlTZXJ2aWNlLlBhcmFtcyh7fSksXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgdmVyaWZpZWQ6IHtcbiAgICAgICAgICAgICAgICBjaGFubmVsOiB7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8ga2VlcGVyOiBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvYmxvYi8zYmFmZDgyNTVhNTAyZTVhOWNlZTA3MzkxY2Y4MjYxNTM4MjQ1ZGZkL3gvaWJjLzA0LWNoYW5uZWwva2VlcGVyL2tlZXBlci5nbyNMNTUtTDY1XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBrZXk6IGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iL2VmMGE3MzQ0YWYzNDU4ODI3Mjk1OThiYzI5NThhMjExNDM5MzBhNmIveC9pYmMvMjQtaG9zdC9rZXlzLmdvI0wxMTctTDEyMFxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gKDAsIGVuY29kaW5nXzEudG9Bc2NpaSkoYGNoYW5uZWxFbmRzL3BvcnRzLyR7cG9ydElkfS9jaGFubmVscy8ke2NoYW5uZWxJZH1gKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHsgdmFsdWUgfSA9IGF3YWl0IGJhc2UucXVlcnlTdG9yZVZlcmlmaWVkKFwiaWJjXCIsIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUubGVuZ3RoID8gY2hhbm5lbF8xLkNoYW5uZWwuZGVjb2RlKHZhbHVlKSA6IG51bGw7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIHBhY2tldENvbW1pdG1lbnQ6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCwgc2VxdWVuY2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGtlZXBlcjogaHR0cHM6Ly9naXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2Jsb2IvM2JhZmQ4MjU1YTUwMmU1YTljZWUwNzM5MWNmODI2MTUzODI0NWRmZC94L2liYy8wNC1jaGFubmVsL2tlZXBlci9rZWVwZXIuZ28jTDEyOC1MMTMzXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBrZXk6IGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iL2VmMGE3MzQ0YWYzNDU4ODI3Mjk1OThiYzI5NThhMjExNDM5MzBhNmIveC9pYmMvMjQtaG9zdC9rZXlzLmdvI0wxODMtTDE4NVxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gKDAsIGVuY29kaW5nXzEudG9Bc2NpaSkoYGNvbW1pdG1lbnRzL3BvcnRzLyR7cG9ydElkfS9jaGFubmVscy8ke2NoYW5uZWxJZH0vcGFja2V0cy8ke3NlcXVlbmNlfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgeyB2YWx1ZSB9ID0gYXdhaXQgYmFzZS5xdWVyeVN0b3JlVmVyaWZpZWQoXCJpYmNcIiwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGtlZXBlciBjb2RlIGRvZXNuJ3QgcGFyc2UsIGJ1dCByZXR1cm5zIHJhd1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBwYWNrZXRBY2tub3dsZWRnZW1lbnQ6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCwgc2VxdWVuY2UpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIGtlZXBlcjogaHR0cHM6Ly9naXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL2Jsb2IvM2JhZmQ4MjU1YTUwMmU1YTljZWUwNzM5MWNmODI2MTUzODI0NWRmZC94L2liYy8wNC1jaGFubmVsL2tlZXBlci9rZWVwZXIuZ28jTDE1OS1MMTY2XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBrZXk6IGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iL2VmMGE3MzQ0YWYzNDU4ODI3Mjk1OThiYzI5NThhMjExNDM5MzBhNmIveC9pYmMvMjQtaG9zdC9rZXlzLmdvI0wxNTMtTDE1NlxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gKDAsIGVuY29kaW5nXzEudG9Bc2NpaSkoYGFja3MvcG9ydHMvJHtwb3J0SWR9L2NoYW5uZWxzLyR7Y2hhbm5lbElkfS9hY2tub3dsZWRnZW1lbnRzLyR7c2VxdWVuY2V9YCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHZhbHVlIH0gPSBhd2FpdCBiYXNlLnF1ZXJ5U3RvcmVWZXJpZmllZChcImliY1wiLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8ga2VlcGVyIGNvZGUgZG9lc24ndCBwYXJzZSwgYnV0IHJldHVybnMgcmF3XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIG5leHRTZXF1ZW5jZVJlY2VpdmU6IGFzeW5jIChwb3J0SWQsIGNoYW5uZWxJZCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8ga2VlcGVyOiBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvYmxvYi8zYmFmZDgyNTVhNTAyZTVhOWNlZTA3MzkxY2Y4MjYxNTM4MjQ1ZGZkL3gvaWJjLzA0LWNoYW5uZWwva2VlcGVyL2tlZXBlci5nbyNMOTItTDEwMVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8ga2V5OiBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvYmxvYi9lZjBhNzM0NGFmMzQ1ODgyNzI5NTk4YmMyOTU4YTIxMTQzOTMwYTZiL3gvaWJjLzI0LWhvc3Qva2V5cy5nbyNMMTMzLUwxMzZcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9ICgwLCBlbmNvZGluZ18xLnRvQXNjaWkpKGBzZXFBY2tzL3BvcnRzLyR7cG9ydElkfS9jaGFubmVscy8ke2NoYW5uZWxJZH0vbmV4dFNlcXVlbmNlQWNrYCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHZhbHVlIH0gPSBhd2FpdCBiYXNlLnF1ZXJ5U3RvcmVWZXJpZmllZChcImliY1wiLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlLmxlbmd0aCA/IG1hdGhfMS5VaW50NjQuZnJvbUJ5dGVzKHZhbHVlKS50b051bWJlcigpIDogbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZXhwb3J0cy5zZXR1cEliY0V4dGVuc2lvbiA9IHNldHVwSWJjRXh0ZW5zaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isAminoMsgCreateValidator = exports.isAminoMsgBeginRedelegate = exports.createStakingAminoConverters = exports.setupSlashingExtension = exports.isAminoMsgUnjail = exports.createSlashingAminoConverters = exports.setupMintExtension = exports.setupIbcExtension = exports.isMsgTransferEncodeObject = exports.ibcTypes = exports.isAminoMsgTransfer = exports.createIbcAminoConverters = exports.groupTypes = exports.createGroupAminoConverters = exports.setupGovExtension = exports.isMsgVoteWeightedEncodeObject = exports.isMsgVoteEncodeObject = exports.isMsgSubmitProposalEncodeObject = exports.isMsgDepositEncodeObject = exports.govTypes = exports.isAminoMsgVoteWeighted = exports.isAminoMsgVote = exports.isAminoMsgSubmitProposal = exports.isAminoMsgDeposit = exports.createGovAminoConverters = exports.setupFeegrantExtension = exports.feegrantTypes = exports.createFeegrantAminoConverters = exports.isAminoMsgSubmitEvidence = exports.createEvidenceAminoConverters = exports.setupDistributionExtension = exports.isMsgWithdrawDelegatorRewardEncodeObject = exports.distributionTypes = exports.isAminoMsgWithdrawValidatorCommission = exports.isAminoMsgWithdrawDelegatorReward = exports.isAminoMsgSetWithdrawAddress = exports.isAminoMsgFundCommunityPool = exports.createDistributionAminoConverters = exports.isAminoMsgVerifyInvariant = exports.createCrysisAminoConverters = exports.setupBankExtension = exports.isMsgSendEncodeObject = exports.bankTypes = exports.isAminoMsgSend = exports.isAminoMsgMultiSend = exports.createBankAminoConverters = exports.setupAuthzExtension = exports.authzTypes = exports.createAuthzAminoConverters = exports.setupAuthExtension = void 0;\nexports.vestingTypes = exports.isAminoMsgCreateVestingAccount = exports.createVestingAminoConverters = exports.setupTxExtension = exports.setupStakingExtension = exports.stakingTypes = exports.isMsgUndelegateEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgCancelUnbondingDelegationEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.isAminoMsgUndelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgDelegate = void 0;\nvar queries_1 = __webpack_require__(/*! ./auth/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/auth/queries.js\");\nObject.defineProperty(exports, \"setupAuthExtension\", ({ enumerable: true, get: function () { return queries_1.setupAuthExtension; } }));\nvar aminomessages_1 = __webpack_require__(/*! ./authz/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/aminomessages.js\");\nObject.defineProperty(exports, \"createAuthzAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_1.createAuthzAminoConverters; } }));\nvar messages_1 = __webpack_require__(/*! ./authz/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/messages.js\");\nObject.defineProperty(exports, \"authzTypes\", ({ enumerable: true, get: function () { return messages_1.authzTypes; } }));\nvar queries_2 = __webpack_require__(/*! ./authz/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/authz/queries.js\");\nObject.defineProperty(exports, \"setupAuthzExtension\", ({ enumerable: true, get: function () { return queries_2.setupAuthzExtension; } }));\nvar aminomessages_2 = __webpack_require__(/*! ./bank/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/aminomessages.js\");\nObject.defineProperty(exports, \"createBankAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_2.createBankAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgMultiSend\", ({ enumerable: true, get: function () { return aminomessages_2.isAminoMsgMultiSend; } }));\nObject.defineProperty(exports, \"isAminoMsgSend\", ({ enumerable: true, get: function () { return aminomessages_2.isAminoMsgSend; } }));\nvar messages_2 = __webpack_require__(/*! ./bank/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/messages.js\");\nObject.defineProperty(exports, \"bankTypes\", ({ enumerable: true, get: function () { return messages_2.bankTypes; } }));\nObject.defineProperty(exports, \"isMsgSendEncodeObject\", ({ enumerable: true, get: function () { return messages_2.isMsgSendEncodeObject; } }));\nvar queries_3 = __webpack_require__(/*! ./bank/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/bank/queries.js\");\nObject.defineProperty(exports, \"setupBankExtension\", ({ enumerable: true, get: function () { return queries_3.setupBankExtension; } }));\nvar aminomessages_3 = __webpack_require__(/*! ./crisis/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/crisis/aminomessages.js\");\nObject.defineProperty(exports, \"createCrysisAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_3.createCrysisAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgVerifyInvariant\", ({ enumerable: true, get: function () { return aminomessages_3.isAminoMsgVerifyInvariant; } }));\nvar aminomessages_4 = __webpack_require__(/*! ./distribution/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/aminomessages.js\");\nObject.defineProperty(exports, \"createDistributionAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_4.createDistributionAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgFundCommunityPool\", ({ enumerable: true, get: function () { return aminomessages_4.isAminoMsgFundCommunityPool; } }));\nObject.defineProperty(exports, \"isAminoMsgSetWithdrawAddress\", ({ enumerable: true, get: function () { return aminomessages_4.isAminoMsgSetWithdrawAddress; } }));\nObject.defineProperty(exports, \"isAminoMsgWithdrawDelegatorReward\", ({ enumerable: true, get: function () { return aminomessages_4.isAminoMsgWithdrawDelegatorReward; } }));\nObject.defineProperty(exports, \"isAminoMsgWithdrawValidatorCommission\", ({ enumerable: true, get: function () { return aminomessages_4.isAminoMsgWithdrawValidatorCommission; } }));\nvar messages_3 = __webpack_require__(/*! ./distribution/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/messages.js\");\nObject.defineProperty(exports, \"distributionTypes\", ({ enumerable: true, get: function () { return messages_3.distributionTypes; } }));\nObject.defineProperty(exports, \"isMsgWithdrawDelegatorRewardEncodeObject\", ({ enumerable: true, get: function () { return messages_3.isMsgWithdrawDelegatorRewardEncodeObject; } }));\nvar queries_4 = __webpack_require__(/*! ./distribution/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/distribution/queries.js\");\nObject.defineProperty(exports, \"setupDistributionExtension\", ({ enumerable: true, get: function () { return queries_4.setupDistributionExtension; } }));\nvar aminomessages_5 = __webpack_require__(/*! ./evidence/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/evidence/aminomessages.js\");\nObject.defineProperty(exports, \"createEvidenceAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_5.createEvidenceAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgSubmitEvidence\", ({ enumerable: true, get: function () { return aminomessages_5.isAminoMsgSubmitEvidence; } }));\nvar aminomessages_6 = __webpack_require__(/*! ./feegrant/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/aminomessages.js\");\nObject.defineProperty(exports, \"createFeegrantAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_6.createFeegrantAminoConverters; } }));\nvar messages_4 = __webpack_require__(/*! ./feegrant/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/messages.js\");\nObject.defineProperty(exports, \"feegrantTypes\", ({ enumerable: true, get: function () { return messages_4.feegrantTypes; } }));\nvar queries_5 = __webpack_require__(/*! ./feegrant/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/feegrant/queries.js\");\nObject.defineProperty(exports, \"setupFeegrantExtension\", ({ enumerable: true, get: function () { return queries_5.setupFeegrantExtension; } }));\nvar aminomessages_7 = __webpack_require__(/*! ./gov/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/aminomessages.js\");\nObject.defineProperty(exports, \"createGovAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_7.createGovAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgDeposit\", ({ enumerable: true, get: function () { return aminomessages_7.isAminoMsgDeposit; } }));\nObject.defineProperty(exports, \"isAminoMsgSubmitProposal\", ({ enumerable: true, get: function () { return aminomessages_7.isAminoMsgSubmitProposal; } }));\nObject.defineProperty(exports, \"isAminoMsgVote\", ({ enumerable: true, get: function () { return aminomessages_7.isAminoMsgVote; } }));\nObject.defineProperty(exports, \"isAminoMsgVoteWeighted\", ({ enumerable: true, get: function () { return aminomessages_7.isAminoMsgVoteWeighted; } }));\nvar messages_5 = __webpack_require__(/*! ./gov/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/messages.js\");\nObject.defineProperty(exports, \"govTypes\", ({ enumerable: true, get: function () { return messages_5.govTypes; } }));\nObject.defineProperty(exports, \"isMsgDepositEncodeObject\", ({ enumerable: true, get: function () { return messages_5.isMsgDepositEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgSubmitProposalEncodeObject\", ({ enumerable: true, get: function () { return messages_5.isMsgSubmitProposalEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgVoteEncodeObject\", ({ enumerable: true, get: function () { return messages_5.isMsgVoteEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgVoteWeightedEncodeObject\", ({ enumerable: true, get: function () { return messages_5.isMsgVoteWeightedEncodeObject; } }));\nvar queries_6 = __webpack_require__(/*! ./gov/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/gov/queries.js\");\nObject.defineProperty(exports, \"setupGovExtension\", ({ enumerable: true, get: function () { return queries_6.setupGovExtension; } }));\nvar aminomessages_8 = __webpack_require__(/*! ./group/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/group/aminomessages.js\");\nObject.defineProperty(exports, \"createGroupAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_8.createGroupAminoConverters; } }));\nvar messages_6 = __webpack_require__(/*! ./group/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/group/messages.js\");\nObject.defineProperty(exports, \"groupTypes\", ({ enumerable: true, get: function () { return messages_6.groupTypes; } }));\nvar aminomessages_9 = __webpack_require__(/*! ./ibc/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/aminomessages.js\");\nObject.defineProperty(exports, \"createIbcAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_9.createIbcAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgTransfer\", ({ enumerable: true, get: function () { return aminomessages_9.isAminoMsgTransfer; } }));\nvar messages_7 = __webpack_require__(/*! ./ibc/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/messages.js\");\nObject.defineProperty(exports, \"ibcTypes\", ({ enumerable: true, get: function () { return messages_7.ibcTypes; } }));\nObject.defineProperty(exports, \"isMsgTransferEncodeObject\", ({ enumerable: true, get: function () { return messages_7.isMsgTransferEncodeObject; } }));\nvar queries_7 = __webpack_require__(/*! ./ibc/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/ibc/queries.js\");\nObject.defineProperty(exports, \"setupIbcExtension\", ({ enumerable: true, get: function () { return queries_7.setupIbcExtension; } }));\nvar queries_8 = __webpack_require__(/*! ./mint/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/mint/queries.js\");\nObject.defineProperty(exports, \"setupMintExtension\", ({ enumerable: true, get: function () { return queries_8.setupMintExtension; } }));\nvar aminomessages_10 = __webpack_require__(/*! ./slashing/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js\");\nObject.defineProperty(exports, \"createSlashingAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_10.createSlashingAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgUnjail\", ({ enumerable: true, get: function () { return aminomessages_10.isAminoMsgUnjail; } }));\nvar queries_9 = __webpack_require__(/*! ./slashing/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/slashing/queries.js\");\nObject.defineProperty(exports, \"setupSlashingExtension\", ({ enumerable: true, get: function () { return queries_9.setupSlashingExtension; } }));\nvar aminomessages_11 = __webpack_require__(/*! ./staking/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js\");\nObject.defineProperty(exports, \"createStakingAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_11.createStakingAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgBeginRedelegate\", ({ enumerable: true, get: function () { return aminomessages_11.isAminoMsgBeginRedelegate; } }));\nObject.defineProperty(exports, \"isAminoMsgCreateValidator\", ({ enumerable: true, get: function () { return aminomessages_11.isAminoMsgCreateValidator; } }));\nObject.defineProperty(exports, \"isAminoMsgDelegate\", ({ enumerable: true, get: function () { return aminomessages_11.isAminoMsgDelegate; } }));\nObject.defineProperty(exports, \"isAminoMsgEditValidator\", ({ enumerable: true, get: function () { return aminomessages_11.isAminoMsgEditValidator; } }));\nObject.defineProperty(exports, \"isAminoMsgUndelegate\", ({ enumerable: true, get: function () { return aminomessages_11.isAminoMsgUndelegate; } }));\nvar messages_8 = __webpack_require__(/*! ./staking/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/messages.js\");\nObject.defineProperty(exports, \"isMsgBeginRedelegateEncodeObject\", ({ enumerable: true, get: function () { return messages_8.isMsgBeginRedelegateEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgCancelUnbondingDelegationEncodeObject\", ({ enumerable: true, get: function () { return messages_8.isMsgCancelUnbondingDelegationEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgCreateValidatorEncodeObject\", ({ enumerable: true, get: function () { return messages_8.isMsgCreateValidatorEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgDelegateEncodeObject\", ({ enumerable: true, get: function () { return messages_8.isMsgDelegateEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgEditValidatorEncodeObject\", ({ enumerable: true, get: function () { return messages_8.isMsgEditValidatorEncodeObject; } }));\nObject.defineProperty(exports, \"isMsgUndelegateEncodeObject\", ({ enumerable: true, get: function () { return messages_8.isMsgUndelegateEncodeObject; } }));\nObject.defineProperty(exports, \"stakingTypes\", ({ enumerable: true, get: function () { return messages_8.stakingTypes; } }));\nvar queries_10 = __webpack_require__(/*! ./staking/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/queries.js\");\nObject.defineProperty(exports, \"setupStakingExtension\", ({ enumerable: true, get: function () { return queries_10.setupStakingExtension; } }));\nvar queries_11 = __webpack_require__(/*! ./tx/queries */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/tx/queries.js\");\nObject.defineProperty(exports, \"setupTxExtension\", ({ enumerable: true, get: function () { return queries_11.setupTxExtension; } }));\nvar aminomessages_12 = __webpack_require__(/*! ./vesting/aminomessages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js\");\nObject.defineProperty(exports, \"createVestingAminoConverters\", ({ enumerable: true, get: function () { return aminomessages_12.createVestingAminoConverters; } }));\nObject.defineProperty(exports, \"isAminoMsgCreateVestingAccount\", ({ enumerable: true, get: function () { return aminomessages_12.isAminoMsgCreateVestingAccount; } }));\nvar messages_9 = __webpack_require__(/*! ./vesting/messages */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/vesting/messages.js\");\nObject.defineProperty(exports, \"vestingTypes\", ({ enumerable: true, get: function () { return messages_9.vestingTypes; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/mint/queries.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/mint/queries.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupMintExtension = void 0;\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/mint/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/mint/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupMintExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        mint: {\n            params: async () => {\n                const { params } = await queryService.Params({});\n                (0, utils_1.assert)(params);\n                return {\n                    blocksPerYear: params.blocksPerYear,\n                    goalBonded: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.goalBonded),\n                    inflationMin: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMin),\n                    inflationMax: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationMax),\n                    inflationRateChange: (0, queryclient_1.decodeCosmosSdkDecFromProto)(params.inflationRateChange),\n                    mintDenom: params.mintDenom,\n                };\n            },\n            inflation: async () => {\n                const { inflation } = await queryService.Inflation({});\n                return (0, queryclient_1.decodeCosmosSdkDecFromProto)(inflation);\n            },\n            annualProvisions: async () => {\n                const { annualProvisions } = await queryService.AnnualProvisions({});\n                return (0, queryclient_1.decodeCosmosSdkDecFromProto)(annualProvisions);\n            },\n        },\n    };\n}\nexports.setupMintExtension = setupMintExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL21pbnQvcXVlcmllcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwwQkFBMEI7QUFDMUIsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsZ0JBQWdCLG1CQUFPLENBQUMsOEdBQXdDO0FBQ2hFLHNCQUFzQixtQkFBTyxDQUFDLDJGQUFtQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVMsOEJBQThCO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLHdCQUF3QixZQUFZLGlDQUFpQztBQUNyRTtBQUNBLGFBQWE7QUFDYjtBQUNBLHdCQUF3QixtQkFBbUIsd0NBQXdDO0FBQ25GO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL21vZHVsZXMvbWludC9xdWVyaWVzLmpzPzZjMDgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldHVwTWludEV4dGVuc2lvbiA9IHZvaWQgMDtcbmNvbnN0IHV0aWxzXzEgPSByZXF1aXJlKFwiQGNvc21qcy91dGlsc1wiKTtcbmNvbnN0IHF1ZXJ5XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9taW50L3YxYmV0YTEvcXVlcnlcIik7XG5jb25zdCBxdWVyeWNsaWVudF8xID0gcmVxdWlyZShcIi4uLy4uL3F1ZXJ5Y2xpZW50XCIpO1xuZnVuY3Rpb24gc2V0dXBNaW50RXh0ZW5zaW9uKGJhc2UpIHtcbiAgICBjb25zdCBycGMgPSAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQcm90b2J1ZlJwY0NsaWVudCkoYmFzZSk7XG4gICAgLy8gVXNlIHRoaXMgc2VydmljZSB0byBnZXQgZWFzeSB0eXBlZCBhY2Nlc3MgdG8gcXVlcnkgbWV0aG9kc1xuICAgIC8vIFRoaXMgY2Fubm90IGJlIHVzZWQgZm9yIHByb29mIHZlcmlmaWNhdGlvblxuICAgIGNvbnN0IHF1ZXJ5U2VydmljZSA9IG5ldyBxdWVyeV8xLlF1ZXJ5Q2xpZW50SW1wbChycGMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG1pbnQ6IHtcbiAgICAgICAgICAgIHBhcmFtczogYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgcGFyYW1zIH0gPSBhd2FpdCBxdWVyeVNlcnZpY2UuUGFyYW1zKHt9KTtcbiAgICAgICAgICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKHBhcmFtcyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgYmxvY2tzUGVyWWVhcjogcGFyYW1zLmJsb2Nrc1BlclllYXIsXG4gICAgICAgICAgICAgICAgICAgIGdvYWxCb25kZWQ6ICgwLCBxdWVyeWNsaWVudF8xLmRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90bykocGFyYW1zLmdvYWxCb25kZWQpLFxuICAgICAgICAgICAgICAgICAgICBpbmZsYXRpb25NaW46ICgwLCBxdWVyeWNsaWVudF8xLmRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90bykocGFyYW1zLmluZmxhdGlvbk1pbiksXG4gICAgICAgICAgICAgICAgICAgIGluZmxhdGlvbk1heDogKDAsIHF1ZXJ5Y2xpZW50XzEuZGVjb2RlQ29zbW9zU2RrRGVjRnJvbVByb3RvKShwYXJhbXMuaW5mbGF0aW9uTWF4KSxcbiAgICAgICAgICAgICAgICAgICAgaW5mbGF0aW9uUmF0ZUNoYW5nZTogKDAsIHF1ZXJ5Y2xpZW50XzEuZGVjb2RlQ29zbW9zU2RrRGVjRnJvbVByb3RvKShwYXJhbXMuaW5mbGF0aW9uUmF0ZUNoYW5nZSksXG4gICAgICAgICAgICAgICAgICAgIG1pbnREZW5vbTogcGFyYW1zLm1pbnREZW5vbSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGluZmxhdGlvbjogYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgaW5mbGF0aW9uIH0gPSBhd2FpdCBxdWVyeVNlcnZpY2UuSW5mbGF0aW9uKHt9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKDAsIHF1ZXJ5Y2xpZW50XzEuZGVjb2RlQ29zbW9zU2RrRGVjRnJvbVByb3RvKShpbmZsYXRpb24pO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGFubnVhbFByb3Zpc2lvbnM6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGFubnVhbFByb3Zpc2lvbnMgfSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5Bbm51YWxQcm92aXNpb25zKHt9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gKDAsIHF1ZXJ5Y2xpZW50XzEuZGVjb2RlQ29zbW9zU2RrRGVjRnJvbVByb3RvKShhbm51YWxQcm92aXNpb25zKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuc2V0dXBNaW50RXh0ZW5zaW9uID0gc2V0dXBNaW50RXh0ZW5zaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/mint/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createSlashingAminoConverters = exports.isAminoMsgUnjail = void 0;\nfunction isAminoMsgUnjail(msg) {\n    return msg.type === \"cosmos-sdk/MsgUnjail\";\n}\nexports.isAminoMsgUnjail = isAminoMsgUnjail;\nfunction createSlashingAminoConverters() {\n    throw new Error(\"Not implemented\");\n}\nexports.createSlashingAminoConverters = createSlashingAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3NsYXNoaW5nL2FtaW5vbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUNBQXFDLEdBQUcsd0JBQXdCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9zbGFzaGluZy9hbWlub21lc3NhZ2VzLmpzPzk0MDAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZVNsYXNoaW5nQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5pc0FtaW5vTXNnVW5qYWlsID0gdm9pZCAwO1xuZnVuY3Rpb24gaXNBbWlub01zZ1VuamFpbChtc2cpIHtcbiAgICByZXR1cm4gbXNnLnR5cGUgPT09IFwiY29zbW9zLXNkay9Nc2dVbmphaWxcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ1VuamFpbCA9IGlzQW1pbm9Nc2dVbmphaWw7XG5mdW5jdGlvbiBjcmVhdGVTbGFzaGluZ0FtaW5vQ29udmVydGVycygpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJOb3QgaW1wbGVtZW50ZWRcIik7XG59XG5leHBvcnRzLmNyZWF0ZVNsYXNoaW5nQW1pbm9Db252ZXJ0ZXJzID0gY3JlYXRlU2xhc2hpbmdBbWlub0NvbnZlcnRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbWlub21lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/slashing/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/slashing/queries.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/slashing/queries.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupSlashingExtension = void 0;\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/slashing/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/slashing/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupSlashingExtension(base) {\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        slashing: {\n            signingInfo: async (consAddress) => {\n                const response = await queryService.SigningInfo({\n                    consAddress: consAddress,\n                });\n                return response;\n            },\n            signingInfos: async (paginationKey) => {\n                const response = await queryService.SigningInfos({\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            params: async () => {\n                const response = await queryService.Params({});\n                return response;\n            },\n        },\n    };\n}\nexports.setupSlashingExtension = setupSlashingExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3NsYXNoaW5nL3F1ZXJpZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCO0FBQzlCLGdCQUFnQixtQkFBTyxDQUFDLHNIQUE0QztBQUNwRSxzQkFBc0IsbUJBQU8sQ0FBQywyRkFBbUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQSw2REFBNkQ7QUFDN0Q7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvbW9kdWxlcy9zbGFzaGluZy9xdWVyaWVzLmpzPzc4YzQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNldHVwU2xhc2hpbmdFeHRlbnNpb24gPSB2b2lkIDA7XG5jb25zdCBxdWVyeV8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3Mvc2xhc2hpbmcvdjFiZXRhMS9xdWVyeVwiKTtcbmNvbnN0IHF1ZXJ5Y2xpZW50XzEgPSByZXF1aXJlKFwiLi4vLi4vcXVlcnljbGllbnRcIik7XG5mdW5jdGlvbiBzZXR1cFNsYXNoaW5nRXh0ZW5zaW9uKGJhc2UpIHtcbiAgICBjb25zdCBycGMgPSAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQcm90b2J1ZlJwY0NsaWVudCkoYmFzZSk7XG4gICAgY29uc3QgcXVlcnlTZXJ2aWNlID0gbmV3IHF1ZXJ5XzEuUXVlcnlDbGllbnRJbXBsKHJwYyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2xhc2hpbmc6IHtcbiAgICAgICAgICAgIHNpZ25pbmdJbmZvOiBhc3luYyAoY29uc0FkZHJlc3MpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5TaWduaW5nSW5mbyh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNBZGRyZXNzOiBjb25zQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2lnbmluZ0luZm9zOiBhc3luYyAocGFnaW5hdGlvbktleSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcXVlcnlTZXJ2aWNlLlNpZ25pbmdJbmZvcyh7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2luYXRpb246ICgwLCBxdWVyeWNsaWVudF8xLmNyZWF0ZVBhZ2luYXRpb24pKHBhZ2luYXRpb25LZXkpLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBwYXJhbXM6IGFzeW5jICgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5QYXJhbXMoe30pO1xuICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuc2V0dXBTbGFzaGluZ0V4dGVuc2lvbiA9IHNldHVwU2xhc2hpbmdFeHRlbnNpb247XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyaWVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/slashing/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createStakingAminoConverters = exports.isAminoMsgCancelUnbondingDelegation = exports.isAminoMsgUndelegate = exports.isAminoMsgBeginRedelegate = exports.isAminoMsgDelegate = exports.isAminoMsgEditValidator = exports.isAminoMsgCreateValidator = exports.protoDecimalToJson = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nfunction protoDecimalToJson(decimal) {\n    const parsed = math_1.Decimal.fromAtomics(decimal, 18);\n    const [whole, fractional] = parsed.toString().split(\".\");\n    return `${whole}.${(fractional ?? \"\").padEnd(18, \"0\")}`;\n}\nexports.protoDecimalToJson = protoDecimalToJson;\nfunction jsonDecimalToProto(decimal) {\n    const parsed = math_1.Decimal.fromUserInput(decimal, 18);\n    return parsed.atomics;\n}\nfunction isAminoMsgCreateValidator(msg) {\n    return msg.type === \"cosmos-sdk/MsgCreateValidator\";\n}\nexports.isAminoMsgCreateValidator = isAminoMsgCreateValidator;\nfunction isAminoMsgEditValidator(msg) {\n    return msg.type === \"cosmos-sdk/MsgEditValidator\";\n}\nexports.isAminoMsgEditValidator = isAminoMsgEditValidator;\nfunction isAminoMsgDelegate(msg) {\n    return msg.type === \"cosmos-sdk/MsgDelegate\";\n}\nexports.isAminoMsgDelegate = isAminoMsgDelegate;\nfunction isAminoMsgBeginRedelegate(msg) {\n    return msg.type === \"cosmos-sdk/MsgBeginRedelegate\";\n}\nexports.isAminoMsgBeginRedelegate = isAminoMsgBeginRedelegate;\nfunction isAminoMsgUndelegate(msg) {\n    return msg.type === \"cosmos-sdk/MsgUndelegate\";\n}\nexports.isAminoMsgUndelegate = isAminoMsgUndelegate;\nfunction isAminoMsgCancelUnbondingDelegation(msg) {\n    return msg.type === \"cosmos-sdk/MsgCancelUnbondingDelegation\";\n}\nexports.isAminoMsgCancelUnbondingDelegation = isAminoMsgCancelUnbondingDelegation;\nfunction createStakingAminoConverters() {\n    return {\n        \"/cosmos.staking.v1beta1.MsgBeginRedelegate\": {\n            aminoType: \"cosmos-sdk/MsgBeginRedelegate\",\n            toAmino: ({ delegatorAddress, validatorSrcAddress, validatorDstAddress, amount, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_src_address: validatorSrcAddress,\n                    validator_dst_address: validatorDstAddress,\n                    amount: amount,\n                };\n            },\n            fromAmino: ({ delegator_address, validator_src_address, validator_dst_address, amount, }) => ({\n                delegatorAddress: delegator_address,\n                validatorSrcAddress: validator_src_address,\n                validatorDstAddress: validator_dst_address,\n                amount: amount,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgCreateValidator\": {\n            aminoType: \"cosmos-sdk/MsgCreateValidator\",\n            toAmino: ({ description, commission, minSelfDelegation, delegatorAddress, validatorAddress, pubkey, value, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n                (0, utils_1.assertDefinedAndNotNull)(commission, \"missing commission\");\n                (0, utils_1.assertDefinedAndNotNull)(pubkey, \"missing pubkey\");\n                (0, utils_1.assertDefinedAndNotNull)(value, \"missing value\");\n                return {\n                    description: {\n                        moniker: description.moniker,\n                        identity: description.identity,\n                        website: description.website,\n                        security_contact: description.securityContact,\n                        details: description.details,\n                    },\n                    commission: {\n                        rate: protoDecimalToJson(commission.rate),\n                        max_rate: protoDecimalToJson(commission.maxRate),\n                        max_change_rate: protoDecimalToJson(commission.maxChangeRate),\n                    },\n                    min_self_delegation: minSelfDelegation,\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    pubkey: (0, proto_signing_1.decodePubkey)(pubkey),\n                    value: value,\n                };\n            },\n            fromAmino: ({ description, commission, min_self_delegation, delegator_address, validator_address, pubkey, value, }) => {\n                return {\n                    description: {\n                        moniker: description.moniker,\n                        identity: description.identity,\n                        website: description.website,\n                        securityContact: description.security_contact,\n                        details: description.details,\n                    },\n                    commission: {\n                        rate: jsonDecimalToProto(commission.rate),\n                        maxRate: jsonDecimalToProto(commission.max_rate),\n                        maxChangeRate: jsonDecimalToProto(commission.max_change_rate),\n                    },\n                    minSelfDelegation: min_self_delegation,\n                    delegatorAddress: delegator_address,\n                    validatorAddress: validator_address,\n                    pubkey: (0, proto_signing_1.encodePubkey)(pubkey),\n                    value: value,\n                };\n            },\n        },\n        \"/cosmos.staking.v1beta1.MsgDelegate\": {\n            aminoType: \"cosmos-sdk/MsgDelegate\",\n            toAmino: ({ delegatorAddress, validatorAddress, amount }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    amount: amount,\n                };\n            },\n            fromAmino: ({ delegator_address, validator_address, amount, }) => ({\n                delegatorAddress: delegator_address,\n                validatorAddress: validator_address,\n                amount: amount,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgEditValidator\": {\n            aminoType: \"cosmos-sdk/MsgEditValidator\",\n            toAmino: ({ description, commissionRate, minSelfDelegation, validatorAddress, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(description, \"missing description\");\n                return {\n                    description: {\n                        moniker: description.moniker,\n                        identity: description.identity,\n                        website: description.website,\n                        security_contact: description.securityContact,\n                        details: description.details,\n                    },\n                    // empty string in the protobuf document means \"do not change\"\n                    commission_rate: commissionRate ? protoDecimalToJson(commissionRate) : undefined,\n                    // empty string in the protobuf document means \"do not change\"\n                    min_self_delegation: minSelfDelegation ? minSelfDelegation : undefined,\n                    validator_address: validatorAddress,\n                };\n            },\n            fromAmino: ({ description, commission_rate, min_self_delegation, validator_address, }) => ({\n                description: {\n                    moniker: description.moniker,\n                    identity: description.identity,\n                    website: description.website,\n                    securityContact: description.security_contact,\n                    details: description.details,\n                },\n                // empty string in the protobuf document means \"do not change\"\n                commissionRate: commission_rate ? jsonDecimalToProto(commission_rate) : \"\",\n                // empty string in the protobuf document means \"do not change\"\n                minSelfDelegation: min_self_delegation ?? \"\",\n                validatorAddress: validator_address,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgUndelegate\": {\n            aminoType: \"cosmos-sdk/MsgUndelegate\",\n            toAmino: ({ delegatorAddress, validatorAddress, amount, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    amount: amount,\n                };\n            },\n            fromAmino: ({ delegator_address, validator_address, amount, }) => ({\n                delegatorAddress: delegator_address,\n                validatorAddress: validator_address,\n                amount: amount,\n            }),\n        },\n        \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\": {\n            aminoType: \"cosmos-sdk/MsgCancelUnbondingDelegation\",\n            toAmino: ({ delegatorAddress, validatorAddress, amount, creationHeight, }) => {\n                (0, utils_1.assertDefinedAndNotNull)(amount, \"missing amount\");\n                return {\n                    delegator_address: delegatorAddress,\n                    validator_address: validatorAddress,\n                    amount: amount,\n                    creation_height: creationHeight.toString(),\n                };\n            },\n            fromAmino: ({ delegator_address, validator_address, amount, creation_height, }) => ({\n                delegatorAddress: delegator_address,\n                validatorAddress: validator_address,\n                amount: amount,\n                creationHeight: BigInt(creation_height),\n            }),\n        },\n    };\n}\nexports.createStakingAminoConverters = createStakingAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/messages.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/staking/messages.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isMsgCancelUnbondingDelegationEncodeObject = exports.isMsgUndelegateEncodeObject = exports.isMsgEditValidatorEncodeObject = exports.isMsgDelegateEncodeObject = exports.isMsgCreateValidatorEncodeObject = exports.isMsgBeginRedelegateEncodeObject = exports.stakingTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/staking/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js\");\nexports.stakingTypes = [\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", tx_1.MsgBeginRedelegate],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", tx_1.MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", tx_1.MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", tx_1.MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", tx_1.MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\", tx_1.MsgCancelUnbondingDelegation],\n];\nfunction isMsgBeginRedelegateEncodeObject(o) {\n    return o.typeUrl === \"/cosmos.staking.v1beta1.MsgBeginRedelegate\";\n}\nexports.isMsgBeginRedelegateEncodeObject = isMsgBeginRedelegateEncodeObject;\nfunction isMsgCreateValidatorEncodeObject(o) {\n    return o.typeUrl === \"/cosmos.staking.v1beta1.MsgCreateValidator\";\n}\nexports.isMsgCreateValidatorEncodeObject = isMsgCreateValidatorEncodeObject;\nfunction isMsgDelegateEncodeObject(object) {\n    return object.typeUrl === \"/cosmos.staking.v1beta1.MsgDelegate\";\n}\nexports.isMsgDelegateEncodeObject = isMsgDelegateEncodeObject;\nfunction isMsgEditValidatorEncodeObject(o) {\n    return o.typeUrl === \"/cosmos.staking.v1beta1.MsgEditValidator\";\n}\nexports.isMsgEditValidatorEncodeObject = isMsgEditValidatorEncodeObject;\nfunction isMsgUndelegateEncodeObject(object) {\n    return object.typeUrl === \"/cosmos.staking.v1beta1.MsgUndelegate\";\n}\nexports.isMsgUndelegateEncodeObject = isMsgUndelegateEncodeObject;\nfunction isMsgCancelUnbondingDelegationEncodeObject(object) {\n    return (object.typeUrl ===\n        \"/cosmos.staking.v1beta1.MsgCancelUnbondingDelegation\");\n}\nexports.isMsgCancelUnbondingDelegationEncodeObject = isMsgCancelUnbondingDelegationEncodeObject;\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3N0YWtpbmcvbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0RBQWtELEdBQUcsbUNBQW1DLEdBQUcsc0NBQXNDLEdBQUcsaUNBQWlDLEdBQUcsd0NBQXdDLEdBQUcsd0NBQXdDLEdBQUcsb0JBQW9CO0FBQ2xSLGFBQWEsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDN0Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3N0YWtpbmcvbWVzc2FnZXMuanM/NTA3NSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNNc2dDYW5jZWxVbmJvbmRpbmdEZWxlZ2F0aW9uRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5pc01zZ1VuZGVsZWdhdGVFbmNvZGVPYmplY3QgPSBleHBvcnRzLmlzTXNnRWRpdFZhbGlkYXRvckVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dEZWxlZ2F0ZUVuY29kZU9iamVjdCA9IGV4cG9ydHMuaXNNc2dDcmVhdGVWYWxpZGF0b3JFbmNvZGVPYmplY3QgPSBleHBvcnRzLmlzTXNnQmVnaW5SZWRlbGVnYXRlRW5jb2RlT2JqZWN0ID0gZXhwb3J0cy5zdGFraW5nVHlwZXMgPSB2b2lkIDA7XG5jb25zdCB0eF8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3Mvc3Rha2luZy92MWJldGExL3R4XCIpO1xuZXhwb3J0cy5zdGFraW5nVHlwZXMgPSBbXG4gICAgW1wiL2Nvc21vcy5zdGFraW5nLnYxYmV0YTEuTXNnQmVnaW5SZWRlbGVnYXRlXCIsIHR4XzEuTXNnQmVnaW5SZWRlbGVnYXRlXSxcbiAgICBbXCIvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dDcmVhdGVWYWxpZGF0b3JcIiwgdHhfMS5Nc2dDcmVhdGVWYWxpZGF0b3JdLFxuICAgIFtcIi9jb3Ntb3Muc3Rha2luZy52MWJldGExLk1zZ0RlbGVnYXRlXCIsIHR4XzEuTXNnRGVsZWdhdGVdLFxuICAgIFtcIi9jb3Ntb3Muc3Rha2luZy52MWJldGExLk1zZ0VkaXRWYWxpZGF0b3JcIiwgdHhfMS5Nc2dFZGl0VmFsaWRhdG9yXSxcbiAgICBbXCIvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dVbmRlbGVnYXRlXCIsIHR4XzEuTXNnVW5kZWxlZ2F0ZV0sXG4gICAgW1wiL2Nvc21vcy5zdGFraW5nLnYxYmV0YTEuTXNnQ2FuY2VsVW5ib25kaW5nRGVsZWdhdGlvblwiLCB0eF8xLk1zZ0NhbmNlbFVuYm9uZGluZ0RlbGVnYXRpb25dLFxuXTtcbmZ1bmN0aW9uIGlzTXNnQmVnaW5SZWRlbGVnYXRlRW5jb2RlT2JqZWN0KG8pIHtcbiAgICByZXR1cm4gby50eXBlVXJsID09PSBcIi9jb3Ntb3Muc3Rha2luZy52MWJldGExLk1zZ0JlZ2luUmVkZWxlZ2F0ZVwiO1xufVxuZXhwb3J0cy5pc01zZ0JlZ2luUmVkZWxlZ2F0ZUVuY29kZU9iamVjdCA9IGlzTXNnQmVnaW5SZWRlbGVnYXRlRW5jb2RlT2JqZWN0O1xuZnVuY3Rpb24gaXNNc2dDcmVhdGVWYWxpZGF0b3JFbmNvZGVPYmplY3Qobykge1xuICAgIHJldHVybiBvLnR5cGVVcmwgPT09IFwiL2Nvc21vcy5zdGFraW5nLnYxYmV0YTEuTXNnQ3JlYXRlVmFsaWRhdG9yXCI7XG59XG5leHBvcnRzLmlzTXNnQ3JlYXRlVmFsaWRhdG9yRW5jb2RlT2JqZWN0ID0gaXNNc2dDcmVhdGVWYWxpZGF0b3JFbmNvZGVPYmplY3Q7XG5mdW5jdGlvbiBpc01zZ0RlbGVnYXRlRW5jb2RlT2JqZWN0KG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QudHlwZVVybCA9PT0gXCIvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dEZWxlZ2F0ZVwiO1xufVxuZXhwb3J0cy5pc01zZ0RlbGVnYXRlRW5jb2RlT2JqZWN0ID0gaXNNc2dEZWxlZ2F0ZUVuY29kZU9iamVjdDtcbmZ1bmN0aW9uIGlzTXNnRWRpdFZhbGlkYXRvckVuY29kZU9iamVjdChvKSB7XG4gICAgcmV0dXJuIG8udHlwZVVybCA9PT0gXCIvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dFZGl0VmFsaWRhdG9yXCI7XG59XG5leHBvcnRzLmlzTXNnRWRpdFZhbGlkYXRvckVuY29kZU9iamVjdCA9IGlzTXNnRWRpdFZhbGlkYXRvckVuY29kZU9iamVjdDtcbmZ1bmN0aW9uIGlzTXNnVW5kZWxlZ2F0ZUVuY29kZU9iamVjdChvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0LnR5cGVVcmwgPT09IFwiL2Nvc21vcy5zdGFraW5nLnYxYmV0YTEuTXNnVW5kZWxlZ2F0ZVwiO1xufVxuZXhwb3J0cy5pc01zZ1VuZGVsZWdhdGVFbmNvZGVPYmplY3QgPSBpc01zZ1VuZGVsZWdhdGVFbmNvZGVPYmplY3Q7XG5mdW5jdGlvbiBpc01zZ0NhbmNlbFVuYm9uZGluZ0RlbGVnYXRpb25FbmNvZGVPYmplY3Qob2JqZWN0KSB7XG4gICAgcmV0dXJuIChvYmplY3QudHlwZVVybCA9PT1cbiAgICAgICAgXCIvY29zbW9zLnN0YWtpbmcudjFiZXRhMS5Nc2dDYW5jZWxVbmJvbmRpbmdEZWxlZ2F0aW9uXCIpO1xufVxuZXhwb3J0cy5pc01zZ0NhbmNlbFVuYm9uZGluZ0RlbGVnYXRpb25FbmNvZGVPYmplY3QgPSBpc01zZ0NhbmNlbFVuYm9uZGluZ0RlbGVnYXRpb25FbmNvZGVPYmplY3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tZXNzYWdlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/queries.js":
/*!************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/staking/queries.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupStakingExtension = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst query_1 = __webpack_require__(/*! cosmjs-types/cosmos/staking/v1beta1/query */ \"(ssr)/./node_modules/cosmjs-types/cosmos/staking/v1beta1/query.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupStakingExtension(base) {\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    const queryService = new query_1.QueryClientImpl(rpc);\n    return {\n        staking: {\n            delegation: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.Delegation({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress,\n                });\n                return response;\n            },\n            delegatorDelegations: async (delegatorAddress, paginationKey) => {\n                const response = await queryService.DelegatorDelegations({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            delegatorUnbondingDelegations: async (delegatorAddress, paginationKey) => {\n                const response = await queryService.DelegatorUnbondingDelegations({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            delegatorValidator: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.DelegatorValidator({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress,\n                });\n                return response;\n            },\n            delegatorValidators: async (delegatorAddress, paginationKey) => {\n                const response = await queryService.DelegatorValidators({\n                    delegatorAddr: delegatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            historicalInfo: async (height) => {\n                const response = await queryService.HistoricalInfo({\n                    height: BigInt(height),\n                });\n                return response;\n            },\n            params: async () => {\n                const response = await queryService.Params({});\n                return response;\n            },\n            pool: async () => {\n                const response = await queryService.Pool({});\n                return response;\n            },\n            redelegations: async (delegatorAddress, sourceValidatorAddress, destinationValidatorAddress, paginationKey) => {\n                const response = await queryService.Redelegations({\n                    delegatorAddr: delegatorAddress,\n                    srcValidatorAddr: sourceValidatorAddress,\n                    dstValidatorAddr: destinationValidatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            unbondingDelegation: async (delegatorAddress, validatorAddress) => {\n                const response = await queryService.UnbondingDelegation({\n                    delegatorAddr: delegatorAddress,\n                    validatorAddr: validatorAddress,\n                });\n                return response;\n            },\n            validator: async (validatorAddress) => {\n                const response = await queryService.Validator({ validatorAddr: validatorAddress });\n                return response;\n            },\n            validatorDelegations: async (validatorAddress, paginationKey) => {\n                const response = await queryService.ValidatorDelegations({\n                    validatorAddr: validatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            validators: async (status, paginationKey) => {\n                const response = await queryService.Validators({\n                    status: status,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n            validatorUnbondingDelegations: async (validatorAddress, paginationKey) => {\n                const response = await queryService.ValidatorUnbondingDelegations({\n                    validatorAddr: validatorAddress,\n                    pagination: (0, queryclient_1.createPagination)(paginationKey),\n                });\n                return response;\n            },\n        },\n    };\n}\nexports.setupStakingExtension = setupStakingExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/staking/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/tx/queries.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/tx/queries.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.setupTxExtension = void 0;\nconst proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\nconst signing_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/signing/v1beta1/signing */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js\");\nconst service_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/service */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/service.js\");\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\nconst queryclient_1 = __webpack_require__(/*! ../../queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nfunction setupTxExtension(base) {\n    // Use this service to get easy typed access to query methods\n    // This cannot be used for proof verification\n    const rpc = (0, queryclient_1.createProtobufRpcClient)(base);\n    const queryService = new service_1.ServiceClientImpl(rpc);\n    return {\n        tx: {\n            getTx: async (txId) => {\n                const request = {\n                    hash: txId,\n                };\n                const response = await queryService.GetTx(request);\n                return response;\n            },\n            simulate: async (messages, memo, signer, sequence) => {\n                const tx = tx_1.Tx.fromPartial({\n                    authInfo: tx_1.AuthInfo.fromPartial({\n                        fee: tx_1.Fee.fromPartial({}),\n                        signerInfos: [\n                            {\n                                publicKey: (0, proto_signing_1.encodePubkey)(signer),\n                                sequence: BigInt(sequence),\n                                modeInfo: { single: { mode: signing_1.SignMode.SIGN_MODE_UNSPECIFIED } },\n                            },\n                        ],\n                    }),\n                    body: tx_1.TxBody.fromPartial({\n                        messages: Array.from(messages),\n                        memo: memo,\n                    }),\n                    signatures: [new Uint8Array()],\n                });\n                const request = service_1.SimulateRequest.fromPartial({\n                    txBytes: tx_1.Tx.encode(tx).finish(),\n                });\n                const response = await queryService.Simulate(request);\n                return response;\n            },\n        },\n    };\n}\nexports.setupTxExtension = setupTxExtension;\n//# sourceMappingURL=queries.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3R4L3F1ZXJpZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsd0JBQXdCO0FBQ3hCLHdCQUF3QixtQkFBTyxDQUFDLHdGQUF1QjtBQUN2RCxrQkFBa0IsbUJBQU8sQ0FBQyw4SEFBZ0Q7QUFDMUUsa0JBQWtCLG1CQUFPLENBQUMsOEdBQXdDO0FBQ2xFLGFBQWEsbUJBQU8sQ0FBQyxvR0FBbUM7QUFDeEQsc0JBQXNCLG1CQUFPLENBQUMsMkZBQW1CO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxVQUFVLGtEQUFrRDtBQUN4Ryw2QkFBNkI7QUFDN0I7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3R4L3F1ZXJpZXMuanM/ZWU3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuc2V0dXBUeEV4dGVuc2lvbiA9IHZvaWQgMDtcbmNvbnN0IHByb3RvX3NpZ25pbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL3Byb3RvLXNpZ25pbmdcIik7XG5jb25zdCBzaWduaW5nXzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy90eC9zaWduaW5nL3YxYmV0YTEvc2lnbmluZ1wiKTtcbmNvbnN0IHNlcnZpY2VfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3R4L3YxYmV0YTEvc2VydmljZVwiKTtcbmNvbnN0IHR4XzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy90eC92MWJldGExL3R4XCIpO1xuY29uc3QgcXVlcnljbGllbnRfMSA9IHJlcXVpcmUoXCIuLi8uLi9xdWVyeWNsaWVudFwiKTtcbmZ1bmN0aW9uIHNldHVwVHhFeHRlbnNpb24oYmFzZSkge1xuICAgIC8vIFVzZSB0aGlzIHNlcnZpY2UgdG8gZ2V0IGVhc3kgdHlwZWQgYWNjZXNzIHRvIHF1ZXJ5IG1ldGhvZHNcbiAgICAvLyBUaGlzIGNhbm5vdCBiZSB1c2VkIGZvciBwcm9vZiB2ZXJpZmljYXRpb25cbiAgICBjb25zdCBycGMgPSAoMCwgcXVlcnljbGllbnRfMS5jcmVhdGVQcm90b2J1ZlJwY0NsaWVudCkoYmFzZSk7XG4gICAgY29uc3QgcXVlcnlTZXJ2aWNlID0gbmV3IHNlcnZpY2VfMS5TZXJ2aWNlQ2xpZW50SW1wbChycGMpO1xuICAgIHJldHVybiB7XG4gICAgICAgIHR4OiB7XG4gICAgICAgICAgICBnZXRUeDogYXN5bmMgKHR4SWQpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgICAgICAgICBoYXNoOiB0eElkLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBxdWVyeVNlcnZpY2UuR2V0VHgocmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNpbXVsYXRlOiBhc3luYyAobWVzc2FnZXMsIG1lbW8sIHNpZ25lciwgc2VxdWVuY2UpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0eCA9IHR4XzEuVHguZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICBhdXRoSW5mbzogdHhfMS5BdXRoSW5mby5mcm9tUGFydGlhbCh7XG4gICAgICAgICAgICAgICAgICAgICAgICBmZWU6IHR4XzEuRmVlLmZyb21QYXJ0aWFsKHt9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNpZ25lckluZm9zOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwdWJsaWNLZXk6ICgwLCBwcm90b19zaWduaW5nXzEuZW5jb2RlUHVia2V5KShzaWduZXIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXF1ZW5jZTogQmlnSW50KHNlcXVlbmNlKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZUluZm86IHsgc2luZ2xlOiB7IG1vZGU6IHNpZ25pbmdfMS5TaWduTW9kZS5TSUdOX01PREVfVU5TUEVDSUZJRUQgfSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgYm9keTogdHhfMS5UeEJvZHkuZnJvbVBhcnRpYWwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVzc2FnZXM6IEFycmF5LmZyb20obWVzc2FnZXMpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbWVtbzogbWVtbyxcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgIHNpZ25hdHVyZXM6IFtuZXcgVWludDhBcnJheSgpXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXF1ZXN0ID0gc2VydmljZV8xLlNpbXVsYXRlUmVxdWVzdC5mcm9tUGFydGlhbCh7XG4gICAgICAgICAgICAgICAgICAgIHR4Qnl0ZXM6IHR4XzEuVHguZW5jb2RlKHR4KS5maW5pc2goKSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHF1ZXJ5U2VydmljZS5TaW11bGF0ZShyZXF1ZXN0KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLnNldHVwVHhFeHRlbnNpb24gPSBzZXR1cFR4RXh0ZW5zaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cXVlcmllcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/tx/queries.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createVestingAminoConverters = exports.isAminoMsgCreateVestingAccount = void 0;\nfunction isAminoMsgCreateVestingAccount(msg) {\n    return msg.type === \"cosmos-sdk/MsgCreateVestingAccount\";\n}\nexports.isAminoMsgCreateVestingAccount = isAminoMsgCreateVestingAccount;\nfunction createVestingAminoConverters() {\n    return {\n        \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\": {\n            aminoType: \"cosmos-sdk/MsgCreateVestingAccount\",\n            toAmino: ({ fromAddress, toAddress, amount, endTime, delayed, }) => ({\n                from_address: fromAddress,\n                to_address: toAddress,\n                amount: [...amount],\n                end_time: endTime.toString(),\n                delayed: delayed,\n            }),\n            fromAmino: ({ from_address, to_address, amount, end_time, delayed, }) => ({\n                fromAddress: from_address,\n                toAddress: to_address,\n                amount: [...amount],\n                endTime: BigInt(end_time),\n                delayed: delayed,\n            }),\n        },\n    };\n}\nexports.createVestingAminoConverters = createVestingAminoConverters;\n//# sourceMappingURL=aminomessages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3Zlc3RpbmcvYW1pbm9tZXNzYWdlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQ0FBb0MsR0FBRyxzQ0FBc0M7QUFDN0U7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG1EQUFtRDtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLDBCQUEwQixzREFBc0Q7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3Zlc3RpbmcvYW1pbm9tZXNzYWdlcy5qcz82YTcyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVWZXN0aW5nQW1pbm9Db252ZXJ0ZXJzID0gZXhwb3J0cy5pc0FtaW5vTXNnQ3JlYXRlVmVzdGluZ0FjY291bnQgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc0FtaW5vTXNnQ3JlYXRlVmVzdGluZ0FjY291bnQobXNnKSB7XG4gICAgcmV0dXJuIG1zZy50eXBlID09PSBcImNvc21vcy1zZGsvTXNnQ3JlYXRlVmVzdGluZ0FjY291bnRcIjtcbn1cbmV4cG9ydHMuaXNBbWlub01zZ0NyZWF0ZVZlc3RpbmdBY2NvdW50ID0gaXNBbWlub01zZ0NyZWF0ZVZlc3RpbmdBY2NvdW50O1xuZnVuY3Rpb24gY3JlYXRlVmVzdGluZ0FtaW5vQ29udmVydGVycygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBcIi9jb3Ntb3MudmVzdGluZy52MWJldGExLk1zZ0NyZWF0ZVZlc3RpbmdBY2NvdW50XCI6IHtcbiAgICAgICAgICAgIGFtaW5vVHlwZTogXCJjb3Ntb3Mtc2RrL01zZ0NyZWF0ZVZlc3RpbmdBY2NvdW50XCIsXG4gICAgICAgICAgICB0b0FtaW5vOiAoeyBmcm9tQWRkcmVzcywgdG9BZGRyZXNzLCBhbW91bnQsIGVuZFRpbWUsIGRlbGF5ZWQsIH0pID0+ICh7XG4gICAgICAgICAgICAgICAgZnJvbV9hZGRyZXNzOiBmcm9tQWRkcmVzcyxcbiAgICAgICAgICAgICAgICB0b19hZGRyZXNzOiB0b0FkZHJlc3MsXG4gICAgICAgICAgICAgICAgYW1vdW50OiBbLi4uYW1vdW50XSxcbiAgICAgICAgICAgICAgICBlbmRfdGltZTogZW5kVGltZS50b1N0cmluZygpLFxuICAgICAgICAgICAgICAgIGRlbGF5ZWQ6IGRlbGF5ZWQsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGZyb21BbWlubzogKHsgZnJvbV9hZGRyZXNzLCB0b19hZGRyZXNzLCBhbW91bnQsIGVuZF90aW1lLCBkZWxheWVkLCB9KSA9PiAoe1xuICAgICAgICAgICAgICAgIGZyb21BZGRyZXNzOiBmcm9tX2FkZHJlc3MsXG4gICAgICAgICAgICAgICAgdG9BZGRyZXNzOiB0b19hZGRyZXNzLFxuICAgICAgICAgICAgICAgIGFtb3VudDogWy4uLmFtb3VudF0sXG4gICAgICAgICAgICAgICAgZW5kVGltZTogQmlnSW50KGVuZF90aW1lKSxcbiAgICAgICAgICAgICAgICBkZWxheWVkOiBkZWxheWVkLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmV4cG9ydHMuY3JlYXRlVmVzdGluZ0FtaW5vQ29udmVydGVycyA9IGNyZWF0ZVZlc3RpbmdBbWlub0NvbnZlcnRlcnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hbWlub21lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/vesting/aminomessages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/modules/vesting/messages.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/modules/vesting/messages.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.vestingTypes = void 0;\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/vesting/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/vesting/v1beta1/tx.js\");\nexports.vestingTypes = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", tx_1.MsgCreateVestingAccount],\n];\n//# sourceMappingURL=messages.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3Zlc3RpbmcvbWVzc2FnZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGFBQWEsbUJBQU8sQ0FBQyw4R0FBd0M7QUFDN0Qsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tb2R1bGVzL3Zlc3RpbmcvbWVzc2FnZXMuanM/OGM5YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMudmVzdGluZ1R5cGVzID0gdm9pZCAwO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3Zlc3RpbmcvdjFiZXRhMS90eFwiKTtcbmV4cG9ydHMudmVzdGluZ1R5cGVzID0gW1xuICAgIFtcIi9jb3Ntb3MudmVzdGluZy52MWJldGExLk1zZ0NyZWF0ZVZlc3RpbmdBY2NvdW50XCIsIHR4XzEuTXNnQ3JlYXRlVmVzdGluZ0FjY291bnRdLFxuXTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1lc3NhZ2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/modules/vesting/messages.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/multisignature.js":
/*!***************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/multisignature.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.makeMultisignedTxBytes = exports.makeMultisignedTx = exports.makeCompactBitArray = void 0;\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\nconst multisig_1 = __webpack_require__(/*! cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig */ \"(ssr)/./node_modules/cosmjs-types/cosmos/crypto/multisig/v1beta1/multisig.js\");\nconst signing_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/signing/v1beta1/signing */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js\");\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\nconst tx_2 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\nfunction makeCompactBitArray(bits) {\n    const byteCount = Math.ceil(bits.length / 8);\n    const extraBits = bits.length - Math.floor(bits.length / 8) * 8;\n    const bytes = new Uint8Array(byteCount); // zero-filled\n    bits.forEach((value, index) => {\n        const bytePos = Math.floor(index / 8);\n        const bitPos = index % 8;\n        // eslint-disable-next-line no-bitwise\n        if (value)\n            bytes[bytePos] |= 0b1 << (8 - 1 - bitPos);\n    });\n    return multisig_1.CompactBitArray.fromPartial({ elems: bytes, extraBitsStored: extraBits });\n}\nexports.makeCompactBitArray = makeCompactBitArray;\n/**\n * Creates a signed transaction from signer info, transaction body and signatures.\n * The result can be broadcasted after serialization.\n *\n * Consider using `makeMultisignedTxBytes` instead if you want to broadcast the\n * transaction immediately.\n */\nfunction makeMultisignedTx(multisigPubkey, sequence, fee, bodyBytes, signatures) {\n    const addresses = Array.from(signatures.keys());\n    const prefix = (0, encoding_1.fromBech32)(addresses[0]).prefix;\n    const signers = Array(multisigPubkey.value.pubkeys.length).fill(false);\n    const signaturesList = new Array();\n    for (let i = 0; i < multisigPubkey.value.pubkeys.length; i++) {\n        const signerAddress = (0, amino_1.pubkeyToAddress)(multisigPubkey.value.pubkeys[i], prefix);\n        const signature = signatures.get(signerAddress);\n        if (signature) {\n            signers[i] = true;\n            signaturesList.push(signature);\n        }\n    }\n    const signerInfo = {\n        publicKey: (0, proto_signing_1.encodePubkey)(multisigPubkey),\n        modeInfo: {\n            multi: {\n                bitarray: makeCompactBitArray(signers),\n                modeInfos: signaturesList.map((_) => ({ single: { mode: signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON } })),\n            },\n        },\n        sequence: BigInt(sequence),\n    };\n    const authInfo = tx_1.AuthInfo.fromPartial({\n        signerInfos: [signerInfo],\n        fee: {\n            amount: [...fee.amount],\n            gasLimit: BigInt(fee.gas),\n        },\n    });\n    const authInfoBytes = tx_1.AuthInfo.encode(authInfo).finish();\n    const signedTx = tx_2.TxRaw.fromPartial({\n        bodyBytes: bodyBytes,\n        authInfoBytes: authInfoBytes,\n        signatures: [multisig_1.MultiSignature.encode(multisig_1.MultiSignature.fromPartial({ signatures: signaturesList })).finish()],\n    });\n    return signedTx;\n}\nexports.makeMultisignedTx = makeMultisignedTx;\n/**\n * Creates a signed transaction from signer info, transaction body and signatures.\n * The result can be broadcasted.\n *\n * This is a wrapper around `makeMultisignedTx` that encodes the transaction for broadcasting.\n */\nfunction makeMultisignedTxBytes(multisigPubkey, sequence, fee, bodyBytes, signatures) {\n    const signedTx = makeMultisignedTx(multisigPubkey, sequence, fee, bodyBytes, signatures);\n    return Uint8Array.from(tx_2.TxRaw.encode(signedTx).finish());\n}\nexports.makeMultisignedTxBytes = makeMultisignedTxBytes;\n//# sourceMappingURL=multisignature.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9tdWx0aXNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw4QkFBOEIsR0FBRyx5QkFBeUIsR0FBRywyQkFBMkI7QUFDeEYsZ0JBQWdCLG1CQUFPLENBQUMsd0VBQWU7QUFDdkMsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLHdCQUF3QixtQkFBTyxDQUFDLHdGQUF1QjtBQUN2RCxtQkFBbUIsbUJBQU8sQ0FBQywwSUFBc0Q7QUFDakYsa0JBQWtCLG1CQUFPLENBQUMsOEhBQWdEO0FBQzFFLGFBQWEsbUJBQU8sQ0FBQyxvR0FBbUM7QUFDeEQsYUFBYSxtQkFBTyxDQUFDLG9HQUFtQztBQUN4RDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLG9EQUFvRCwwQ0FBMEM7QUFDOUY7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHlDQUF5QztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsVUFBVSx3REFBd0Q7QUFDMUgsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4RkFBOEYsNEJBQTRCO0FBQzFILEtBQUs7QUFDTDtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL211bHRpc2lnbmF0dXJlLmpzP2YzYTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLm1ha2VNdWx0aXNpZ25lZFR4Qnl0ZXMgPSBleHBvcnRzLm1ha2VNdWx0aXNpZ25lZFR4ID0gZXhwb3J0cy5tYWtlQ29tcGFjdEJpdEFycmF5ID0gdm9pZCAwO1xuY29uc3QgYW1pbm9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2FtaW5vXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3QgcHJvdG9fc2lnbmluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvcHJvdG8tc2lnbmluZ1wiKTtcbmNvbnN0IG11bHRpc2lnXzEgPSByZXF1aXJlKFwiY29zbWpzLXR5cGVzL2Nvc21vcy9jcnlwdG8vbXVsdGlzaWcvdjFiZXRhMS9tdWx0aXNpZ1wiKTtcbmNvbnN0IHNpZ25pbmdfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3R4L3NpZ25pbmcvdjFiZXRhMS9zaWduaW5nXCIpO1xuY29uc3QgdHhfMSA9IHJlcXVpcmUoXCJjb3NtanMtdHlwZXMvY29zbW9zL3R4L3YxYmV0YTEvdHhcIik7XG5jb25zdCB0eF8yID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvdHgvdjFiZXRhMS90eFwiKTtcbmZ1bmN0aW9uIG1ha2VDb21wYWN0Qml0QXJyYXkoYml0cykge1xuICAgIGNvbnN0IGJ5dGVDb3VudCA9IE1hdGguY2VpbChiaXRzLmxlbmd0aCAvIDgpO1xuICAgIGNvbnN0IGV4dHJhQml0cyA9IGJpdHMubGVuZ3RoIC0gTWF0aC5mbG9vcihiaXRzLmxlbmd0aCAvIDgpICogODtcbiAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KGJ5dGVDb3VudCk7IC8vIHplcm8tZmlsbGVkXG4gICAgYml0cy5mb3JFYWNoKCh2YWx1ZSwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgYnl0ZVBvcyA9IE1hdGguZmxvb3IoaW5kZXggLyA4KTtcbiAgICAgICAgY29uc3QgYml0UG9zID0gaW5kZXggJSA4O1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYml0d2lzZVxuICAgICAgICBpZiAodmFsdWUpXG4gICAgICAgICAgICBieXRlc1tieXRlUG9zXSB8PSAwYjEgPDwgKDggLSAxIC0gYml0UG9zKTtcbiAgICB9KTtcbiAgICByZXR1cm4gbXVsdGlzaWdfMS5Db21wYWN0Qml0QXJyYXkuZnJvbVBhcnRpYWwoeyBlbGVtczogYnl0ZXMsIGV4dHJhQml0c1N0b3JlZDogZXh0cmFCaXRzIH0pO1xufVxuZXhwb3J0cy5tYWtlQ29tcGFjdEJpdEFycmF5ID0gbWFrZUNvbXBhY3RCaXRBcnJheTtcbi8qKlxuICogQ3JlYXRlcyBhIHNpZ25lZCB0cmFuc2FjdGlvbiBmcm9tIHNpZ25lciBpbmZvLCB0cmFuc2FjdGlvbiBib2R5IGFuZCBzaWduYXR1cmVzLlxuICogVGhlIHJlc3VsdCBjYW4gYmUgYnJvYWRjYXN0ZWQgYWZ0ZXIgc2VyaWFsaXphdGlvbi5cbiAqXG4gKiBDb25zaWRlciB1c2luZyBgbWFrZU11bHRpc2lnbmVkVHhCeXRlc2AgaW5zdGVhZCBpZiB5b3Ugd2FudCB0byBicm9hZGNhc3QgdGhlXG4gKiB0cmFuc2FjdGlvbiBpbW1lZGlhdGVseS5cbiAqL1xuZnVuY3Rpb24gbWFrZU11bHRpc2lnbmVkVHgobXVsdGlzaWdQdWJrZXksIHNlcXVlbmNlLCBmZWUsIGJvZHlCeXRlcywgc2lnbmF0dXJlcykge1xuICAgIGNvbnN0IGFkZHJlc3NlcyA9IEFycmF5LmZyb20oc2lnbmF0dXJlcy5rZXlzKCkpO1xuICAgIGNvbnN0IHByZWZpeCA9ICgwLCBlbmNvZGluZ18xLmZyb21CZWNoMzIpKGFkZHJlc3Nlc1swXSkucHJlZml4O1xuICAgIGNvbnN0IHNpZ25lcnMgPSBBcnJheShtdWx0aXNpZ1B1YmtleS52YWx1ZS5wdWJrZXlzLmxlbmd0aCkuZmlsbChmYWxzZSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlc0xpc3QgPSBuZXcgQXJyYXkoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG11bHRpc2lnUHVia2V5LnZhbHVlLnB1YmtleXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3Qgc2lnbmVyQWRkcmVzcyA9ICgwLCBhbWlub18xLnB1YmtleVRvQWRkcmVzcykobXVsdGlzaWdQdWJrZXkudmFsdWUucHVia2V5c1tpXSwgcHJlZml4KTtcbiAgICAgICAgY29uc3Qgc2lnbmF0dXJlID0gc2lnbmF0dXJlcy5nZXQoc2lnbmVyQWRkcmVzcyk7XG4gICAgICAgIGlmIChzaWduYXR1cmUpIHtcbiAgICAgICAgICAgIHNpZ25lcnNbaV0gPSB0cnVlO1xuICAgICAgICAgICAgc2lnbmF0dXJlc0xpc3QucHVzaChzaWduYXR1cmUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHNpZ25lckluZm8gPSB7XG4gICAgICAgIHB1YmxpY0tleTogKDAsIHByb3RvX3NpZ25pbmdfMS5lbmNvZGVQdWJrZXkpKG11bHRpc2lnUHVia2V5KSxcbiAgICAgICAgbW9kZUluZm86IHtcbiAgICAgICAgICAgIG11bHRpOiB7XG4gICAgICAgICAgICAgICAgYml0YXJyYXk6IG1ha2VDb21wYWN0Qml0QXJyYXkoc2lnbmVycyksXG4gICAgICAgICAgICAgICAgbW9kZUluZm9zOiBzaWduYXR1cmVzTGlzdC5tYXAoKF8pID0+ICh7IHNpbmdsZTogeyBtb2RlOiBzaWduaW5nXzEuU2lnbk1vZGUuU0lHTl9NT0RFX0xFR0FDWV9BTUlOT19KU09OIH0gfSkpLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgc2VxdWVuY2U6IEJpZ0ludChzZXF1ZW5jZSksXG4gICAgfTtcbiAgICBjb25zdCBhdXRoSW5mbyA9IHR4XzEuQXV0aEluZm8uZnJvbVBhcnRpYWwoe1xuICAgICAgICBzaWduZXJJbmZvczogW3NpZ25lckluZm9dLFxuICAgICAgICBmZWU6IHtcbiAgICAgICAgICAgIGFtb3VudDogWy4uLmZlZS5hbW91bnRdLFxuICAgICAgICAgICAgZ2FzTGltaXQ6IEJpZ0ludChmZWUuZ2FzKSxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBhdXRoSW5mb0J5dGVzID0gdHhfMS5BdXRoSW5mby5lbmNvZGUoYXV0aEluZm8pLmZpbmlzaCgpO1xuICAgIGNvbnN0IHNpZ25lZFR4ID0gdHhfMi5UeFJhdy5mcm9tUGFydGlhbCh7XG4gICAgICAgIGJvZHlCeXRlczogYm9keUJ5dGVzLFxuICAgICAgICBhdXRoSW5mb0J5dGVzOiBhdXRoSW5mb0J5dGVzLFxuICAgICAgICBzaWduYXR1cmVzOiBbbXVsdGlzaWdfMS5NdWx0aVNpZ25hdHVyZS5lbmNvZGUobXVsdGlzaWdfMS5NdWx0aVNpZ25hdHVyZS5mcm9tUGFydGlhbCh7IHNpZ25hdHVyZXM6IHNpZ25hdHVyZXNMaXN0IH0pKS5maW5pc2goKV0sXG4gICAgfSk7XG4gICAgcmV0dXJuIHNpZ25lZFR4O1xufVxuZXhwb3J0cy5tYWtlTXVsdGlzaWduZWRUeCA9IG1ha2VNdWx0aXNpZ25lZFR4O1xuLyoqXG4gKiBDcmVhdGVzIGEgc2lnbmVkIHRyYW5zYWN0aW9uIGZyb20gc2lnbmVyIGluZm8sIHRyYW5zYWN0aW9uIGJvZHkgYW5kIHNpZ25hdHVyZXMuXG4gKiBUaGUgcmVzdWx0IGNhbiBiZSBicm9hZGNhc3RlZC5cbiAqXG4gKiBUaGlzIGlzIGEgd3JhcHBlciBhcm91bmQgYG1ha2VNdWx0aXNpZ25lZFR4YCB0aGF0IGVuY29kZXMgdGhlIHRyYW5zYWN0aW9uIGZvciBicm9hZGNhc3RpbmcuXG4gKi9cbmZ1bmN0aW9uIG1ha2VNdWx0aXNpZ25lZFR4Qnl0ZXMobXVsdGlzaWdQdWJrZXksIHNlcXVlbmNlLCBmZWUsIGJvZHlCeXRlcywgc2lnbmF0dXJlcykge1xuICAgIGNvbnN0IHNpZ25lZFR4ID0gbWFrZU11bHRpc2lnbmVkVHgobXVsdGlzaWdQdWJrZXksIHNlcXVlbmNlLCBmZWUsIGJvZHlCeXRlcywgc2lnbmF0dXJlcyk7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh0eF8yLlR4UmF3LmVuY29kZShzaWduZWRUeCkuZmluaXNoKCkpO1xufVxuZXhwb3J0cy5tYWtlTXVsdGlzaWduZWRUeEJ5dGVzID0gbWFrZU11bHRpc2lnbmVkVHhCeXRlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW11bHRpc2lnbmF0dXJlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/multisignature.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/queryclient/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.longify = exports.decodeCosmosSdkDecFromProto = exports.createProtobufRpcClient = exports.createPagination = exports.QueryClient = void 0;\nvar queryclient_1 = __webpack_require__(/*! ./queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/queryclient.js\");\nObject.defineProperty(exports, \"QueryClient\", ({ enumerable: true, get: function () { return queryclient_1.QueryClient; } }));\nvar utils_1 = __webpack_require__(/*! ./utils */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/utils.js\");\nObject.defineProperty(exports, \"createPagination\", ({ enumerable: true, get: function () { return utils_1.createPagination; } }));\nObject.defineProperty(exports, \"createProtobufRpcClient\", ({ enumerable: true, get: function () { return utils_1.createProtobufRpcClient; } }));\nObject.defineProperty(exports, \"decodeCosmosSdkDecFromProto\", ({ enumerable: true, get: function () { return utils_1.decodeCosmosSdkDecFromProto; } }));\nObject.defineProperty(exports, \"longify\", ({ enumerable: true, get: function () { return utils_1.longify; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9xdWVyeWNsaWVudC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxlQUFlLEdBQUcsbUNBQW1DLEdBQUcsK0JBQStCLEdBQUcsd0JBQXdCLEdBQUcsbUJBQW1CO0FBQ3hJLG9CQUFvQixtQkFBTyxDQUFDLDZGQUFlO0FBQzNDLCtDQUE4QyxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUMzSCxjQUFjLG1CQUFPLENBQUMsaUZBQVM7QUFDL0Isb0RBQW1ELEVBQUUscUNBQXFDLG9DQUFvQyxFQUFDO0FBQy9ILDJEQUEwRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUM3SSwrREFBOEQsRUFBRSxxQ0FBcUMsK0NBQStDLEVBQUM7QUFDckosMkNBQTBDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzdHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0YXJnYXRlL2J1aWxkL3F1ZXJ5Y2xpZW50L2luZGV4LmpzP2Y2ZjMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmxvbmdpZnkgPSBleHBvcnRzLmRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90byA9IGV4cG9ydHMuY3JlYXRlUHJvdG9idWZScGNDbGllbnQgPSBleHBvcnRzLmNyZWF0ZVBhZ2luYXRpb24gPSBleHBvcnRzLlF1ZXJ5Q2xpZW50ID0gdm9pZCAwO1xudmFyIHF1ZXJ5Y2xpZW50XzEgPSByZXF1aXJlKFwiLi9xdWVyeWNsaWVudFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlF1ZXJ5Q2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBxdWVyeWNsaWVudF8xLlF1ZXJ5Q2xpZW50OyB9IH0pO1xudmFyIHV0aWxzXzEgPSByZXF1aXJlKFwiLi91dGlsc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZVBhZ2luYXRpb25cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEuY3JlYXRlUGFnaW5hdGlvbjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImNyZWF0ZVByb3RvYnVmUnBjQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmNyZWF0ZVByb3RvYnVmUnBjQ2xpZW50OyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZGVjb2RlQ29zbW9zU2RrRGVjRnJvbVByb3RvXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB1dGlsc18xLmRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90bzsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImxvbmdpZnlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHV0aWxzXzEubG9uZ2lmeTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/queryclient.js":
/*!************************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/queryclient/queryclient.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.QueryClient = void 0;\n/* eslint-disable no-dupe-class-members, @typescript-eslint/ban-types, @typescript-eslint/naming-convention */\nconst ics23_1 = __webpack_require__(/*! @confio/ics23 */ \"(ssr)/./node_modules/@confio/ics23/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst stream_1 = __webpack_require__(/*! @cosmjs/stream */ \"(ssr)/./node_modules/@cosmjs/stream/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nfunction checkAndParseOp(op, kind, key) {\n    if (op.type !== kind) {\n        throw new Error(`Op expected to be ${kind}, got \"${op.type}`);\n    }\n    if (!(0, utils_1.arrayContentEquals)(key, op.key)) {\n        throw new Error(`Proven key different than queried key.\\nQuery: ${(0, encoding_1.toHex)(key)}\\nProven: ${(0, encoding_1.toHex)(op.key)}`);\n    }\n    return ics23_1.ics23.CommitmentProof.decode(op.data);\n}\nclass QueryClient {\n    static withExtensions(cometClient, ...extensionSetups) {\n        const client = new QueryClient(cometClient);\n        const extensions = extensionSetups.map((setupExtension) => setupExtension(client));\n        for (const extension of extensions) {\n            (0, utils_1.assert)((0, utils_1.isNonNullObject)(extension), `Extension must be a non-null object`);\n            for (const [moduleKey, moduleValue] of Object.entries(extension)) {\n                (0, utils_1.assert)((0, utils_1.isNonNullObject)(moduleValue), `Module must be a non-null object. Found type ${typeof moduleValue} for module \"${moduleKey}\".`);\n                const current = client[moduleKey] || {};\n                client[moduleKey] = {\n                    ...current,\n                    ...moduleValue,\n                };\n            }\n        }\n        return client;\n    }\n    constructor(cometClient) {\n        this.cometClient = cometClient;\n    }\n    /**\n     * Queries the database store with a proof, which is then verified.\n     *\n     * Please note: the current implementation trusts block headers it gets from the PRC endpoint.\n     */\n    async queryStoreVerified(store, queryKey, desiredHeight) {\n        const { height, proof, key, value } = await this.queryRawProof(store, queryKey, desiredHeight);\n        const subProof = checkAndParseOp(proof.ops[0], \"ics23:iavl\", queryKey);\n        const storeProof = checkAndParseOp(proof.ops[1], \"ics23:simple\", (0, encoding_1.toAscii)(store));\n        // this must always be existence, if the store is not a typo\n        (0, utils_1.assert)(storeProof.exist);\n        (0, utils_1.assert)(storeProof.exist.value);\n        // this may be exist or non-exist, depends on response\n        if (!value || value.length === 0) {\n            // non-existence check\n            (0, utils_1.assert)(subProof.nonexist);\n            // the subproof must map the desired key to the \"value\" of the storeProof\n            (0, ics23_1.verifyNonExistence)(subProof.nonexist, ics23_1.iavlSpec, storeProof.exist.value, queryKey);\n        }\n        else {\n            // existence check\n            (0, utils_1.assert)(subProof.exist);\n            (0, utils_1.assert)(subProof.exist.value);\n            // the subproof must map the desired key to the \"value\" of the storeProof\n            (0, ics23_1.verifyExistence)(subProof.exist, ics23_1.iavlSpec, storeProof.exist.value, queryKey, value);\n        }\n        // the store proof must map its declared value (root of subProof) to the appHash of the next block\n        const header = await this.getNextHeader(height);\n        (0, ics23_1.verifyExistence)(storeProof.exist, ics23_1.tendermintSpec, header.appHash, (0, encoding_1.toAscii)(store), storeProof.exist.value);\n        return { key, value, height };\n    }\n    async queryRawProof(store, queryKey, desiredHeight) {\n        const { key, value, height, proof, code, log } = await this.cometClient.abciQuery({\n            // we need the StoreKey for the module, not the module name\n            // https://github.com/cosmos/cosmos-sdk/blob/8cab43c8120fec5200c3459cbf4a92017bb6f287/x/auth/types/keys.go#L12\n            path: `/store/${store}/key`,\n            data: queryKey,\n            prove: true,\n            height: desiredHeight,\n        });\n        if (code) {\n            throw new Error(`Query failed with (${code}): ${log}`);\n        }\n        if (!(0, utils_1.arrayContentEquals)(queryKey, key)) {\n            throw new Error(`Response key ${(0, encoding_1.toHex)(key)} doesn't match query key ${(0, encoding_1.toHex)(queryKey)}`);\n        }\n        if (!height) {\n            throw new Error(\"No query height returned\");\n        }\n        if (!proof || proof.ops.length !== 2) {\n            throw new Error(`Expected 2 proof ops, got ${proof?.ops.length ?? 0}. Are you using stargate?`);\n        }\n        // we don't need the results, but we can ensure the data is the proper format\n        checkAndParseOp(proof.ops[0], \"ics23:iavl\", key);\n        checkAndParseOp(proof.ops[1], \"ics23:simple\", (0, encoding_1.toAscii)(store));\n        return {\n            key: key,\n            value: value,\n            height: height,\n            // need to clone this: readonly input / writeable output\n            proof: {\n                ops: [...proof.ops],\n            },\n        };\n    }\n    /**\n     * Performs an ABCI query to Tendermint without requesting a proof.\n     *\n     * If the `desiredHeight` is set, a particular height is requested. Otherwise\n     * the latest height is requested. The response contains the actual height of\n     * the query.\n     */\n    async queryAbci(path, request, desiredHeight) {\n        const response = await this.cometClient.abciQuery({\n            path: path,\n            data: request,\n            prove: false,\n            height: desiredHeight,\n        });\n        if (response.code) {\n            throw new Error(`Query failed with (${response.code}): ${response.log}`);\n        }\n        if (!response.height) {\n            throw new Error(\"No query height returned\");\n        }\n        return {\n            value: response.value,\n            height: response.height,\n        };\n    }\n    // this must return the header for height+1\n    // throws an error if height is 0 or undefined\n    async getNextHeader(height) {\n        (0, utils_1.assertDefined)(height);\n        if (height === 0) {\n            throw new Error(\"Query returned height 0, cannot prove it\");\n        }\n        const searchHeight = height + 1;\n        let nextHeader;\n        let headersSubscription;\n        try {\n            headersSubscription = this.cometClient.subscribeNewBlockHeader();\n        }\n        catch {\n            // Ignore exception caused by non-WebSocket Tendermint clients\n        }\n        if (headersSubscription) {\n            const firstHeader = await (0, stream_1.firstEvent)(headersSubscription);\n            // The first header we get might not be n+1 but n+2 or even higher. In such cases we fall back on a query.\n            if (firstHeader.height === searchHeight) {\n                nextHeader = firstHeader;\n            }\n        }\n        while (!nextHeader) {\n            // start from current height to avoid backend error for minHeight in the future\n            const correctHeader = (await this.cometClient.blockchain(height, searchHeight)).blockMetas\n                .map((meta) => meta.header)\n                .find((h) => h.height === searchHeight);\n            if (correctHeader) {\n                nextHeader = correctHeader;\n            }\n            else {\n                await (0, utils_1.sleep)(1000);\n            }\n        }\n        (0, utils_1.assert)(nextHeader.height === searchHeight, \"Got wrong header. This is a bug in the logic above.\");\n        return nextHeader;\n    }\n}\nexports.QueryClient = QueryClient;\n//# sourceMappingURL=queryclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9xdWVyeWNsaWVudC9xdWVyeWNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkI7QUFDQSxnQkFBZ0IsbUJBQU8sQ0FBQyx3RUFBZTtBQUN2QyxtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDN0MsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLGdCQUFnQixtQkFBTyxDQUFDLHdFQUFlO0FBQ3ZDO0FBQ0E7QUFDQSw2Q0FBNkMsS0FBSyxTQUFTLFFBQVE7QUFDbkU7QUFDQTtBQUNBLDBFQUEwRSwyQkFBMkIsWUFBWSw4QkFBOEI7QUFDL0k7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrSEFBK0gsb0JBQW9CLGNBQWMsVUFBVTtBQUMzSztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNEJBQTRCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxnQkFBZ0IsdUNBQXVDO0FBQ3ZEO0FBQ0E7QUFDQSw0QkFBNEIsTUFBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxrREFBa0QsS0FBSyxLQUFLLElBQUk7QUFDaEU7QUFDQTtBQUNBLDRDQUE0Qyw0QkFBNEIsMEJBQTBCLGdDQUFnQztBQUNsSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELHVCQUF1QjtBQUNoRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGtEQUFrRCxjQUFjLEtBQUssYUFBYTtBQUNsRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RhcmdhdGUvYnVpbGQvcXVlcnljbGllbnQvcXVlcnljbGllbnQuanM/Y2M3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUXVlcnlDbGllbnQgPSB2b2lkIDA7XG4vKiBlc2xpbnQtZGlzYWJsZSBuby1kdXBlLWNsYXNzLW1lbWJlcnMsIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXMsIEB0eXBlc2NyaXB0LWVzbGludC9uYW1pbmctY29udmVudGlvbiAqL1xuY29uc3QgaWNzMjNfMSA9IHJlcXVpcmUoXCJAY29uZmlvL2ljczIzXCIpO1xuY29uc3QgZW5jb2RpbmdfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2VuY29kaW5nXCIpO1xuY29uc3Qgc3RyZWFtXzEgPSByZXF1aXJlKFwiQGNvc21qcy9zdHJlYW1cIik7XG5jb25zdCB1dGlsc18xID0gcmVxdWlyZShcIkBjb3NtanMvdXRpbHNcIik7XG5mdW5jdGlvbiBjaGVja0FuZFBhcnNlT3Aob3AsIGtpbmQsIGtleSkge1xuICAgIGlmIChvcC50eXBlICE9PSBraW5kKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgT3AgZXhwZWN0ZWQgdG8gYmUgJHtraW5kfSwgZ290IFwiJHtvcC50eXBlfWApO1xuICAgIH1cbiAgICBpZiAoISgwLCB1dGlsc18xLmFycmF5Q29udGVudEVxdWFscykoa2V5LCBvcC5rZXkpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUHJvdmVuIGtleSBkaWZmZXJlbnQgdGhhbiBxdWVyaWVkIGtleS5cXG5RdWVyeTogJHsoMCwgZW5jb2RpbmdfMS50b0hleCkoa2V5KX1cXG5Qcm92ZW46ICR7KDAsIGVuY29kaW5nXzEudG9IZXgpKG9wLmtleSl9YCk7XG4gICAgfVxuICAgIHJldHVybiBpY3MyM18xLmljczIzLkNvbW1pdG1lbnRQcm9vZi5kZWNvZGUob3AuZGF0YSk7XG59XG5jbGFzcyBRdWVyeUNsaWVudCB7XG4gICAgc3RhdGljIHdpdGhFeHRlbnNpb25zKGNvbWV0Q2xpZW50LCAuLi5leHRlbnNpb25TZXR1cHMpIHtcbiAgICAgICAgY29uc3QgY2xpZW50ID0gbmV3IFF1ZXJ5Q2xpZW50KGNvbWV0Q2xpZW50KTtcbiAgICAgICAgY29uc3QgZXh0ZW5zaW9ucyA9IGV4dGVuc2lvblNldHVwcy5tYXAoKHNldHVwRXh0ZW5zaW9uKSA9PiBzZXR1cEV4dGVuc2lvbihjbGllbnQpKTtcbiAgICAgICAgZm9yIChjb25zdCBleHRlbnNpb24gb2YgZXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KSgoMCwgdXRpbHNfMS5pc05vbk51bGxPYmplY3QpKGV4dGVuc2lvbiksIGBFeHRlbnNpb24gbXVzdCBiZSBhIG5vbi1udWxsIG9iamVjdGApO1xuICAgICAgICAgICAgZm9yIChjb25zdCBbbW9kdWxlS2V5LCBtb2R1bGVWYWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZXh0ZW5zaW9uKSkge1xuICAgICAgICAgICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoKDAsIHV0aWxzXzEuaXNOb25OdWxsT2JqZWN0KShtb2R1bGVWYWx1ZSksIGBNb2R1bGUgbXVzdCBiZSBhIG5vbi1udWxsIG9iamVjdC4gRm91bmQgdHlwZSAke3R5cGVvZiBtb2R1bGVWYWx1ZX0gZm9yIG1vZHVsZSBcIiR7bW9kdWxlS2V5fVwiLmApO1xuICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBjbGllbnRbbW9kdWxlS2V5XSB8fCB7fTtcbiAgICAgICAgICAgICAgICBjbGllbnRbbW9kdWxlS2V5XSA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4uY3VycmVudCxcbiAgICAgICAgICAgICAgICAgICAgLi4ubW9kdWxlVmFsdWUsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2xpZW50O1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcihjb21ldENsaWVudCkge1xuICAgICAgICB0aGlzLmNvbWV0Q2xpZW50ID0gY29tZXRDbGllbnQ7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFF1ZXJpZXMgdGhlIGRhdGFiYXNlIHN0b3JlIHdpdGggYSBwcm9vZiwgd2hpY2ggaXMgdGhlbiB2ZXJpZmllZC5cbiAgICAgKlxuICAgICAqIFBsZWFzZSBub3RlOiB0aGUgY3VycmVudCBpbXBsZW1lbnRhdGlvbiB0cnVzdHMgYmxvY2sgaGVhZGVycyBpdCBnZXRzIGZyb20gdGhlIFBSQyBlbmRwb2ludC5cbiAgICAgKi9cbiAgICBhc3luYyBxdWVyeVN0b3JlVmVyaWZpZWQoc3RvcmUsIHF1ZXJ5S2V5LCBkZXNpcmVkSGVpZ2h0KSB7XG4gICAgICAgIGNvbnN0IHsgaGVpZ2h0LCBwcm9vZiwga2V5LCB2YWx1ZSB9ID0gYXdhaXQgdGhpcy5xdWVyeVJhd1Byb29mKHN0b3JlLCBxdWVyeUtleSwgZGVzaXJlZEhlaWdodCk7XG4gICAgICAgIGNvbnN0IHN1YlByb29mID0gY2hlY2tBbmRQYXJzZU9wKHByb29mLm9wc1swXSwgXCJpY3MyMzppYXZsXCIsIHF1ZXJ5S2V5KTtcbiAgICAgICAgY29uc3Qgc3RvcmVQcm9vZiA9IGNoZWNrQW5kUGFyc2VPcChwcm9vZi5vcHNbMV0sIFwiaWNzMjM6c2ltcGxlXCIsICgwLCBlbmNvZGluZ18xLnRvQXNjaWkpKHN0b3JlKSk7XG4gICAgICAgIC8vIHRoaXMgbXVzdCBhbHdheXMgYmUgZXhpc3RlbmNlLCBpZiB0aGUgc3RvcmUgaXMgbm90IGEgdHlwb1xuICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKHN0b3JlUHJvb2YuZXhpc3QpO1xuICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKHN0b3JlUHJvb2YuZXhpc3QudmFsdWUpO1xuICAgICAgICAvLyB0aGlzIG1heSBiZSBleGlzdCBvciBub24tZXhpc3QsIGRlcGVuZHMgb24gcmVzcG9uc2VcbiAgICAgICAgaWYgKCF2YWx1ZSB8fCB2YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIC8vIG5vbi1leGlzdGVuY2UgY2hlY2tcbiAgICAgICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoc3ViUHJvb2Yubm9uZXhpc3QpO1xuICAgICAgICAgICAgLy8gdGhlIHN1YnByb29mIG11c3QgbWFwIHRoZSBkZXNpcmVkIGtleSB0byB0aGUgXCJ2YWx1ZVwiIG9mIHRoZSBzdG9yZVByb29mXG4gICAgICAgICAgICAoMCwgaWNzMjNfMS52ZXJpZnlOb25FeGlzdGVuY2UpKHN1YlByb29mLm5vbmV4aXN0LCBpY3MyM18xLmlhdmxTcGVjLCBzdG9yZVByb29mLmV4aXN0LnZhbHVlLCBxdWVyeUtleSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBleGlzdGVuY2UgY2hlY2tcbiAgICAgICAgICAgICgwLCB1dGlsc18xLmFzc2VydCkoc3ViUHJvb2YuZXhpc3QpO1xuICAgICAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0KShzdWJQcm9vZi5leGlzdC52YWx1ZSk7XG4gICAgICAgICAgICAvLyB0aGUgc3VicHJvb2YgbXVzdCBtYXAgdGhlIGRlc2lyZWQga2V5IHRvIHRoZSBcInZhbHVlXCIgb2YgdGhlIHN0b3JlUHJvb2ZcbiAgICAgICAgICAgICgwLCBpY3MyM18xLnZlcmlmeUV4aXN0ZW5jZSkoc3ViUHJvb2YuZXhpc3QsIGljczIzXzEuaWF2bFNwZWMsIHN0b3JlUHJvb2YuZXhpc3QudmFsdWUsIHF1ZXJ5S2V5LCB2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gdGhlIHN0b3JlIHByb29mIG11c3QgbWFwIGl0cyBkZWNsYXJlZCB2YWx1ZSAocm9vdCBvZiBzdWJQcm9vZikgdG8gdGhlIGFwcEhhc2ggb2YgdGhlIG5leHQgYmxvY2tcbiAgICAgICAgY29uc3QgaGVhZGVyID0gYXdhaXQgdGhpcy5nZXROZXh0SGVhZGVyKGhlaWdodCk7XG4gICAgICAgICgwLCBpY3MyM18xLnZlcmlmeUV4aXN0ZW5jZSkoc3RvcmVQcm9vZi5leGlzdCwgaWNzMjNfMS50ZW5kZXJtaW50U3BlYywgaGVhZGVyLmFwcEhhc2gsICgwLCBlbmNvZGluZ18xLnRvQXNjaWkpKHN0b3JlKSwgc3RvcmVQcm9vZi5leGlzdC52YWx1ZSk7XG4gICAgICAgIHJldHVybiB7IGtleSwgdmFsdWUsIGhlaWdodCB9O1xuICAgIH1cbiAgICBhc3luYyBxdWVyeVJhd1Byb29mKHN0b3JlLCBxdWVyeUtleSwgZGVzaXJlZEhlaWdodCkge1xuICAgICAgICBjb25zdCB7IGtleSwgdmFsdWUsIGhlaWdodCwgcHJvb2YsIGNvZGUsIGxvZyB9ID0gYXdhaXQgdGhpcy5jb21ldENsaWVudC5hYmNpUXVlcnkoe1xuICAgICAgICAgICAgLy8gd2UgbmVlZCB0aGUgU3RvcmVLZXkgZm9yIHRoZSBtb2R1bGUsIG5vdCB0aGUgbW9kdWxlIG5hbWVcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9jb3Ntb3MvY29zbW9zLXNkay9ibG9iLzhjYWI0M2M4MTIwZmVjNTIwMGMzNDU5Y2JmNGE5MjAxN2JiNmYyODcveC9hdXRoL3R5cGVzL2tleXMuZ28jTDEyXG4gICAgICAgICAgICBwYXRoOiBgL3N0b3JlLyR7c3RvcmV9L2tleWAsXG4gICAgICAgICAgICBkYXRhOiBxdWVyeUtleSxcbiAgICAgICAgICAgIHByb3ZlOiB0cnVlLFxuICAgICAgICAgICAgaGVpZ2h0OiBkZXNpcmVkSGVpZ2h0LFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNvZGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUXVlcnkgZmFpbGVkIHdpdGggKCR7Y29kZX0pOiAke2xvZ31gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoISgwLCB1dGlsc18xLmFycmF5Q29udGVudEVxdWFscykocXVlcnlLZXksIGtleSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUmVzcG9uc2Uga2V5ICR7KDAsIGVuY29kaW5nXzEudG9IZXgpKGtleSl9IGRvZXNuJ3QgbWF0Y2ggcXVlcnkga2V5ICR7KDAsIGVuY29kaW5nXzEudG9IZXgpKHF1ZXJ5S2V5KX1gKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWhlaWdodCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gcXVlcnkgaGVpZ2h0IHJldHVybmVkXCIpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghcHJvb2YgfHwgcHJvb2Yub3BzLmxlbmd0aCAhPT0gMikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFeHBlY3RlZCAyIHByb29mIG9wcywgZ290ICR7cHJvb2Y/Lm9wcy5sZW5ndGggPz8gMH0uIEFyZSB5b3UgdXNpbmcgc3RhcmdhdGU/YCk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gd2UgZG9uJ3QgbmVlZCB0aGUgcmVzdWx0cywgYnV0IHdlIGNhbiBlbnN1cmUgdGhlIGRhdGEgaXMgdGhlIHByb3BlciBmb3JtYXRcbiAgICAgICAgY2hlY2tBbmRQYXJzZU9wKHByb29mLm9wc1swXSwgXCJpY3MyMzppYXZsXCIsIGtleSk7XG4gICAgICAgIGNoZWNrQW5kUGFyc2VPcChwcm9vZi5vcHNbMV0sIFwiaWNzMjM6c2ltcGxlXCIsICgwLCBlbmNvZGluZ18xLnRvQXNjaWkpKHN0b3JlKSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBrZXk6IGtleSxcbiAgICAgICAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgICAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgICAgICAgLy8gbmVlZCB0byBjbG9uZSB0aGlzOiByZWFkb25seSBpbnB1dCAvIHdyaXRlYWJsZSBvdXRwdXRcbiAgICAgICAgICAgIHByb29mOiB7XG4gICAgICAgICAgICAgICAgb3BzOiBbLi4ucHJvb2Yub3BzXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFBlcmZvcm1zIGFuIEFCQ0kgcXVlcnkgdG8gVGVuZGVybWludCB3aXRob3V0IHJlcXVlc3RpbmcgYSBwcm9vZi5cbiAgICAgKlxuICAgICAqIElmIHRoZSBgZGVzaXJlZEhlaWdodGAgaXMgc2V0LCBhIHBhcnRpY3VsYXIgaGVpZ2h0IGlzIHJlcXVlc3RlZC4gT3RoZXJ3aXNlXG4gICAgICogdGhlIGxhdGVzdCBoZWlnaHQgaXMgcmVxdWVzdGVkLiBUaGUgcmVzcG9uc2UgY29udGFpbnMgdGhlIGFjdHVhbCBoZWlnaHQgb2ZcbiAgICAgKiB0aGUgcXVlcnkuXG4gICAgICovXG4gICAgYXN5bmMgcXVlcnlBYmNpKHBhdGgsIHJlcXVlc3QsIGRlc2lyZWRIZWlnaHQpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNvbWV0Q2xpZW50LmFiY2lRdWVyeSh7XG4gICAgICAgICAgICBwYXRoOiBwYXRoLFxuICAgICAgICAgICAgZGF0YTogcmVxdWVzdCxcbiAgICAgICAgICAgIHByb3ZlOiBmYWxzZSxcbiAgICAgICAgICAgIGhlaWdodDogZGVzaXJlZEhlaWdodCxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChyZXNwb25zZS5jb2RlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFF1ZXJ5IGZhaWxlZCB3aXRoICgke3Jlc3BvbnNlLmNvZGV9KTogJHtyZXNwb25zZS5sb2d9YCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFyZXNwb25zZS5oZWlnaHQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5vIHF1ZXJ5IGhlaWdodCByZXR1cm5lZFwiKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHJlc3BvbnNlLnZhbHVlLFxuICAgICAgICAgICAgaGVpZ2h0OiByZXNwb25zZS5oZWlnaHQsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8vIHRoaXMgbXVzdCByZXR1cm4gdGhlIGhlYWRlciBmb3IgaGVpZ2h0KzFcbiAgICAvLyB0aHJvd3MgYW4gZXJyb3IgaWYgaGVpZ2h0IGlzIDAgb3IgdW5kZWZpbmVkXG4gICAgYXN5bmMgZ2V0TmV4dEhlYWRlcihoZWlnaHQpIHtcbiAgICAgICAgKDAsIHV0aWxzXzEuYXNzZXJ0RGVmaW5lZCkoaGVpZ2h0KTtcbiAgICAgICAgaWYgKGhlaWdodCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUXVlcnkgcmV0dXJuZWQgaGVpZ2h0IDAsIGNhbm5vdCBwcm92ZSBpdFwiKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzZWFyY2hIZWlnaHQgPSBoZWlnaHQgKyAxO1xuICAgICAgICBsZXQgbmV4dEhlYWRlcjtcbiAgICAgICAgbGV0IGhlYWRlcnNTdWJzY3JpcHRpb247XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBoZWFkZXJzU3Vic2NyaXB0aW9uID0gdGhpcy5jb21ldENsaWVudC5zdWJzY3JpYmVOZXdCbG9ja0hlYWRlcigpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIC8vIElnbm9yZSBleGNlcHRpb24gY2F1c2VkIGJ5IG5vbi1XZWJTb2NrZXQgVGVuZGVybWludCBjbGllbnRzXG4gICAgICAgIH1cbiAgICAgICAgaWYgKGhlYWRlcnNTdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIGNvbnN0IGZpcnN0SGVhZGVyID0gYXdhaXQgKDAsIHN0cmVhbV8xLmZpcnN0RXZlbnQpKGhlYWRlcnNTdWJzY3JpcHRpb24pO1xuICAgICAgICAgICAgLy8gVGhlIGZpcnN0IGhlYWRlciB3ZSBnZXQgbWlnaHQgbm90IGJlIG4rMSBidXQgbisyIG9yIGV2ZW4gaGlnaGVyLiBJbiBzdWNoIGNhc2VzIHdlIGZhbGwgYmFjayBvbiBhIHF1ZXJ5LlxuICAgICAgICAgICAgaWYgKGZpcnN0SGVhZGVyLmhlaWdodCA9PT0gc2VhcmNoSGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgbmV4dEhlYWRlciA9IGZpcnN0SGVhZGVyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHdoaWxlICghbmV4dEhlYWRlcikge1xuICAgICAgICAgICAgLy8gc3RhcnQgZnJvbSBjdXJyZW50IGhlaWdodCB0byBhdm9pZCBiYWNrZW5kIGVycm9yIGZvciBtaW5IZWlnaHQgaW4gdGhlIGZ1dHVyZVxuICAgICAgICAgICAgY29uc3QgY29ycmVjdEhlYWRlciA9IChhd2FpdCB0aGlzLmNvbWV0Q2xpZW50LmJsb2NrY2hhaW4oaGVpZ2h0LCBzZWFyY2hIZWlnaHQpKS5ibG9ja01ldGFzXG4gICAgICAgICAgICAgICAgLm1hcCgobWV0YSkgPT4gbWV0YS5oZWFkZXIpXG4gICAgICAgICAgICAgICAgLmZpbmQoKGgpID0+IGguaGVpZ2h0ID09PSBzZWFyY2hIZWlnaHQpO1xuICAgICAgICAgICAgaWYgKGNvcnJlY3RIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICBuZXh0SGVhZGVyID0gY29ycmVjdEhlYWRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGF3YWl0ICgwLCB1dGlsc18xLnNsZWVwKSgxMDAwKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAoMCwgdXRpbHNfMS5hc3NlcnQpKG5leHRIZWFkZXIuaGVpZ2h0ID09PSBzZWFyY2hIZWlnaHQsIFwiR290IHdyb25nIGhlYWRlci4gVGhpcyBpcyBhIGJ1ZyBpbiB0aGUgbG9naWMgYWJvdmUuXCIpO1xuICAgICAgICByZXR1cm4gbmV4dEhlYWRlcjtcbiAgICB9XG59XG5leHBvcnRzLlF1ZXJ5Q2xpZW50ID0gUXVlcnlDbGllbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1xdWVyeWNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/queryclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/utils.js":
/*!******************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/queryclient/utils.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.decodeCosmosSdkDecFromProto = exports.longify = exports.createProtobufRpcClient = exports.createPagination = exports.toAccAddress = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst pagination_1 = __webpack_require__(/*! cosmjs-types/cosmos/base/query/v1beta1/pagination */ \"(ssr)/./node_modules/cosmjs-types/cosmos/base/query/v1beta1/pagination.js\");\n/**\n * Takes a bech32 encoded address and returns the data part. The prefix is ignored and discarded.\n * This is called AccAddress in Cosmos SDK, which is basically an alias for raw binary data.\n * The result is typically 20 bytes long but not restricted to that.\n */\nfunction toAccAddress(address) {\n    return (0, encoding_1.fromBech32)(address).data;\n}\nexports.toAccAddress = toAccAddress;\n/**\n * If paginationKey is set, return a `PageRequest` with the given key.\n * If paginationKey is unset, return `undefined`.\n *\n * Use this with a query response's pagination next key to\n * request the next page.\n */\nfunction createPagination(paginationKey) {\n    return paginationKey ? pagination_1.PageRequest.fromPartial({ key: paginationKey }) : pagination_1.PageRequest.fromPartial({});\n}\nexports.createPagination = createPagination;\nfunction createProtobufRpcClient(base) {\n    return {\n        request: async (service, method, data) => {\n            const path = `/${service}/${method}`;\n            const response = await base.queryAbci(path, data, undefined);\n            return response.value;\n        },\n    };\n}\nexports.createProtobufRpcClient = createProtobufRpcClient;\n/**\n * Takes a uint64 value as string, number, BigInt or Uint64 and returns a BigInt\n * of it.\n */\nfunction longify(value) {\n    const checkedValue = math_1.Uint64.fromString(value.toString());\n    return BigInt(checkedValue.toString());\n}\nexports.longify = longify;\n/**\n * Takes a string or binary encoded `github.com/cosmos/cosmos-sdk/types.Dec` from the\n * protobuf API and converts it into a `Decimal` with 18 fractional digits.\n *\n * See https://github.com/cosmos/cosmos-sdk/issues/10863 for more context why this is needed.\n */\nfunction decodeCosmosSdkDecFromProto(input) {\n    const asString = typeof input === \"string\" ? input : (0, encoding_1.fromAscii)(input);\n    return math_1.Decimal.fromAtomics(asString, 18);\n}\nexports.decodeCosmosSdkDecFromProto = decodeCosmosSdkDecFromProto;\n//# sourceMappingURL=utils.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9xdWVyeWNsaWVudC91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQ0FBbUMsR0FBRyxlQUFlLEdBQUcsK0JBQStCLEdBQUcsd0JBQXdCLEdBQUcsb0JBQW9CO0FBQ3pJLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsb0lBQW1EO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxvQkFBb0IsMkNBQTJDO0FBQ2pJO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRLEdBQUcsT0FBTztBQUMvQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQyIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9xdWVyeWNsaWVudC91dGlscy5qcz9hZmJmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWNvZGVDb3Ntb3NTZGtEZWNGcm9tUHJvdG8gPSBleHBvcnRzLmxvbmdpZnkgPSBleHBvcnRzLmNyZWF0ZVByb3RvYnVmUnBjQ2xpZW50ID0gZXhwb3J0cy5jcmVhdGVQYWdpbmF0aW9uID0gZXhwb3J0cy50b0FjY0FkZHJlc3MgPSB2b2lkIDA7XG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBtYXRoXzEgPSByZXF1aXJlKFwiQGNvc21qcy9tYXRoXCIpO1xuY29uc3QgcGFnaW5hdGlvbl8xID0gcmVxdWlyZShcImNvc21qcy10eXBlcy9jb3Ntb3MvYmFzZS9xdWVyeS92MWJldGExL3BhZ2luYXRpb25cIik7XG4vKipcbiAqIFRha2VzIGEgYmVjaDMyIGVuY29kZWQgYWRkcmVzcyBhbmQgcmV0dXJucyB0aGUgZGF0YSBwYXJ0LiBUaGUgcHJlZml4IGlzIGlnbm9yZWQgYW5kIGRpc2NhcmRlZC5cbiAqIFRoaXMgaXMgY2FsbGVkIEFjY0FkZHJlc3MgaW4gQ29zbW9zIFNESywgd2hpY2ggaXMgYmFzaWNhbGx5IGFuIGFsaWFzIGZvciByYXcgYmluYXJ5IGRhdGEuXG4gKiBUaGUgcmVzdWx0IGlzIHR5cGljYWxseSAyMCBieXRlcyBsb25nIGJ1dCBub3QgcmVzdHJpY3RlZCB0byB0aGF0LlxuICovXG5mdW5jdGlvbiB0b0FjY0FkZHJlc3MoYWRkcmVzcykge1xuICAgIHJldHVybiAoMCwgZW5jb2RpbmdfMS5mcm9tQmVjaDMyKShhZGRyZXNzKS5kYXRhO1xufVxuZXhwb3J0cy50b0FjY0FkZHJlc3MgPSB0b0FjY0FkZHJlc3M7XG4vKipcbiAqIElmIHBhZ2luYXRpb25LZXkgaXMgc2V0LCByZXR1cm4gYSBgUGFnZVJlcXVlc3RgIHdpdGggdGhlIGdpdmVuIGtleS5cbiAqIElmIHBhZ2luYXRpb25LZXkgaXMgdW5zZXQsIHJldHVybiBgdW5kZWZpbmVkYC5cbiAqXG4gKiBVc2UgdGhpcyB3aXRoIGEgcXVlcnkgcmVzcG9uc2UncyBwYWdpbmF0aW9uIG5leHQga2V5IHRvXG4gKiByZXF1ZXN0IHRoZSBuZXh0IHBhZ2UuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBhZ2luYXRpb24ocGFnaW5hdGlvbktleSkge1xuICAgIHJldHVybiBwYWdpbmF0aW9uS2V5ID8gcGFnaW5hdGlvbl8xLlBhZ2VSZXF1ZXN0LmZyb21QYXJ0aWFsKHsga2V5OiBwYWdpbmF0aW9uS2V5IH0pIDogcGFnaW5hdGlvbl8xLlBhZ2VSZXF1ZXN0LmZyb21QYXJ0aWFsKHt9KTtcbn1cbmV4cG9ydHMuY3JlYXRlUGFnaW5hdGlvbiA9IGNyZWF0ZVBhZ2luYXRpb247XG5mdW5jdGlvbiBjcmVhdGVQcm90b2J1ZlJwY0NsaWVudChiYXNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVxdWVzdDogYXN5bmMgKHNlcnZpY2UsIG1ldGhvZCwgZGF0YSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IGAvJHtzZXJ2aWNlfS8ke21ldGhvZH1gO1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBiYXNlLnF1ZXJ5QWJjaShwYXRoLCBkYXRhLCB1bmRlZmluZWQpO1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnZhbHVlO1xuICAgICAgICB9LFxuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZVByb3RvYnVmUnBjQ2xpZW50ID0gY3JlYXRlUHJvdG9idWZScGNDbGllbnQ7XG4vKipcbiAqIFRha2VzIGEgdWludDY0IHZhbHVlIGFzIHN0cmluZywgbnVtYmVyLCBCaWdJbnQgb3IgVWludDY0IGFuZCByZXR1cm5zIGEgQmlnSW50XG4gKiBvZiBpdC5cbiAqL1xuZnVuY3Rpb24gbG9uZ2lmeSh2YWx1ZSkge1xuICAgIGNvbnN0IGNoZWNrZWRWYWx1ZSA9IG1hdGhfMS5VaW50NjQuZnJvbVN0cmluZyh2YWx1ZS50b1N0cmluZygpKTtcbiAgICByZXR1cm4gQmlnSW50KGNoZWNrZWRWYWx1ZS50b1N0cmluZygpKTtcbn1cbmV4cG9ydHMubG9uZ2lmeSA9IGxvbmdpZnk7XG4vKipcbiAqIFRha2VzIGEgc3RyaW5nIG9yIGJpbmFyeSBlbmNvZGVkIGBnaXRodWIuY29tL2Nvc21vcy9jb3Ntb3Mtc2RrL3R5cGVzLkRlY2AgZnJvbSB0aGVcbiAqIHByb3RvYnVmIEFQSSBhbmQgY29udmVydHMgaXQgaW50byBhIGBEZWNpbWFsYCB3aXRoIDE4IGZyYWN0aW9uYWwgZGlnaXRzLlxuICpcbiAqIFNlZSBodHRwczovL2dpdGh1Yi5jb20vY29zbW9zL2Nvc21vcy1zZGsvaXNzdWVzLzEwODYzIGZvciBtb3JlIGNvbnRleHQgd2h5IHRoaXMgaXMgbmVlZGVkLlxuICovXG5mdW5jdGlvbiBkZWNvZGVDb3Ntb3NTZGtEZWNGcm9tUHJvdG8oaW5wdXQpIHtcbiAgICBjb25zdCBhc1N0cmluZyA9IHR5cGVvZiBpbnB1dCA9PT0gXCJzdHJpbmdcIiA/IGlucHV0IDogKDAsIGVuY29kaW5nXzEuZnJvbUFzY2lpKShpbnB1dCk7XG4gICAgcmV0dXJuIG1hdGhfMS5EZWNpbWFsLmZyb21BdG9taWNzKGFzU3RyaW5nLCAxOCk7XG59XG5leHBvcnRzLmRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90byA9IGRlY29kZUNvc21vc1Nka0RlY0Zyb21Qcm90bztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXV0aWxzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/search.js":
/*!*******************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/search.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isSearchTxQueryArray = void 0;\nfunction isSearchTxQueryArray(query) {\n    return Array.isArray(query);\n}\nexports.isSearchTxQueryArray = isSearchTxQueryArray;\n//# sourceMappingURL=search.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9zZWFyY2guanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdGFyZ2F0ZS9idWlsZC9zZWFyY2guanM/ODMzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaXNTZWFyY2hUeFF1ZXJ5QXJyYXkgPSB2b2lkIDA7XG5mdW5jdGlvbiBpc1NlYXJjaFR4UXVlcnlBcnJheShxdWVyeSkge1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KHF1ZXJ5KTtcbn1cbmV4cG9ydHMuaXNTZWFyY2hUeFF1ZXJ5QXJyYXkgPSBpc1NlYXJjaFR4UXVlcnlBcnJheTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNlYXJjaC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/search.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/signingstargateclient.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/signingstargateclient.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.SigningStargateClient = exports.createDefaultAminoConverters = exports.defaultRegistryTypes = void 0;\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst proto_signing_1 = __webpack_require__(/*! @cosmjs/proto-signing */ \"(ssr)/./node_modules/@cosmjs/proto-signing/build/index.js\");\nconst tendermint_rpc_1 = __webpack_require__(/*! @cosmjs/tendermint-rpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst coin_1 = __webpack_require__(/*! cosmjs-types/cosmos/base/v1beta1/coin */ \"(ssr)/./node_modules/cosmjs-types/cosmos/base/v1beta1/coin.js\");\nconst tx_1 = __webpack_require__(/*! cosmjs-types/cosmos/distribution/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/distribution/v1beta1/tx.js\");\nconst tx_2 = __webpack_require__(/*! cosmjs-types/cosmos/staking/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/staking/v1beta1/tx.js\");\nconst signing_1 = __webpack_require__(/*! cosmjs-types/cosmos/tx/signing/v1beta1/signing */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/signing/v1beta1/signing.js\");\nconst tx_3 = __webpack_require__(/*! cosmjs-types/cosmos/tx/v1beta1/tx */ \"(ssr)/./node_modules/cosmjs-types/cosmos/tx/v1beta1/tx.js\");\nconst tx_4 = __webpack_require__(/*! cosmjs-types/ibc/applications/transfer/v1/tx */ \"(ssr)/./node_modules/cosmjs-types/ibc/applications/transfer/v1/tx.js\");\nconst aminotypes_1 = __webpack_require__(/*! ./aminotypes */ \"(ssr)/./node_modules/@cosmjs/stargate/build/aminotypes.js\");\nconst fee_1 = __webpack_require__(/*! ./fee */ \"(ssr)/./node_modules/@cosmjs/stargate/build/fee.js\");\nconst modules_1 = __webpack_require__(/*! ./modules */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/index.js\");\nconst modules_2 = __webpack_require__(/*! ./modules */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/index.js\");\nconst stargateclient_1 = __webpack_require__(/*! ./stargateclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/stargateclient.js\");\nexports.defaultRegistryTypes = [\n    [\"/cosmos.base.v1beta1.Coin\", coin_1.Coin],\n    ...modules_1.authzTypes,\n    ...modules_1.bankTypes,\n    ...modules_1.distributionTypes,\n    ...modules_1.feegrantTypes,\n    ...modules_1.govTypes,\n    ...modules_1.groupTypes,\n    ...modules_1.stakingTypes,\n    ...modules_1.ibcTypes,\n    ...modules_1.vestingTypes,\n];\nfunction createDefaultAminoConverters() {\n    return {\n        ...(0, modules_2.createAuthzAminoConverters)(),\n        ...(0, modules_2.createBankAminoConverters)(),\n        ...(0, modules_2.createDistributionAminoConverters)(),\n        ...(0, modules_2.createGovAminoConverters)(),\n        ...(0, modules_2.createStakingAminoConverters)(),\n        ...(0, modules_2.createIbcAminoConverters)(),\n        ...(0, modules_2.createFeegrantAminoConverters)(),\n        ...(0, modules_2.createVestingAminoConverters)(),\n    };\n}\nexports.createDefaultAminoConverters = createDefaultAminoConverters;\nclass SigningStargateClient extends stargateclient_1.StargateClient {\n    /**\n     * Creates an instance by connecting to the given CometBFT RPC endpoint.\n     *\n     * This uses auto-detection to decide between a CometBFT 0.38, Tendermint 0.37 and 0.34 client.\n     * To set the Comet client explicitly, use `createWithSigner`.\n     */\n    static async connectWithSigner(endpoint, signer, options = {}) {\n        const cometClient = await (0, tendermint_rpc_1.connectComet)(endpoint);\n        return SigningStargateClient.createWithSigner(cometClient, signer, options);\n    }\n    /**\n     * Creates an instance from a manually created Comet client.\n     * Use this to use `Comet38Client` or `Tendermint37Client` instead of `Tendermint34Client`.\n     */\n    static async createWithSigner(cometClient, signer, options = {}) {\n        return new SigningStargateClient(cometClient, signer, options);\n    }\n    /**\n     * Creates a client in offline mode.\n     *\n     * This should only be used in niche cases where you know exactly what you're doing,\n     * e.g. when building an offline signing application.\n     *\n     * When you try to use online functionality with such a signer, an\n     * exception will be raised.\n     */\n    static async offline(signer, options = {}) {\n        return new SigningStargateClient(undefined, signer, options);\n    }\n    constructor(cometClient, signer, options) {\n        super(cometClient, options);\n        // Starting with Cosmos SDK 0.47, we see many cases in which 1.3 is not enough anymore\n        // E.g. https://github.com/cosmos/cosmos-sdk/issues/16020\n        this.defaultGasMultiplier = 1.4;\n        const { registry = new proto_signing_1.Registry(exports.defaultRegistryTypes), aminoTypes = new aminotypes_1.AminoTypes(createDefaultAminoConverters()), } = options;\n        this.registry = registry;\n        this.aminoTypes = aminoTypes;\n        this.signer = signer;\n        this.broadcastTimeoutMs = options.broadcastTimeoutMs;\n        this.broadcastPollIntervalMs = options.broadcastPollIntervalMs;\n        this.gasPrice = options.gasPrice;\n    }\n    async simulate(signerAddress, messages, memo) {\n        const anyMsgs = messages.map((m) => this.registry.encodeAsAny(m));\n        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);\n        if (!accountFromSigner) {\n            throw new Error(\"Failed to retrieve account from signer\");\n        }\n        const pubkey = (0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey);\n        const { sequence } = await this.getSequence(signerAddress);\n        const { gasInfo } = await this.forceGetQueryClient().tx.simulate(anyMsgs, memo, pubkey, sequence);\n        (0, utils_1.assertDefined)(gasInfo);\n        return math_1.Uint53.fromString(gasInfo.gasUsed.toString()).toNumber();\n    }\n    async sendTokens(senderAddress, recipientAddress, amount, fee, memo = \"\") {\n        const sendMsg = {\n            typeUrl: \"/cosmos.bank.v1beta1.MsgSend\",\n            value: {\n                fromAddress: senderAddress,\n                toAddress: recipientAddress,\n                amount: [...amount],\n            },\n        };\n        return this.signAndBroadcast(senderAddress, [sendMsg], fee, memo);\n    }\n    async delegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = \"\") {\n        const delegateMsg = {\n            typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\",\n            value: tx_2.MsgDelegate.fromPartial({\n                delegatorAddress: delegatorAddress,\n                validatorAddress: validatorAddress,\n                amount: amount,\n            }),\n        };\n        return this.signAndBroadcast(delegatorAddress, [delegateMsg], fee, memo);\n    }\n    async undelegateTokens(delegatorAddress, validatorAddress, amount, fee, memo = \"\") {\n        const undelegateMsg = {\n            typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\",\n            value: tx_2.MsgUndelegate.fromPartial({\n                delegatorAddress: delegatorAddress,\n                validatorAddress: validatorAddress,\n                amount: amount,\n            }),\n        };\n        return this.signAndBroadcast(delegatorAddress, [undelegateMsg], fee, memo);\n    }\n    async withdrawRewards(delegatorAddress, validatorAddress, fee, memo = \"\") {\n        const withdrawMsg = {\n            typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\",\n            value: tx_1.MsgWithdrawDelegatorReward.fromPartial({\n                delegatorAddress: delegatorAddress,\n                validatorAddress: validatorAddress,\n            }),\n        };\n        return this.signAndBroadcast(delegatorAddress, [withdrawMsg], fee, memo);\n    }\n    /**\n     * @deprecated This API does not support setting the memo field of `MsgTransfer` (only the transaction memo).\n     * We'll remove this method at some point because trying to wrap the various message types is a losing strategy.\n     * Please migrate to `signAndBroadcast` with an `MsgTransferEncodeObject` created in the caller code instead.\n     * @see https://github.com/cosmos/cosmjs/issues/1493\n     */\n    async sendIbcTokens(senderAddress, recipientAddress, transferAmount, sourcePort, sourceChannel, timeoutHeight, \n    /** timeout in seconds */\n    timeoutTimestamp, fee, memo = \"\") {\n        const timeoutTimestampNanoseconds = timeoutTimestamp\n            ? BigInt(timeoutTimestamp) * BigInt(1000000000)\n            : undefined;\n        const transferMsg = {\n            typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\",\n            value: tx_4.MsgTransfer.fromPartial({\n                sourcePort: sourcePort,\n                sourceChannel: sourceChannel,\n                sender: senderAddress,\n                receiver: recipientAddress,\n                token: transferAmount,\n                timeoutHeight: timeoutHeight,\n                timeoutTimestamp: timeoutTimestampNanoseconds,\n            }),\n        };\n        return this.signAndBroadcast(senderAddress, [transferMsg], fee, memo);\n    }\n    async signAndBroadcast(signerAddress, messages, fee, memo = \"\", timeoutHeight) {\n        let usedFee;\n        if (fee == \"auto\" || typeof fee === \"number\") {\n            (0, utils_1.assertDefined)(this.gasPrice, \"Gas price must be set in the client options when auto gas is used.\");\n            const gasEstimation = await this.simulate(signerAddress, messages, memo);\n            const multiplier = typeof fee === \"number\" ? fee : this.defaultGasMultiplier;\n            usedFee = (0, fee_1.calculateFee)(Math.round(gasEstimation * multiplier), this.gasPrice);\n        }\n        else {\n            usedFee = fee;\n        }\n        const txRaw = await this.sign(signerAddress, messages, usedFee, memo, undefined, timeoutHeight);\n        const txBytes = tx_3.TxRaw.encode(txRaw).finish();\n        return this.broadcastTx(txBytes, this.broadcastTimeoutMs, this.broadcastPollIntervalMs);\n    }\n    /**\n     * This method is useful if you want to send a transaction in broadcast,\n     * without waiting for it to be placed inside a block, because for example\n     * I would like to receive the hash to later track the transaction with another tool.\n     * @returns Returns the hash of the transaction\n     */\n    async signAndBroadcastSync(signerAddress, messages, fee, memo = \"\", timeoutHeight) {\n        let usedFee;\n        if (fee == \"auto\" || typeof fee === \"number\") {\n            (0, utils_1.assertDefined)(this.gasPrice, \"Gas price must be set in the client options when auto gas is used.\");\n            const gasEstimation = await this.simulate(signerAddress, messages, memo);\n            const multiplier = typeof fee === \"number\" ? fee : this.defaultGasMultiplier;\n            usedFee = (0, fee_1.calculateFee)(Math.round(gasEstimation * multiplier), this.gasPrice);\n        }\n        else {\n            usedFee = fee;\n        }\n        const txRaw = await this.sign(signerAddress, messages, usedFee, memo, undefined, timeoutHeight);\n        const txBytes = tx_3.TxRaw.encode(txRaw).finish();\n        return this.broadcastTxSync(txBytes);\n    }\n    /**\n     * Gets account number and sequence from the API, creates a sign doc,\n     * creates a single signature and assembles the signed transaction.\n     *\n     * The sign mode (SIGN_MODE_DIRECT or SIGN_MODE_LEGACY_AMINO_JSON) is determined by this client's signer.\n     *\n     * You can pass signer data (account number, sequence and chain ID) explicitly instead of querying them\n     * from the chain. This is needed when signing for a multisig account, but it also allows for offline signing\n     * (See the SigningStargateClient.offline constructor).\n     */\n    async sign(signerAddress, messages, fee, memo, explicitSignerData, timeoutHeight) {\n        let signerData;\n        if (explicitSignerData) {\n            signerData = explicitSignerData;\n        }\n        else {\n            const { accountNumber, sequence } = await this.getSequence(signerAddress);\n            const chainId = await this.getChainId();\n            signerData = {\n                accountNumber: accountNumber,\n                sequence: sequence,\n                chainId: chainId,\n            };\n        }\n        return (0, proto_signing_1.isOfflineDirectSigner)(this.signer)\n            ? this.signDirect(signerAddress, messages, fee, memo, signerData, timeoutHeight)\n            : this.signAmino(signerAddress, messages, fee, memo, signerData, timeoutHeight);\n    }\n    async signAmino(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }, timeoutHeight) {\n        (0, utils_1.assert)(!(0, proto_signing_1.isOfflineDirectSigner)(this.signer));\n        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);\n        if (!accountFromSigner) {\n            throw new Error(\"Failed to retrieve account from signer\");\n        }\n        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));\n        const signMode = signing_1.SignMode.SIGN_MODE_LEGACY_AMINO_JSON;\n        const msgs = messages.map((msg) => this.aminoTypes.toAmino(msg));\n        const signDoc = (0, amino_1.makeSignDoc)(msgs, fee, chainId, memo, accountNumber, sequence, timeoutHeight);\n        const { signature, signed } = await this.signer.signAmino(signerAddress, signDoc);\n        const signedTxBody = {\n            messages: signed.msgs.map((msg) => this.aminoTypes.fromAmino(msg)),\n            memo: signed.memo,\n            timeoutHeight: timeoutHeight,\n        };\n        const signedTxBodyEncodeObject = {\n            typeUrl: \"/cosmos.tx.v1beta1.TxBody\",\n            value: signedTxBody,\n        };\n        const signedTxBodyBytes = this.registry.encode(signedTxBodyEncodeObject);\n        const signedGasLimit = math_1.Int53.fromString(signed.fee.gas).toNumber();\n        const signedSequence = math_1.Int53.fromString(signed.sequence).toNumber();\n        const signedAuthInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence: signedSequence }], signed.fee.amount, signedGasLimit, signed.fee.granter, signed.fee.payer, signMode);\n        return tx_3.TxRaw.fromPartial({\n            bodyBytes: signedTxBodyBytes,\n            authInfoBytes: signedAuthInfoBytes,\n            signatures: [(0, encoding_1.fromBase64)(signature.signature)],\n        });\n    }\n    async signDirect(signerAddress, messages, fee, memo, { accountNumber, sequence, chainId }, timeoutHeight) {\n        (0, utils_1.assert)((0, proto_signing_1.isOfflineDirectSigner)(this.signer));\n        const accountFromSigner = (await this.signer.getAccounts()).find((account) => account.address === signerAddress);\n        if (!accountFromSigner) {\n            throw new Error(\"Failed to retrieve account from signer\");\n        }\n        const pubkey = (0, proto_signing_1.encodePubkey)((0, amino_1.encodeSecp256k1Pubkey)(accountFromSigner.pubkey));\n        const txBodyEncodeObject = {\n            typeUrl: \"/cosmos.tx.v1beta1.TxBody\",\n            value: {\n                messages: messages,\n                memo: memo,\n                timeoutHeight: timeoutHeight,\n            },\n        };\n        const txBodyBytes = this.registry.encode(txBodyEncodeObject);\n        const gasLimit = math_1.Int53.fromString(fee.gas).toNumber();\n        const authInfoBytes = (0, proto_signing_1.makeAuthInfoBytes)([{ pubkey, sequence }], fee.amount, gasLimit, fee.granter, fee.payer);\n        const signDoc = (0, proto_signing_1.makeSignDoc)(txBodyBytes, authInfoBytes, chainId, accountNumber);\n        const { signature, signed } = await this.signer.signDirect(signerAddress, signDoc);\n        return tx_3.TxRaw.fromPartial({\n            bodyBytes: signed.bodyBytes,\n            authInfoBytes: signed.authInfoBytes,\n            signatures: [(0, encoding_1.fromBase64)(signature.signature)],\n        });\n    }\n}\nexports.SigningStargateClient = SigningStargateClient;\n//# sourceMappingURL=signingstargateclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/signingstargateclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stargate/build/stargateclient.js":
/*!***************************************************************!*\
  !*** ./node_modules/@cosmjs/stargate/build/stargateclient.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.StargateClient = exports.BroadcastTxError = exports.assertIsDeliverTxFailure = exports.assertIsDeliverTxSuccess = exports.isDeliverTxSuccess = exports.isDeliverTxFailure = exports.TimeoutError = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst amino_1 = __webpack_require__(/*! @cosmjs/amino */ \"(ssr)/./node_modules/@cosmjs/amino/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst tendermint_rpc_1 = __webpack_require__(/*! @cosmjs/tendermint-rpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst abci_1 = __webpack_require__(/*! cosmjs-types/cosmos/base/abci/v1beta1/abci */ \"(ssr)/./node_modules/cosmjs-types/cosmos/base/abci/v1beta1/abci.js\");\nconst accounts_1 = __webpack_require__(/*! ./accounts */ \"(ssr)/./node_modules/@cosmjs/stargate/build/accounts.js\");\nconst events_1 = __webpack_require__(/*! ./events */ \"(ssr)/./node_modules/@cosmjs/stargate/build/events.js\");\nconst modules_1 = __webpack_require__(/*! ./modules */ \"(ssr)/./node_modules/@cosmjs/stargate/build/modules/index.js\");\nconst queryclient_1 = __webpack_require__(/*! ./queryclient */ \"(ssr)/./node_modules/@cosmjs/stargate/build/queryclient/index.js\");\nconst search_1 = __webpack_require__(/*! ./search */ \"(ssr)/./node_modules/@cosmjs/stargate/build/search.js\");\nclass TimeoutError extends Error {\n    constructor(message, txId) {\n        super(message);\n        this.txId = txId;\n    }\n}\nexports.TimeoutError = TimeoutError;\nfunction isDeliverTxFailure(result) {\n    return !!result.code;\n}\nexports.isDeliverTxFailure = isDeliverTxFailure;\nfunction isDeliverTxSuccess(result) {\n    return !isDeliverTxFailure(result);\n}\nexports.isDeliverTxSuccess = isDeliverTxSuccess;\n/**\n * Ensures the given result is a success. Throws a detailed error message otherwise.\n */\nfunction assertIsDeliverTxSuccess(result) {\n    if (isDeliverTxFailure(result)) {\n        throw new Error(`Error when broadcasting tx ${result.transactionHash} at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`);\n    }\n}\nexports.assertIsDeliverTxSuccess = assertIsDeliverTxSuccess;\n/**\n * Ensures the given result is a failure. Throws a detailed error message otherwise.\n */\nfunction assertIsDeliverTxFailure(result) {\n    if (isDeliverTxSuccess(result)) {\n        throw new Error(`Transaction ${result.transactionHash} did not fail at height ${result.height}. Code: ${result.code}; Raw log: ${result.rawLog}`);\n    }\n}\nexports.assertIsDeliverTxFailure = assertIsDeliverTxFailure;\n/**\n * An error when broadcasting the transaction. This contains the CheckTx errors\n * from the blockchain. Once a transaction is included in a block no BroadcastTxError\n * is thrown, even if the execution fails (DeliverTx errors).\n */\nclass BroadcastTxError extends Error {\n    constructor(code, codespace, log) {\n        super(`Broadcasting transaction failed with code ${code} (codespace: ${codespace}). Log: ${log}`);\n        this.code = code;\n        this.codespace = codespace;\n        this.log = log;\n    }\n}\nexports.BroadcastTxError = BroadcastTxError;\nclass StargateClient {\n    /**\n     * Creates an instance by connecting to the given CometBFT RPC endpoint.\n     *\n     * This uses auto-detection to decide between a CometBFT 0.38, Tendermint 0.37 and 0.34 client.\n     * To set the Comet client explicitly, use `create`.\n     */\n    static async connect(endpoint, options = {}) {\n        const cometClient = await (0, tendermint_rpc_1.connectComet)(endpoint);\n        return StargateClient.create(cometClient, options);\n    }\n    /**\n     * Creates an instance from a manually created Comet client.\n     * Use this to use `Comet38Client` or `Tendermint37Client` instead of `Tendermint34Client`.\n     */\n    static async create(cometClient, options = {}) {\n        return new StargateClient(cometClient, options);\n    }\n    constructor(cometClient, options) {\n        if (cometClient) {\n            this.cometClient = cometClient;\n            this.queryClient = queryclient_1.QueryClient.withExtensions(cometClient, modules_1.setupAuthExtension, modules_1.setupBankExtension, modules_1.setupStakingExtension, modules_1.setupTxExtension);\n        }\n        const { accountParser = accounts_1.accountFromAny } = options;\n        this.accountParser = accountParser;\n    }\n    getCometClient() {\n        return this.cometClient;\n    }\n    forceGetCometClient() {\n        if (!this.cometClient) {\n            throw new Error(\"Comet client not available. You cannot use online functionality in offline mode.\");\n        }\n        return this.cometClient;\n    }\n    getQueryClient() {\n        return this.queryClient;\n    }\n    forceGetQueryClient() {\n        if (!this.queryClient) {\n            throw new Error(\"Query client not available. You cannot use online functionality in offline mode.\");\n        }\n        return this.queryClient;\n    }\n    async getChainId() {\n        if (!this.chainId) {\n            const response = await this.forceGetCometClient().status();\n            const chainId = response.nodeInfo.network;\n            if (!chainId)\n                throw new Error(\"Chain ID must not be empty\");\n            this.chainId = chainId;\n        }\n        return this.chainId;\n    }\n    async getHeight() {\n        const status = await this.forceGetCometClient().status();\n        return status.syncInfo.latestBlockHeight;\n    }\n    async getAccount(searchAddress) {\n        try {\n            const account = await this.forceGetQueryClient().auth.account(searchAddress);\n            return account ? this.accountParser(account) : null;\n        }\n        catch (error) {\n            if (/rpc error: code = NotFound/i.test(error.toString())) {\n                return null;\n            }\n            throw error;\n        }\n    }\n    async getSequence(address) {\n        const account = await this.getAccount(address);\n        if (!account) {\n            throw new Error(`Account '${address}' does not exist on chain. Send some tokens there before trying to query sequence.`);\n        }\n        return {\n            accountNumber: account.accountNumber,\n            sequence: account.sequence,\n        };\n    }\n    async getBlock(height) {\n        const response = await this.forceGetCometClient().block(height);\n        return {\n            id: (0, encoding_1.toHex)(response.blockId.hash).toUpperCase(),\n            header: {\n                version: {\n                    block: new math_1.Uint53(response.block.header.version.block).toString(),\n                    app: new math_1.Uint53(response.block.header.version.app).toString(),\n                },\n                height: response.block.header.height,\n                chainId: response.block.header.chainId,\n                time: (0, tendermint_rpc_1.toRfc3339WithNanoseconds)(response.block.header.time),\n            },\n            txs: response.block.txs,\n        };\n    }\n    async getBalance(address, searchDenom) {\n        return this.forceGetQueryClient().bank.balance(address, searchDenom);\n    }\n    /**\n     * Queries all balances for all denoms that belong to this address.\n     *\n     * Uses the grpc queries (which iterates over the store internally), and we cannot get\n     * proofs from such a method.\n     */\n    async getAllBalances(address) {\n        return this.forceGetQueryClient().bank.allBalances(address);\n    }\n    async getBalanceStaked(address) {\n        const allDelegations = [];\n        let startAtKey = undefined;\n        do {\n            const { delegationResponses, pagination } = await this.forceGetQueryClient().staking.delegatorDelegations(address, startAtKey);\n            const loadedDelegations = delegationResponses || [];\n            allDelegations.push(...loadedDelegations);\n            startAtKey = pagination?.nextKey;\n        } while (startAtKey !== undefined && startAtKey.length !== 0);\n        const sumValues = allDelegations.reduce((previousValue, currentValue) => {\n            // Safe because field is set to non-nullable (https://github.com/cosmos/cosmos-sdk/blob/v0.45.3/proto/cosmos/staking/v1beta1/staking.proto#L295)\n            (0, utils_1.assert)(currentValue.balance);\n            return previousValue !== null ? (0, amino_1.addCoins)(previousValue, currentValue.balance) : currentValue.balance;\n        }, null);\n        return sumValues;\n    }\n    async getDelegation(delegatorAddress, validatorAddress) {\n        let delegatedAmount;\n        try {\n            delegatedAmount = (await this.forceGetQueryClient().staking.delegation(delegatorAddress, validatorAddress)).delegationResponse?.balance;\n        }\n        catch (e) {\n            if (e.toString().includes(\"key not found\")) {\n                // ignore, `delegatedAmount` remains undefined\n            }\n            else {\n                throw e;\n            }\n        }\n        return delegatedAmount || null;\n    }\n    async getTx(id) {\n        const results = await this.txsQuery(`tx.hash='${id}'`);\n        return results[0] ?? null;\n    }\n    async searchTx(query) {\n        let rawQuery;\n        if (typeof query === \"string\") {\n            rawQuery = query;\n        }\n        else if ((0, search_1.isSearchTxQueryArray)(query)) {\n            rawQuery = query\n                .map((t) => {\n                // numeric values must not have quotes https://github.com/cosmos/cosmjs/issues/1462\n                if (typeof t.value === \"string\")\n                    return `${t.key}='${t.value}'`;\n                else\n                    return `${t.key}=${t.value}`;\n            })\n                .join(\" AND \");\n        }\n        else {\n            throw new Error(\"Got unsupported query type. See CosmJS 0.31 CHANGELOG for API breaking changes here.\");\n        }\n        return this.txsQuery(rawQuery);\n    }\n    disconnect() {\n        if (this.cometClient)\n            this.cometClient.disconnect();\n    }\n    /**\n     * Broadcasts a signed transaction to the network and monitors its inclusion in a block.\n     *\n     * If broadcasting is rejected by the node for some reason (e.g. because of a CheckTx failure),\n     * an error is thrown.\n     *\n     * If the transaction is not included in a block before the provided timeout, this errors with a `TimeoutError`.\n     *\n     * If the transaction is included in a block, a `DeliverTxResponse` is returned. The caller then\n     * usually needs to check for execution success or failure.\n     */\n    async broadcastTx(tx, timeoutMs = 60000, pollIntervalMs = 3000) {\n        let timedOut = false;\n        const txPollTimeout = setTimeout(() => {\n            timedOut = true;\n        }, timeoutMs);\n        const pollForTx = async (txId) => {\n            if (timedOut) {\n                throw new TimeoutError(`Transaction with ID ${txId} was submitted but was not yet found on the chain. You might want to check later. There was a wait of ${timeoutMs / 1000} seconds.`, txId);\n            }\n            await (0, utils_1.sleep)(pollIntervalMs);\n            const result = await this.getTx(txId);\n            return result\n                ? {\n                    code: result.code,\n                    height: result.height,\n                    txIndex: result.txIndex,\n                    events: result.events,\n                    rawLog: result.rawLog,\n                    transactionHash: txId,\n                    msgResponses: result.msgResponses,\n                    gasUsed: result.gasUsed,\n                    gasWanted: result.gasWanted,\n                }\n                : pollForTx(txId);\n        };\n        const transactionId = await this.broadcastTxSync(tx);\n        return new Promise((resolve, reject) => pollForTx(transactionId).then((value) => {\n            clearTimeout(txPollTimeout);\n            resolve(value);\n        }, (error) => {\n            clearTimeout(txPollTimeout);\n            reject(error);\n        }));\n    }\n    /**\n     * Broadcasts a signed transaction to the network without monitoring it.\n     *\n     * If broadcasting is rejected by the node for some reason (e.g. because of a CheckTx failure),\n     * an error is thrown.\n     *\n     * If the transaction is broadcasted, a `string` containing the hash of the transaction is returned. The caller then\n     * usually needs to check if the transaction was included in a block and was successful.\n     *\n     * @returns Returns the hash of the transaction\n     */\n    async broadcastTxSync(tx) {\n        const broadcasted = await this.forceGetCometClient().broadcastTxSync({ tx });\n        if (broadcasted.code) {\n            return Promise.reject(new BroadcastTxError(broadcasted.code, broadcasted.codespace ?? \"\", broadcasted.log));\n        }\n        const transactionId = (0, encoding_1.toHex)(broadcasted.hash).toUpperCase();\n        return transactionId;\n    }\n    async txsQuery(query) {\n        const results = await this.forceGetCometClient().txSearchAll({ query: query });\n        return results.txs.map((tx) => {\n            const txMsgData = abci_1.TxMsgData.decode(tx.result.data ?? new Uint8Array());\n            return {\n                height: tx.height,\n                txIndex: tx.index,\n                hash: (0, encoding_1.toHex)(tx.hash).toUpperCase(),\n                code: tx.result.code,\n                events: tx.result.events.map(events_1.fromTendermintEvent),\n                rawLog: tx.result.log || \"\",\n                tx: tx.tx,\n                msgResponses: txMsgData.msgResponses,\n                gasUsed: tx.result.gasUsed,\n                gasWanted: tx.result.gasWanted,\n            };\n        });\n    }\n}\nexports.StargateClient = StargateClient;\n//# sourceMappingURL=stargateclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stargate/build/stargateclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/concat.js":
/*!*****************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/concat.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.concat = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\n/**\n * An implementation of concat that buffers all source stream events\n *\n * Marble diagram:\n *\n * ```text\n * --1--2---3---4-|\n * -a--b-c--d-|\n * --------X---------Y---------Z-\n *           concat\n * --1--2---3---4-abcdXY-------Z-\n * ```\n *\n * This is inspired by RxJS's concat as documented at http://rxmarbles.com/#concat and behaves\n * differently than xstream's concat as discussed in https://github.com/staltz/xstream/issues/170.\n *\n */\nfunction concat(...streams) {\n    const subscriptions = new Array();\n    const queues = new Array(); // one queue per stream\n    const completedStreams = new Set();\n    let activeStreamIndex = 0;\n    function reset() {\n        while (subscriptions.length > 0) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const subscription = subscriptions.shift();\n            subscription.unsubscribe();\n        }\n        queues.length = 0;\n        completedStreams.clear();\n        activeStreamIndex = 0;\n    }\n    const producer = {\n        start: (listener) => {\n            streams.forEach((_) => queues.push([]));\n            function emitAllQueuesEvents(streamIndex) {\n                // eslint-disable-next-line no-constant-condition\n                while (true) {\n                    const element = queues[streamIndex].shift();\n                    if (element === undefined) {\n                        return;\n                    }\n                    listener.next(element);\n                }\n            }\n            function isDone() {\n                return activeStreamIndex >= streams.length;\n            }\n            if (isDone()) {\n                listener.complete();\n                return;\n            }\n            streams.forEach((stream, index) => {\n                subscriptions.push(stream.subscribe({\n                    next: (value) => {\n                        if (index === activeStreamIndex) {\n                            listener.next(value);\n                        }\n                        else {\n                            queues[index].push(value);\n                        }\n                    },\n                    complete: () => {\n                        completedStreams.add(index);\n                        while (completedStreams.has(activeStreamIndex)) {\n                            // this stream completed: emit all and move on\n                            emitAllQueuesEvents(activeStreamIndex);\n                            activeStreamIndex++;\n                        }\n                        if (isDone()) {\n                            listener.complete();\n                        }\n                        else {\n                            // now active stream can have some events queued but did not yet complete\n                            emitAllQueuesEvents(activeStreamIndex);\n                        }\n                    },\n                    error: (error) => {\n                        listener.error(error);\n                        reset();\n                    },\n                }));\n            });\n        },\n        stop: () => {\n            reset();\n        },\n    };\n    return xstream_1.Stream.create(producer);\n}\nexports.concat = concat;\n//# sourceMappingURL=concat.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvY29uY2F0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGNBQWM7QUFDZCxrQkFBa0IsbUJBQU8sQ0FBQyxzREFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0cmVhbS9idWlsZC9jb25jYXQuanM/ZTY2MiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29uY2F0ID0gdm9pZCAwO1xuY29uc3QgeHN0cmVhbV8xID0gcmVxdWlyZShcInhzdHJlYW1cIik7XG4vKipcbiAqIEFuIGltcGxlbWVudGF0aW9uIG9mIGNvbmNhdCB0aGF0IGJ1ZmZlcnMgYWxsIHNvdXJjZSBzdHJlYW0gZXZlbnRzXG4gKlxuICogTWFyYmxlIGRpYWdyYW06XG4gKlxuICogYGBgdGV4dFxuICogLS0xLS0yLS0tMy0tLTQtfFxuICogLWEtLWItYy0tZC18XG4gKiAtLS0tLS0tLVgtLS0tLS0tLS1ZLS0tLS0tLS0tWi1cbiAqICAgICAgICAgICBjb25jYXRcbiAqIC0tMS0tMi0tLTMtLS00LWFiY2RYWS0tLS0tLS1aLVxuICogYGBgXG4gKlxuICogVGhpcyBpcyBpbnNwaXJlZCBieSBSeEpTJ3MgY29uY2F0IGFzIGRvY3VtZW50ZWQgYXQgaHR0cDovL3J4bWFyYmxlcy5jb20vI2NvbmNhdCBhbmQgYmVoYXZlc1xuICogZGlmZmVyZW50bHkgdGhhbiB4c3RyZWFtJ3MgY29uY2F0IGFzIGRpc2N1c3NlZCBpbiBodHRwczovL2dpdGh1Yi5jb20vc3RhbHR6L3hzdHJlYW0vaXNzdWVzLzE3MC5cbiAqXG4gKi9cbmZ1bmN0aW9uIGNvbmNhdCguLi5zdHJlYW1zKSB7XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9ucyA9IG5ldyBBcnJheSgpO1xuICAgIGNvbnN0IHF1ZXVlcyA9IG5ldyBBcnJheSgpOyAvLyBvbmUgcXVldWUgcGVyIHN0cmVhbVxuICAgIGNvbnN0IGNvbXBsZXRlZFN0cmVhbXMgPSBuZXcgU2V0KCk7XG4gICAgbGV0IGFjdGl2ZVN0cmVhbUluZGV4ID0gMDtcbiAgICBmdW5jdGlvbiByZXNldCgpIHtcbiAgICAgICAgd2hpbGUgKHN1YnNjcmlwdGlvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1ub24tbnVsbC1hc3NlcnRpb25cbiAgICAgICAgICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IHN1YnNjcmlwdGlvbnMuc2hpZnQoKTtcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICB9XG4gICAgICAgIHF1ZXVlcy5sZW5ndGggPSAwO1xuICAgICAgICBjb21wbGV0ZWRTdHJlYW1zLmNsZWFyKCk7XG4gICAgICAgIGFjdGl2ZVN0cmVhbUluZGV4ID0gMDtcbiAgICB9XG4gICAgY29uc3QgcHJvZHVjZXIgPSB7XG4gICAgICAgIHN0YXJ0OiAobGlzdGVuZXIpID0+IHtcbiAgICAgICAgICAgIHN0cmVhbXMuZm9yRWFjaCgoXykgPT4gcXVldWVzLnB1c2goW10pKTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIGVtaXRBbGxRdWV1ZXNFdmVudHMoc3RyZWFtSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29uc3RhbnQtY29uZGl0aW9uXG4gICAgICAgICAgICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHF1ZXVlc1tzdHJlYW1JbmRleF0uc2hpZnQoKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyLm5leHQoZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZnVuY3Rpb24gaXNEb25lKCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhY3RpdmVTdHJlYW1JbmRleCA+PSBzdHJlYW1zLmxlbmd0aDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc0RvbmUoKSkge1xuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc3RyZWFtcy5mb3JFYWNoKChzdHJlYW0sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9ucy5wdXNoKHN0cmVhbS5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICAgICAgICBuZXh0OiAodmFsdWUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpbmRleCA9PT0gYWN0aXZlU3RyZWFtSW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lci5uZXh0KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXVlc1tpbmRleF0ucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZWRTdHJlYW1zLmFkZChpbmRleCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoY29tcGxldGVkU3RyZWFtcy5oYXMoYWN0aXZlU3RyZWFtSW5kZXgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBzdHJlYW0gY29tcGxldGVkOiBlbWl0IGFsbCBhbmQgbW92ZSBvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtaXRBbGxRdWV1ZXNFdmVudHMoYWN0aXZlU3RyZWFtSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFjdGl2ZVN0cmVhbUluZGV4Kys7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNEb25lKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lci5jb21wbGV0ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbm93IGFjdGl2ZSBzdHJlYW0gY2FuIGhhdmUgc29tZSBldmVudHMgcXVldWVkIGJ1dCBkaWQgbm90IHlldCBjb21wbGV0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtaXRBbGxRdWV1ZXNFdmVudHMoYWN0aXZlU3RyZWFtSW5kZXgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBlcnJvcjogKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsaXN0ZW5lci5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNldCgpO1xuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBzdG9wOiAoKSA9PiB7XG4gICAgICAgICAgICByZXNldCgpO1xuICAgICAgICB9LFxuICAgIH07XG4gICAgcmV0dXJuIHhzdHJlYW1fMS5TdHJlYW0uY3JlYXRlKHByb2R1Y2VyKTtcbn1cbmV4cG9ydHMuY29uY2F0ID0gY29uY2F0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uY2F0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/concat.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/defaultvalueproducer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/defaultvalueproducer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DefaultValueProducer = void 0;\n// allows pre-producing values before anyone is listening\nclass DefaultValueProducer {\n    get value() {\n        return this.internalValue;\n    }\n    constructor(value, callbacks) {\n        this.callbacks = callbacks;\n        this.internalValue = value;\n    }\n    /**\n     * Update the current value.\n     *\n     * If producer is active (i.e. someone is listening), this emits an event.\n     * If not, just the current value is updated.\n     */\n    update(value) {\n        this.internalValue = value;\n        if (this.listener) {\n            this.listener.next(value);\n        }\n    }\n    /**\n     * Produce an error\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    error(error) {\n        if (this.listener) {\n            this.listener.error(error);\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    start(listener) {\n        this.listener = listener;\n        listener.next(this.internalValue);\n        if (this.callbacks) {\n            this.callbacks.onStarted();\n        }\n    }\n    /**\n     * Called by the stream. Do not call this directly.\n     */\n    stop() {\n        if (this.callbacks) {\n            this.callbacks.onStop();\n        }\n        this.listener = undefined;\n    }\n}\nexports.DefaultValueProducer = DefaultValueProducer;\n//# sourceMappingURL=defaultvalueproducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvZGVmYXVsdHZhbHVlcHJvZHVjZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsNEJBQTRCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RyZWFtL2J1aWxkL2RlZmF1bHR2YWx1ZXByb2R1Y2VyLmpzP2VhOTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlZmF1bHRWYWx1ZVByb2R1Y2VyID0gdm9pZCAwO1xuLy8gYWxsb3dzIHByZS1wcm9kdWNpbmcgdmFsdWVzIGJlZm9yZSBhbnlvbmUgaXMgbGlzdGVuaW5nXG5jbGFzcyBEZWZhdWx0VmFsdWVQcm9kdWNlciB7XG4gICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5pbnRlcm5hbFZhbHVlO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih2YWx1ZSwgY2FsbGJhY2tzKSB7XG4gICAgICAgIHRoaXMuY2FsbGJhY2tzID0gY2FsbGJhY2tzO1xuICAgICAgICB0aGlzLmludGVybmFsVmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBjdXJyZW50IHZhbHVlLlxuICAgICAqXG4gICAgICogSWYgcHJvZHVjZXIgaXMgYWN0aXZlIChpLmUuIHNvbWVvbmUgaXMgbGlzdGVuaW5nKSwgdGhpcyBlbWl0cyBhbiBldmVudC5cbiAgICAgKiBJZiBub3QsIGp1c3QgdGhlIGN1cnJlbnQgdmFsdWUgaXMgdXBkYXRlZC5cbiAgICAgKi9cbiAgICB1cGRhdGUodmFsdWUpIHtcbiAgICAgICAgdGhpcy5pbnRlcm5hbFZhbHVlID0gdmFsdWU7XG4gICAgICAgIGlmICh0aGlzLmxpc3RlbmVyKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVyLm5leHQodmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFByb2R1Y2UgYW4gZXJyb3JcbiAgICAgKi9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2V4cGxpY2l0LW1vZHVsZS1ib3VuZGFyeS10eXBlc1xuICAgIGVycm9yKGVycm9yKSB7XG4gICAgICAgIGlmICh0aGlzLmxpc3RlbmVyKSB7XG4gICAgICAgICAgICB0aGlzLmxpc3RlbmVyLmVycm9yKGVycm9yKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgYnkgdGhlIHN0cmVhbS4gRG8gbm90IGNhbGwgdGhpcyBkaXJlY3RseS5cbiAgICAgKi9cbiAgICBzdGFydChsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmxpc3RlbmVyID0gbGlzdGVuZXI7XG4gICAgICAgIGxpc3RlbmVyLm5leHQodGhpcy5pbnRlcm5hbFZhbHVlKTtcbiAgICAgICAgaWYgKHRoaXMuY2FsbGJhY2tzKSB7XG4gICAgICAgICAgICB0aGlzLmNhbGxiYWNrcy5vblN0YXJ0ZWQoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBDYWxsZWQgYnkgdGhlIHN0cmVhbS4gRG8gbm90IGNhbGwgdGhpcyBkaXJlY3RseS5cbiAgICAgKi9cbiAgICBzdG9wKCkge1xuICAgICAgICBpZiAodGhpcy5jYWxsYmFja3MpIHtcbiAgICAgICAgICAgIHRoaXMuY2FsbGJhY2tzLm9uU3RvcCgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGlzdGVuZXIgPSB1bmRlZmluZWQ7XG4gICAgfVxufVxuZXhwb3J0cy5EZWZhdWx0VmFsdWVQcm9kdWNlciA9IERlZmF1bHRWYWx1ZVByb2R1Y2VyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVmYXVsdHZhbHVlcHJvZHVjZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/defaultvalueproducer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/dropduplicates.js":
/*!*************************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/dropduplicates.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.dropDuplicates = void 0;\n/**\n * Drops duplicate values in a stream.\n *\n * Marble diagram:\n *\n * ```text\n * -1-1-1-2-4-3-3-4--\n *   dropDuplicates\n * -1-----2-4-3------\n * ```\n *\n * Each value must be uniquely identified by a string given by\n * valueToKey(value).\n *\n * Internally this maintains a set of keys that have been processed already,\n * i.e. memory consumption and Set lookup times should be considered when\n * using this function.\n */\nfunction dropDuplicates(valueToKey) {\n    const operand = (instream) => {\n        const emittedKeys = new Set();\n        const deduplicatedStream = instream\n            .filter((value) => !emittedKeys.has(valueToKey(value)))\n            .debug((value) => emittedKeys.add(valueToKey(value)));\n        return deduplicatedStream;\n    };\n    return operand;\n}\nexports.dropDuplicates = dropDuplicates;\n//# sourceMappingURL=dropduplicates.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvZHJvcGR1cGxpY2F0ZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0cmVhbS9idWlsZC9kcm9wZHVwbGljYXRlcy5qcz8xOTc3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kcm9wRHVwbGljYXRlcyA9IHZvaWQgMDtcbi8qKlxuICogRHJvcHMgZHVwbGljYXRlIHZhbHVlcyBpbiBhIHN0cmVhbS5cbiAqXG4gKiBNYXJibGUgZGlhZ3JhbTpcbiAqXG4gKiBgYGB0ZXh0XG4gKiAtMS0xLTEtMi00LTMtMy00LS1cbiAqICAgZHJvcER1cGxpY2F0ZXNcbiAqIC0xLS0tLS0yLTQtMy0tLS0tLVxuICogYGBgXG4gKlxuICogRWFjaCB2YWx1ZSBtdXN0IGJlIHVuaXF1ZWx5IGlkZW50aWZpZWQgYnkgYSBzdHJpbmcgZ2l2ZW4gYnlcbiAqIHZhbHVlVG9LZXkodmFsdWUpLlxuICpcbiAqIEludGVybmFsbHkgdGhpcyBtYWludGFpbnMgYSBzZXQgb2Yga2V5cyB0aGF0IGhhdmUgYmVlbiBwcm9jZXNzZWQgYWxyZWFkeSxcbiAqIGkuZS4gbWVtb3J5IGNvbnN1bXB0aW9uIGFuZCBTZXQgbG9va3VwIHRpbWVzIHNob3VsZCBiZSBjb25zaWRlcmVkIHdoZW5cbiAqIHVzaW5nIHRoaXMgZnVuY3Rpb24uXG4gKi9cbmZ1bmN0aW9uIGRyb3BEdXBsaWNhdGVzKHZhbHVlVG9LZXkpIHtcbiAgICBjb25zdCBvcGVyYW5kID0gKGluc3RyZWFtKSA9PiB7XG4gICAgICAgIGNvbnN0IGVtaXR0ZWRLZXlzID0gbmV3IFNldCgpO1xuICAgICAgICBjb25zdCBkZWR1cGxpY2F0ZWRTdHJlYW0gPSBpbnN0cmVhbVxuICAgICAgICAgICAgLmZpbHRlcigodmFsdWUpID0+ICFlbWl0dGVkS2V5cy5oYXModmFsdWVUb0tleSh2YWx1ZSkpKVxuICAgICAgICAgICAgLmRlYnVnKCh2YWx1ZSkgPT4gZW1pdHRlZEtleXMuYWRkKHZhbHVlVG9LZXkodmFsdWUpKSk7XG4gICAgICAgIHJldHVybiBkZWR1cGxpY2F0ZWRTdHJlYW07XG4gICAgfTtcbiAgICByZXR1cm4gb3BlcmFuZDtcbn1cbmV4cG9ydHMuZHJvcER1cGxpY2F0ZXMgPSBkcm9wRHVwbGljYXRlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWRyb3BkdXBsaWNhdGVzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/dropduplicates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/index.js ***!
  \****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ValueAndUpdates = exports.toListPromise = exports.fromListPromise = exports.firstEvent = exports.dropDuplicates = exports.DefaultValueProducer = exports.concat = void 0;\nvar concat_1 = __webpack_require__(/*! ./concat */ \"(ssr)/./node_modules/@cosmjs/stream/build/concat.js\");\nObject.defineProperty(exports, \"concat\", ({ enumerable: true, get: function () { return concat_1.concat; } }));\nvar defaultvalueproducer_1 = __webpack_require__(/*! ./defaultvalueproducer */ \"(ssr)/./node_modules/@cosmjs/stream/build/defaultvalueproducer.js\");\nObject.defineProperty(exports, \"DefaultValueProducer\", ({ enumerable: true, get: function () { return defaultvalueproducer_1.DefaultValueProducer; } }));\nvar dropduplicates_1 = __webpack_require__(/*! ./dropduplicates */ \"(ssr)/./node_modules/@cosmjs/stream/build/dropduplicates.js\");\nObject.defineProperty(exports, \"dropDuplicates\", ({ enumerable: true, get: function () { return dropduplicates_1.dropDuplicates; } }));\nvar promise_1 = __webpack_require__(/*! ./promise */ \"(ssr)/./node_modules/@cosmjs/stream/build/promise.js\");\nObject.defineProperty(exports, \"firstEvent\", ({ enumerable: true, get: function () { return promise_1.firstEvent; } }));\nObject.defineProperty(exports, \"fromListPromise\", ({ enumerable: true, get: function () { return promise_1.fromListPromise; } }));\nObject.defineProperty(exports, \"toListPromise\", ({ enumerable: true, get: function () { return promise_1.toListPromise; } }));\n__exportStar(__webpack_require__(/*! ./reducer */ \"(ssr)/./node_modules/@cosmjs/stream/build/reducer.js\"), exports);\nvar valueandupdates_1 = __webpack_require__(/*! ./valueandupdates */ \"(ssr)/./node_modules/@cosmjs/stream/build/valueandupdates.js\");\nObject.defineProperty(exports, \"ValueAndUpdates\", ({ enumerable: true, get: function () { return valueandupdates_1.ValueAndUpdates; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0NBQW9DO0FBQ25EO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcscUJBQXFCLEdBQUcsdUJBQXVCLEdBQUcsa0JBQWtCLEdBQUcsc0JBQXNCLEdBQUcsNEJBQTRCLEdBQUcsY0FBYztBQUN2SyxlQUFlLG1CQUFPLENBQUMscUVBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzVHLDZCQUE2QixtQkFBTyxDQUFDLGlHQUF3QjtBQUM3RCx3REFBdUQsRUFBRSxxQ0FBcUMsdURBQXVELEVBQUM7QUFDdEosdUJBQXVCLG1CQUFPLENBQUMscUZBQWtCO0FBQ2pELGtEQUFpRCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUNwSSxnQkFBZ0IsbUJBQU8sQ0FBQyx1RUFBVztBQUNuQyw4Q0FBNkMsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDckgsbURBQWtELEVBQUUscUNBQXFDLHFDQUFxQyxFQUFDO0FBQy9ILGlEQUFnRCxFQUFFLHFDQUFxQyxtQ0FBbUMsRUFBQztBQUMzSCxhQUFhLG1CQUFPLENBQUMsdUVBQVc7QUFDaEMsd0JBQXdCLG1CQUFPLENBQUMsdUZBQW1CO0FBQ25ELG1EQUFrRCxFQUFFLHFDQUFxQyw2Q0FBNkMsRUFBQztBQUN2SSIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvaW5kZXguanM/YTZkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5WYWx1ZUFuZFVwZGF0ZXMgPSBleHBvcnRzLnRvTGlzdFByb21pc2UgPSBleHBvcnRzLmZyb21MaXN0UHJvbWlzZSA9IGV4cG9ydHMuZmlyc3RFdmVudCA9IGV4cG9ydHMuZHJvcER1cGxpY2F0ZXMgPSBleHBvcnRzLkRlZmF1bHRWYWx1ZVByb2R1Y2VyID0gZXhwb3J0cy5jb25jYXQgPSB2b2lkIDA7XG52YXIgY29uY2F0XzEgPSByZXF1aXJlKFwiLi9jb25jYXRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJjb25jYXRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGNvbmNhdF8xLmNvbmNhdDsgfSB9KTtcbnZhciBkZWZhdWx0dmFsdWVwcm9kdWNlcl8xID0gcmVxdWlyZShcIi4vZGVmYXVsdHZhbHVlcHJvZHVjZXJcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEZWZhdWx0VmFsdWVQcm9kdWNlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZGVmYXVsdHZhbHVlcHJvZHVjZXJfMS5EZWZhdWx0VmFsdWVQcm9kdWNlcjsgfSB9KTtcbnZhciBkcm9wZHVwbGljYXRlc18xID0gcmVxdWlyZShcIi4vZHJvcGR1cGxpY2F0ZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkcm9wRHVwbGljYXRlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZHJvcGR1cGxpY2F0ZXNfMS5kcm9wRHVwbGljYXRlczsgfSB9KTtcbnZhciBwcm9taXNlXzEgPSByZXF1aXJlKFwiLi9wcm9taXNlXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZmlyc3RFdmVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJvbWlzZV8xLmZpcnN0RXZlbnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmcm9tTGlzdFByb21pc2VcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByb21pc2VfMS5mcm9tTGlzdFByb21pc2U7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJ0b0xpc3RQcm9taXNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcm9taXNlXzEudG9MaXN0UHJvbWlzZTsgfSB9KTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9yZWR1Y2VyXCIpLCBleHBvcnRzKTtcbnZhciB2YWx1ZWFuZHVwZGF0ZXNfMSA9IHJlcXVpcmUoXCIuL3ZhbHVlYW5kdXBkYXRlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZhbHVlQW5kVXBkYXRlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gdmFsdWVhbmR1cGRhdGVzXzEuVmFsdWVBbmRVcGRhdGVzOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/promise.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/promise.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.firstEvent = exports.toListPromise = exports.fromListPromise = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\n/**\n * Emits one event for each list element as soon as the promise resolves\n */\nfunction fromListPromise(promise) {\n    const producer = {\n        start: (listener) => {\n            // the code in `start` runs as soon as anyone listens to the stream\n            promise\n                .then((iterable) => {\n                for (const element of iterable) {\n                    listener.next(element);\n                }\n                listener.complete();\n            })\n                .catch((error) => listener.error(error));\n        },\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        stop: () => { },\n    };\n    return xstream_1.Stream.create(producer);\n}\nexports.fromListPromise = fromListPromise;\n/**\n * Listens to stream and collects events. When `count` events are collected,\n * the promise resolves with an array of events.\n *\n * Rejects if stream completes before `count` events are collected.\n */\nasync function toListPromise(stream, count) {\n    return new Promise((resolve, reject) => {\n        if (count === 0) {\n            resolve([]);\n            return;\n        }\n        const events = new Array();\n        // take() unsubscribes from source stream automatically\n        stream.take(count).subscribe({\n            next: (event) => {\n                events.push(event);\n                if (events.length === count) {\n                    resolve(events);\n                }\n            },\n            complete: () => {\n                reject(`Stream completed before all events could be collected. ` +\n                    `Collected ${events.length}, expected ${count}`);\n            },\n            error: (error) => reject(error),\n        });\n    });\n}\nexports.toListPromise = toListPromise;\n/**\n * Listens to stream, collects one event and revolves.\n *\n * Rejects if stream completes before one event was fired.\n */\nasync function firstEvent(stream) {\n    return (await toListPromise(stream, 1))[0];\n}\nexports.firstEvent = firstEvent;\n//# sourceMappingURL=promise.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvcHJvbWlzZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxxQkFBcUIsR0FBRyx1QkFBdUI7QUFDcEUsa0JBQWtCLG1CQUFPLENBQUMsc0RBQVM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1Q7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGlDQUFpQyxjQUFjLGFBQWEsTUFBTTtBQUNsRSxhQUFhO0FBQ2I7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvc3RyZWFtL2J1aWxkL3Byb21pc2UuanM/YzE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmlyc3RFdmVudCA9IGV4cG9ydHMudG9MaXN0UHJvbWlzZSA9IGV4cG9ydHMuZnJvbUxpc3RQcm9taXNlID0gdm9pZCAwO1xuY29uc3QgeHN0cmVhbV8xID0gcmVxdWlyZShcInhzdHJlYW1cIik7XG4vKipcbiAqIEVtaXRzIG9uZSBldmVudCBmb3IgZWFjaCBsaXN0IGVsZW1lbnQgYXMgc29vbiBhcyB0aGUgcHJvbWlzZSByZXNvbHZlc1xuICovXG5mdW5jdGlvbiBmcm9tTGlzdFByb21pc2UocHJvbWlzZSkge1xuICAgIGNvbnN0IHByb2R1Y2VyID0ge1xuICAgICAgICBzdGFydDogKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgICAgICAvLyB0aGUgY29kZSBpbiBgc3RhcnRgIHJ1bnMgYXMgc29vbiBhcyBhbnlvbmUgbGlzdGVucyB0byB0aGUgc3RyZWFtXG4gICAgICAgICAgICBwcm9taXNlXG4gICAgICAgICAgICAgICAgLnRoZW4oKGl0ZXJhYmxlKSA9PiB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBlbGVtZW50IG9mIGl0ZXJhYmxlKSB7XG4gICAgICAgICAgICAgICAgICAgIGxpc3RlbmVyLm5leHQoZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGxpc3RlbmVyLmNvbXBsZXRlKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGxpc3RlbmVyLmVycm9yKGVycm9yKSk7XG4gICAgICAgIH0sXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZW1wdHktZnVuY3Rpb25cbiAgICAgICAgc3RvcDogKCkgPT4geyB9LFxuICAgIH07XG4gICAgcmV0dXJuIHhzdHJlYW1fMS5TdHJlYW0uY3JlYXRlKHByb2R1Y2VyKTtcbn1cbmV4cG9ydHMuZnJvbUxpc3RQcm9taXNlID0gZnJvbUxpc3RQcm9taXNlO1xuLyoqXG4gKiBMaXN0ZW5zIHRvIHN0cmVhbSBhbmQgY29sbGVjdHMgZXZlbnRzLiBXaGVuIGBjb3VudGAgZXZlbnRzIGFyZSBjb2xsZWN0ZWQsXG4gKiB0aGUgcHJvbWlzZSByZXNvbHZlcyB3aXRoIGFuIGFycmF5IG9mIGV2ZW50cy5cbiAqXG4gKiBSZWplY3RzIGlmIHN0cmVhbSBjb21wbGV0ZXMgYmVmb3JlIGBjb3VudGAgZXZlbnRzIGFyZSBjb2xsZWN0ZWQuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIHRvTGlzdFByb21pc2Uoc3RyZWFtLCBjb3VudCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgIGlmIChjb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgcmVzb2x2ZShbXSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZXZlbnRzID0gbmV3IEFycmF5KCk7XG4gICAgICAgIC8vIHRha2UoKSB1bnN1YnNjcmliZXMgZnJvbSBzb3VyY2Ugc3RyZWFtIGF1dG9tYXRpY2FsbHlcbiAgICAgICAgc3RyZWFtLnRha2UoY291bnQpLnN1YnNjcmliZSh7XG4gICAgICAgICAgICBuZXh0OiAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgICAgICBldmVudHMucHVzaChldmVudCk7XG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50cy5sZW5ndGggPT09IGNvdW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUoZXZlbnRzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICByZWplY3QoYFN0cmVhbSBjb21wbGV0ZWQgYmVmb3JlIGFsbCBldmVudHMgY291bGQgYmUgY29sbGVjdGVkLiBgICtcbiAgICAgICAgICAgICAgICAgICAgYENvbGxlY3RlZCAke2V2ZW50cy5sZW5ndGh9LCBleHBlY3RlZCAke2NvdW50fWApO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGVycm9yOiAoZXJyb3IpID0+IHJlamVjdChlcnJvciksXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0cy50b0xpc3RQcm9taXNlID0gdG9MaXN0UHJvbWlzZTtcbi8qKlxuICogTGlzdGVucyB0byBzdHJlYW0sIGNvbGxlY3RzIG9uZSBldmVudCBhbmQgcmV2b2x2ZXMuXG4gKlxuICogUmVqZWN0cyBpZiBzdHJlYW0gY29tcGxldGVzIGJlZm9yZSBvbmUgZXZlbnQgd2FzIGZpcmVkLlxuICovXG5hc3luYyBmdW5jdGlvbiBmaXJzdEV2ZW50KHN0cmVhbSkge1xuICAgIHJldHVybiAoYXdhaXQgdG9MaXN0UHJvbWlzZShzdHJlYW0sIDEpKVswXTtcbn1cbmV4cG9ydHMuZmlyc3RFdmVudCA9IGZpcnN0RXZlbnQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm9taXNlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/promise.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/reducer.js":
/*!******************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/reducer.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.lastValue = exports.asArray = exports.countStream = exports.Reducer = void 0;\n// Reducer takes a stream of events T and a ReducerFunc, that\n// materializes a state of type U.\nclass Reducer {\n    constructor(stream, reducer, initState) {\n        this.stream = stream;\n        this.reducer = reducer;\n        this.state = initState;\n        this.completed = new Promise((resolve, reject) => {\n            const subscription = this.stream.subscribe({\n                next: (evt) => {\n                    this.state = this.reducer(this.state, evt);\n                },\n                complete: () => {\n                    resolve();\n                    // this must happen after resolve, to ensure stream.subscribe() has finished\n                    subscription.unsubscribe();\n                },\n                error: (err) => {\n                    reject(err);\n                    // the stream already closed on error, but unsubscribe to be safe\n                    subscription.unsubscribe();\n                },\n            });\n        });\n    }\n    // value returns current materialized state\n    value() {\n        return this.state;\n    }\n    // finished resolves on completed stream, rejects on stream error\n    async finished() {\n        return this.completed;\n    }\n}\nexports.Reducer = Reducer;\nfunction increment(sum, _) {\n    return sum + 1;\n}\n// countStream returns a reducer that contains current count\n// of events on the stream\nfunction countStream(stream) {\n    return new Reducer(stream, increment, 0);\n}\nexports.countStream = countStream;\nfunction append(list, evt) {\n    return [...list, evt];\n}\n// asArray maintains an array containing all events that have\n// occurred on the stream\nfunction asArray(stream) {\n    return new Reducer(stream, append, []);\n}\nexports.asArray = asArray;\nfunction last(_, event) {\n    return event;\n}\n// lastValue returns the last value read from the stream, or undefined if no values sent\nfunction lastValue(stream) {\n    return new Reducer(stream, last, undefined);\n}\nexports.lastValue = lastValue;\n//# sourceMappingURL=reducer.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvcmVkdWNlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxlQUFlLEdBQUcsbUJBQW1CLEdBQUcsZUFBZTtBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0cmVhbS9idWlsZC9yZWR1Y2VyLmpzPzk2OTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmxhc3RWYWx1ZSA9IGV4cG9ydHMuYXNBcnJheSA9IGV4cG9ydHMuY291bnRTdHJlYW0gPSBleHBvcnRzLlJlZHVjZXIgPSB2b2lkIDA7XG4vLyBSZWR1Y2VyIHRha2VzIGEgc3RyZWFtIG9mIGV2ZW50cyBUIGFuZCBhIFJlZHVjZXJGdW5jLCB0aGF0XG4vLyBtYXRlcmlhbGl6ZXMgYSBzdGF0ZSBvZiB0eXBlIFUuXG5jbGFzcyBSZWR1Y2VyIHtcbiAgICBjb25zdHJ1Y3RvcihzdHJlYW0sIHJlZHVjZXIsIGluaXRTdGF0ZSkge1xuICAgICAgICB0aGlzLnN0cmVhbSA9IHN0cmVhbTtcbiAgICAgICAgdGhpcy5yZWR1Y2VyID0gcmVkdWNlcjtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IGluaXRTdGF0ZTtcbiAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdWJzY3JpcHRpb24gPSB0aGlzLnN0cmVhbS5zdWJzY3JpYmUoe1xuICAgICAgICAgICAgICAgIG5leHQ6IChldnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IHRoaXMucmVkdWNlcih0aGlzLnN0YXRlLCBldnQpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIG11c3QgaGFwcGVuIGFmdGVyIHJlc29sdmUsIHRvIGVuc3VyZSBzdHJlYW0uc3Vic2NyaWJlKCkgaGFzIGZpbmlzaGVkXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZXJyb3I6IChlcnIpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgICAgICAgICAgICAgIC8vIHRoZSBzdHJlYW0gYWxyZWFkeSBjbG9zZWQgb24gZXJyb3IsIGJ1dCB1bnN1YnNjcmliZSB0byBiZSBzYWZlXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIHZhbHVlIHJldHVybnMgY3VycmVudCBtYXRlcmlhbGl6ZWQgc3RhdGVcbiAgICB2YWx1ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuc3RhdGU7XG4gICAgfVxuICAgIC8vIGZpbmlzaGVkIHJlc29sdmVzIG9uIGNvbXBsZXRlZCBzdHJlYW0sIHJlamVjdHMgb24gc3RyZWFtIGVycm9yXG4gICAgYXN5bmMgZmluaXNoZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmNvbXBsZXRlZDtcbiAgICB9XG59XG5leHBvcnRzLlJlZHVjZXIgPSBSZWR1Y2VyO1xuZnVuY3Rpb24gaW5jcmVtZW50KHN1bSwgXykge1xuICAgIHJldHVybiBzdW0gKyAxO1xufVxuLy8gY291bnRTdHJlYW0gcmV0dXJucyBhIHJlZHVjZXIgdGhhdCBjb250YWlucyBjdXJyZW50IGNvdW50XG4vLyBvZiBldmVudHMgb24gdGhlIHN0cmVhbVxuZnVuY3Rpb24gY291bnRTdHJlYW0oc3RyZWFtKSB7XG4gICAgcmV0dXJuIG5ldyBSZWR1Y2VyKHN0cmVhbSwgaW5jcmVtZW50LCAwKTtcbn1cbmV4cG9ydHMuY291bnRTdHJlYW0gPSBjb3VudFN0cmVhbTtcbmZ1bmN0aW9uIGFwcGVuZChsaXN0LCBldnQpIHtcbiAgICByZXR1cm4gWy4uLmxpc3QsIGV2dF07XG59XG4vLyBhc0FycmF5IG1haW50YWlucyBhbiBhcnJheSBjb250YWluaW5nIGFsbCBldmVudHMgdGhhdCBoYXZlXG4vLyBvY2N1cnJlZCBvbiB0aGUgc3RyZWFtXG5mdW5jdGlvbiBhc0FycmF5KHN0cmVhbSkge1xuICAgIHJldHVybiBuZXcgUmVkdWNlcihzdHJlYW0sIGFwcGVuZCwgW10pO1xufVxuZXhwb3J0cy5hc0FycmF5ID0gYXNBcnJheTtcbmZ1bmN0aW9uIGxhc3QoXywgZXZlbnQpIHtcbiAgICByZXR1cm4gZXZlbnQ7XG59XG4vLyBsYXN0VmFsdWUgcmV0dXJucyB0aGUgbGFzdCB2YWx1ZSByZWFkIGZyb20gdGhlIHN0cmVhbSwgb3IgdW5kZWZpbmVkIGlmIG5vIHZhbHVlcyBzZW50XG5mdW5jdGlvbiBsYXN0VmFsdWUoc3RyZWFtKSB7XG4gICAgcmV0dXJuIG5ldyBSZWR1Y2VyKHN0cmVhbSwgbGFzdCwgdW5kZWZpbmVkKTtcbn1cbmV4cG9ydHMubGFzdFZhbHVlID0gbGFzdFZhbHVlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVkdWNlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/reducer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/stream/build/valueandupdates.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/stream/build/valueandupdates.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ValueAndUpdates = void 0;\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\n/**\n * A read only wrapper around DefaultValueProducer that allows\n * to synchronously get the current value using the .value property\n * and listen to to updates by suscribing to the .updates stream\n */\nclass ValueAndUpdates {\n    get value() {\n        return this.producer.value;\n    }\n    constructor(producer) {\n        this.producer = producer;\n        this.updates = xstream_1.MemoryStream.createWithMemory(this.producer);\n    }\n    /**\n     * Resolves as soon as search value is found.\n     *\n     * @param search either a value or a function that must return true when found\n     * @returns the value of the update that caused the search match\n     */\n    async waitFor(search) {\n        const searchImplementation = typeof search === \"function\" ? search : (value) => value === search;\n        return new Promise((resolve, reject) => {\n            const subscription = this.updates.subscribe({\n                next: (newValue) => {\n                    if (searchImplementation(newValue)) {\n                        resolve(newValue);\n                        // MemoryStream.subscribe() calls next with the last value.\n                        // Make async to ensure the subscription exists\n                        setTimeout(() => subscription.unsubscribe(), 0);\n                    }\n                },\n                complete: () => {\n                    subscription.unsubscribe();\n                    reject(\"Update stream completed without expected value\");\n                },\n                error: (error) => {\n                    reject(error);\n                },\n            });\n        });\n    }\n}\nexports.ValueAndUpdates = ValueAndUpdates;\n//# sourceMappingURL=valueandupdates.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy9zdHJlYW0vYnVpbGQvdmFsdWVhbmR1cGRhdGVzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixrQkFBa0IsbUJBQU8sQ0FBQyxzREFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3N0cmVhbS9idWlsZC92YWx1ZWFuZHVwZGF0ZXMuanM/NDJhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVmFsdWVBbmRVcGRhdGVzID0gdm9pZCAwO1xuY29uc3QgeHN0cmVhbV8xID0gcmVxdWlyZShcInhzdHJlYW1cIik7XG4vKipcbiAqIEEgcmVhZCBvbmx5IHdyYXBwZXIgYXJvdW5kIERlZmF1bHRWYWx1ZVByb2R1Y2VyIHRoYXQgYWxsb3dzXG4gKiB0byBzeW5jaHJvbm91c2x5IGdldCB0aGUgY3VycmVudCB2YWx1ZSB1c2luZyB0aGUgLnZhbHVlIHByb3BlcnR5XG4gKiBhbmQgbGlzdGVuIHRvIHRvIHVwZGF0ZXMgYnkgc3VzY3JpYmluZyB0byB0aGUgLnVwZGF0ZXMgc3RyZWFtXG4gKi9cbmNsYXNzIFZhbHVlQW5kVXBkYXRlcyB7XG4gICAgZ2V0IHZhbHVlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5wcm9kdWNlci52YWx1ZTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvZHVjZXIpIHtcbiAgICAgICAgdGhpcy5wcm9kdWNlciA9IHByb2R1Y2VyO1xuICAgICAgICB0aGlzLnVwZGF0ZXMgPSB4c3RyZWFtXzEuTWVtb3J5U3RyZWFtLmNyZWF0ZVdpdGhNZW1vcnkodGhpcy5wcm9kdWNlcik7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlc29sdmVzIGFzIHNvb24gYXMgc2VhcmNoIHZhbHVlIGlzIGZvdW5kLlxuICAgICAqXG4gICAgICogQHBhcmFtIHNlYXJjaCBlaXRoZXIgYSB2YWx1ZSBvciBhIGZ1bmN0aW9uIHRoYXQgbXVzdCByZXR1cm4gdHJ1ZSB3aGVuIGZvdW5kXG4gICAgICogQHJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSB1cGRhdGUgdGhhdCBjYXVzZWQgdGhlIHNlYXJjaCBtYXRjaFxuICAgICAqL1xuICAgIGFzeW5jIHdhaXRGb3Ioc2VhcmNoKSB7XG4gICAgICAgIGNvbnN0IHNlYXJjaEltcGxlbWVudGF0aW9uID0gdHlwZW9mIHNlYXJjaCA9PT0gXCJmdW5jdGlvblwiID8gc2VhcmNoIDogKHZhbHVlKSA9PiB2YWx1ZSA9PT0gc2VhcmNoO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gdGhpcy51cGRhdGVzLnN1YnNjcmliZSh7XG4gICAgICAgICAgICAgICAgbmV4dDogKG5ld1ZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZWFyY2hJbXBsZW1lbnRhdGlvbihuZXdWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUobmV3VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gTWVtb3J5U3RyZWFtLnN1YnNjcmliZSgpIGNhbGxzIG5leHQgd2l0aCB0aGUgbGFzdCB2YWx1ZS5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIE1ha2UgYXN5bmMgdG8gZW5zdXJlIHRoZSBzdWJzY3JpcHRpb24gZXhpc3RzXG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpLCAwKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgY29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChcIlVwZGF0ZSBzdHJlYW0gY29tcGxldGVkIHdpdGhvdXQgZXhwZWN0ZWQgdmFsdWVcIik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvcjogKGVycm9yKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnJvcik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLlZhbHVlQW5kVXBkYXRlcyA9IFZhbHVlQW5kVXBkYXRlcztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXZhbHVlYW5kdXBkYXRlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/stream/build/valueandupdates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/addresses.js":
/*!****************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/addresses.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.pubkeyToAddress = exports.pubkeyToRawAddress = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nfunction rawEd25519PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 32) {\n        throw new Error(`Invalid Ed25519 pubkey length: ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.sha256)(pubkeyData).slice(0, 20);\n}\nexports.rawEd25519PubkeyToRawAddress = rawEd25519PubkeyToRawAddress;\nfunction rawSecp256k1PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 33) {\n        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);\n    }\n    return (0, crypto_1.ripemd160)((0, crypto_1.sha256)(pubkeyData));\n}\nexports.rawSecp256k1PubkeyToRawAddress = rawSecp256k1PubkeyToRawAddress;\n/**\n * Returns Tendermint address as bytes.\n *\n * This is for addresses that are derived by the Tendermint keypair (typically Ed25519).\n * Sometimes those addresses are bech32-encoded and contain the term \"cons\" in the presix\n * (\"cosmosvalcons1...\").\n *\n * For secp256k1 this assumes we already have a compressed pubkey, which is the default in Cosmos.\n */\nfunction pubkeyToRawAddress(type, data) {\n    switch (type) {\n        case \"ed25519\":\n            return rawEd25519PubkeyToRawAddress(data);\n        case \"secp256k1\":\n            return rawSecp256k1PubkeyToRawAddress(data);\n        default:\n            // Keep this case here to guard against new types being added but not handled\n            throw new Error(`Pubkey type ${type} not supported`);\n    }\n}\nexports.pubkeyToRawAddress = pubkeyToRawAddress;\n/**\n * Returns Tendermint address in uppercase hex format.\n *\n * This is for addresses that are derived by the Tendermint keypair (typically Ed25519).\n * Sometimes those addresses are bech32-encoded and contain the term \"cons\" in the presix\n * (\"cosmosvalcons1...\").\n *\n * For secp256k1 this assumes we already have a compressed pubkey, which is the default in Cosmos.\n */\nfunction pubkeyToAddress(type, data) {\n    return (0, encoding_1.toHex)(pubkeyToRawAddress(type, data)).toUpperCase();\n}\nexports.pubkeyToAddress = pubkeyToAddress;\n//# sourceMappingURL=addresses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9hZGRyZXNzZXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsMEJBQTBCLEdBQUcsc0NBQXNDLEdBQUcsb0NBQW9DO0FBQ3BJLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFnQjtBQUN6QyxtQkFBbUIsbUJBQU8sQ0FBQyw4RUFBa0I7QUFDN0M7QUFDQTtBQUNBLDBEQUEwRCxrQkFBa0I7QUFDNUU7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQSx5RUFBeUUsa0JBQWtCO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLE1BQU07QUFDakQ7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvYWRkcmVzc2VzLmpzPzI0MWQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnB1YmtleVRvQWRkcmVzcyA9IGV4cG9ydHMucHVia2V5VG9SYXdBZGRyZXNzID0gZXhwb3J0cy5yYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MgPSBleHBvcnRzLnJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MgPSB2b2lkIDA7XG5jb25zdCBjcnlwdG9fMSA9IHJlcXVpcmUoXCJAY29zbWpzL2NyeXB0b1wiKTtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbmZ1bmN0aW9uIHJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5RGF0YSkge1xuICAgIGlmIChwdWJrZXlEYXRhLmxlbmd0aCAhPT0gMzIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIEVkMjU1MTkgcHVia2V5IGxlbmd0aDogJHtwdWJrZXlEYXRhLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5zaGEyNTYpKHB1YmtleURhdGEpLnNsaWNlKDAsIDIwKTtcbn1cbmV4cG9ydHMucmF3RWQyNTUxOVB1YmtleVRvUmF3QWRkcmVzcyA9IHJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3M7XG5mdW5jdGlvbiByYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MocHVia2V5RGF0YSkge1xuICAgIGlmIChwdWJrZXlEYXRhLmxlbmd0aCAhPT0gMzMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIFNlY3AyNTZrMSBwdWJrZXkgbGVuZ3RoIChjb21wcmVzc2VkKTogJHtwdWJrZXlEYXRhLmxlbmd0aH1gKTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5yaXBlbWQxNjApKCgwLCBjcnlwdG9fMS5zaGEyNTYpKHB1YmtleURhdGEpKTtcbn1cbmV4cG9ydHMucmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzID0gcmF3U2VjcDI1NmsxUHVia2V5VG9SYXdBZGRyZXNzO1xuLyoqXG4gKiBSZXR1cm5zIFRlbmRlcm1pbnQgYWRkcmVzcyBhcyBieXRlcy5cbiAqXG4gKiBUaGlzIGlzIGZvciBhZGRyZXNzZXMgdGhhdCBhcmUgZGVyaXZlZCBieSB0aGUgVGVuZGVybWludCBrZXlwYWlyICh0eXBpY2FsbHkgRWQyNTUxOSkuXG4gKiBTb21ldGltZXMgdGhvc2UgYWRkcmVzc2VzIGFyZSBiZWNoMzItZW5jb2RlZCBhbmQgY29udGFpbiB0aGUgdGVybSBcImNvbnNcIiBpbiB0aGUgcHJlc2l4XG4gKiAoXCJjb3Ntb3N2YWxjb25zMS4uLlwiKS5cbiAqXG4gKiBGb3Igc2VjcDI1NmsxIHRoaXMgYXNzdW1lcyB3ZSBhbHJlYWR5IGhhdmUgYSBjb21wcmVzc2VkIHB1YmtleSwgd2hpY2ggaXMgdGhlIGRlZmF1bHQgaW4gQ29zbW9zLlxuICovXG5mdW5jdGlvbiBwdWJrZXlUb1Jhd0FkZHJlc3ModHlwZSwgZGF0YSkge1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwiZWQyNTUxOVwiOlxuICAgICAgICAgICAgcmV0dXJuIHJhd0VkMjU1MTlQdWJrZXlUb1Jhd0FkZHJlc3MoZGF0YSk7XG4gICAgICAgIGNhc2UgXCJzZWNwMjU2azFcIjpcbiAgICAgICAgICAgIHJldHVybiByYXdTZWNwMjU2azFQdWJrZXlUb1Jhd0FkZHJlc3MoZGF0YSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAvLyBLZWVwIHRoaXMgY2FzZSBoZXJlIHRvIGd1YXJkIGFnYWluc3QgbmV3IHR5cGVzIGJlaW5nIGFkZGVkIGJ1dCBub3QgaGFuZGxlZFxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQdWJrZXkgdHlwZSAke3R5cGV9IG5vdCBzdXBwb3J0ZWRgKTtcbiAgICB9XG59XG5leHBvcnRzLnB1YmtleVRvUmF3QWRkcmVzcyA9IHB1YmtleVRvUmF3QWRkcmVzcztcbi8qKlxuICogUmV0dXJucyBUZW5kZXJtaW50IGFkZHJlc3MgaW4gdXBwZXJjYXNlIGhleCBmb3JtYXQuXG4gKlxuICogVGhpcyBpcyBmb3IgYWRkcmVzc2VzIHRoYXQgYXJlIGRlcml2ZWQgYnkgdGhlIFRlbmRlcm1pbnQga2V5cGFpciAodHlwaWNhbGx5IEVkMjU1MTkpLlxuICogU29tZXRpbWVzIHRob3NlIGFkZHJlc3NlcyBhcmUgYmVjaDMyLWVuY29kZWQgYW5kIGNvbnRhaW4gdGhlIHRlcm0gXCJjb25zXCIgaW4gdGhlIHByZXNpeFxuICogKFwiY29zbW9zdmFsY29uczEuLi5cIikuXG4gKlxuICogRm9yIHNlY3AyNTZrMSB0aGlzIGFzc3VtZXMgd2UgYWxyZWFkeSBoYXZlIGEgY29tcHJlc3NlZCBwdWJrZXksIHdoaWNoIGlzIHRoZSBkZWZhdWx0IGluIENvc21vcy5cbiAqL1xuZnVuY3Rpb24gcHVia2V5VG9BZGRyZXNzKHR5cGUsIGRhdGEpIHtcbiAgICByZXR1cm4gKDAsIGVuY29kaW5nXzEudG9IZXgpKHB1YmtleVRvUmF3QWRkcmVzcyh0eXBlLCBkYXRhKSkudG9VcHBlckNhc2UoKTtcbn1cbmV4cG9ydHMucHVia2V5VG9BZGRyZXNzID0gcHVia2V5VG9BZGRyZXNzO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YWRkcmVzc2VzLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/addresses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/index.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/index.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Responses = exports.Params = void 0;\nvar requests_1 = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/requests.js\");\nObject.defineProperty(exports, \"Params\", ({ enumerable: true, get: function () { return requests_1.Params; } }));\nvar responses_1 = __webpack_require__(/*! ./responses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/responses.js\");\nObject.defineProperty(exports, \"Responses\", ({ enumerable: true, get: function () { return responses_1.Responses; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9jb21ldDM4L2FkYXB0b3IvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCLEdBQUcsY0FBYztBQUNsQyxpQkFBaUIsbUJBQU8sQ0FBQyxpR0FBWTtBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUcsa0JBQWtCLG1CQUFPLENBQUMsbUdBQWE7QUFDdkMsNkNBQTRDLEVBQUUscUNBQXFDLGlDQUFpQyxFQUFDO0FBQ3JIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL2NvbWV0MzgvYWRhcHRvci9pbmRleC5qcz8zODEyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5SZXNwb25zZXMgPSBleHBvcnRzLlBhcmFtcyA9IHZvaWQgMDtcbnZhciByZXF1ZXN0c18xID0gcmVxdWlyZShcIi4vcmVxdWVzdHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQYXJhbXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlcXVlc3RzXzEuUGFyYW1zOyB9IH0pO1xudmFyIHJlc3BvbnNlc18xID0gcmVxdWlyZShcIi4vcmVzcG9uc2VzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVzcG9uc2VzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZXNfMS5SZXNwb25zZXM7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/requests.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/requests.js ***!
  \*******************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Params = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst inthelpers_1 = __webpack_require__(/*! ../../inthelpers */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\");\nconst jsonrpc_1 = __webpack_require__(/*! ../../jsonrpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\");\nconst encodings_1 = __webpack_require__(/*! ../encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/encodings.js\");\nconst requests = __importStar(__webpack_require__(/*! ../requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/requests.js\"));\nfunction encodeHeightParam(param) {\n    return {\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height),\n    };\n}\nfunction encodeBlockchainRequestParams(param) {\n    return {\n        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),\n        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight),\n    };\n}\nfunction encodeBlockSearchParams(params) {\n    return {\n        query: params.query,\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n        order_by: params.order_by,\n    };\n}\nfunction encodeAbciQueryParams(params) {\n    return {\n        path: (0, encodings_1.assertNotEmpty)(params.path),\n        data: (0, encoding_1.toHex)(params.data),\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),\n        prove: params.prove,\n    };\n}\nfunction encodeBroadcastTxParams(params) {\n    return {\n        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx)),\n    };\n}\nfunction encodeTxParams(params) {\n    return {\n        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),\n        prove: params.prove,\n    };\n}\nfunction encodeTxSearchParams(params) {\n    return {\n        query: params.query,\n        prove: params.prove,\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n        order_by: params.order_by,\n    };\n}\nfunction encodeValidatorsParams(params) {\n    return {\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n    };\n}\nclass Params {\n    static encodeAbciInfo(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeAbciQuery(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));\n    }\n    static encodeBlock(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeBlockchain(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));\n    }\n    static encodeBlockResults(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeBlockSearch(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));\n    }\n    static encodeBroadcastTx(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));\n    }\n    static encodeCommit(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeGenesis(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeHealth(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeNumUnconfirmedTxs(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeStatus(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeSubscribe(req) {\n        const eventTag = { key: \"tm.event\", value: req.query.type };\n        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });\n        return (0, jsonrpc_1.createJsonRpcRequest)(\"subscribe\", { query: query });\n    }\n    static encodeTx(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));\n    }\n    // TODO: encode params for query string???\n    static encodeTxSearch(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));\n    }\n    static encodeValidators(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));\n    }\n}\nexports.Params = Params;\n//# sourceMappingURL=requests.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/responses.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/responses.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst dates_1 = __webpack_require__(/*! ../../dates */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/dates.js\");\nconst inthelpers_1 = __webpack_require__(/*! ../../inthelpers */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\");\nconst types_1 = __webpack_require__(/*! ../../types */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/types.js\");\nconst encodings_1 = __webpack_require__(/*! ../encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/encodings.js\");\nconst hasher_1 = __webpack_require__(/*! ../hasher */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/hasher.js\");\nfunction decodeAbciInfo(data) {\n    return {\n        data: data.data,\n        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),\n        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash),\n    };\n}\nfunction decodeQueryProof(data) {\n    return {\n        ops: data.ops.map((op) => ({\n            type: op.type,\n            key: (0, encoding_1.fromBase64)(op.key),\n            data: (0, encoding_1.fromBase64)(op.data),\n        })),\n    };\n}\nfunction decodeAbciQuery(data) {\n    return {\n        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? \"\")),\n        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? \"\")),\n        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),\n        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),\n        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),\n        codespace: (0, encodings_1.assertString)(data.codespace ?? \"\"),\n        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),\n        log: data.log,\n        info: (0, encodings_1.assertString)(data.info ?? \"\"),\n    };\n}\nfunction decodeEventAttribute(attribute) {\n    return {\n        key: (0, encodings_1.assertNotEmpty)(attribute.key),\n        value: attribute.value ?? \"\",\n    };\n}\nfunction decodeAttributes(attributes) {\n    return (0, encodings_1.assertArray)(attributes).map(decodeEventAttribute);\n}\nfunction decodeEvent(event) {\n    return {\n        type: event.type,\n        attributes: event.attributes ? decodeAttributes(event.attributes) : [],\n    };\n}\nexports.decodeEvent = decodeEvent;\nfunction decodeEvents(events) {\n    return (0, encodings_1.assertArray)(events).map(decodeEvent);\n}\nfunction decodeTxData(data) {\n    return {\n        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),\n        codespace: data.codespace,\n        log: data.log,\n        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),\n        events: data.events ? decodeEvents(data.events) : [],\n        gasWanted: (0, inthelpers_1.apiToBigInt)(data.gas_wanted ?? \"0\"),\n        gasUsed: (0, inthelpers_1.apiToBigInt)(data.gas_used ?? \"0\"),\n    };\n}\nfunction decodePubkey(data) {\n    if (\"Sum\" in data) {\n        // we don't need to check type because we're checking algorithm\n        const [[algorithm, value]] = Object.entries(data.Sum.value);\n        (0, utils_1.assert)(algorithm === \"ed25519\" || algorithm === \"secp256k1\", `unknown pubkey type: ${algorithm}`);\n        return {\n            algorithm,\n            data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value)),\n        };\n    }\n    else {\n        switch (data.type) {\n            // go-amino special code\n            case \"tendermint/PubKeyEd25519\":\n                return {\n                    algorithm: \"ed25519\",\n                    data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value)),\n                };\n            case \"tendermint/PubKeySecp256k1\":\n                return {\n                    algorithm: \"secp256k1\",\n                    data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value)),\n                };\n            default:\n                throw new Error(`unknown pubkey type: ${data.type}`);\n        }\n    }\n}\n/**\n * Note: we do not parse block.time_iota_ms for now because of this CHANGELOG entry\n *\n * > Add time_iota_ms to block's consensus parameters (not exposed to the application)\n * https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#v0310\n */\nfunction decodeBlockParams(data) {\n    return {\n        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),\n        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas)),\n    };\n}\nfunction decodeEvidenceParams(data) {\n    return {\n        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),\n        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration)),\n    };\n}\nfunction decodeConsensusParams(data) {\n    return {\n        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),\n        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence)),\n    };\n}\nfunction decodeValidatorUpdate(data) {\n    return {\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? \"0\"),\n    };\n}\nexports.decodeValidatorUpdate = decodeValidatorUpdate;\nfunction decodeBlockResults(data) {\n    return {\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        results: (data.txs_results || []).map(decodeTxData),\n        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),\n        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),\n        beginBlockEvents: decodeEvents(data.begin_block_events || []),\n        endBlockEvents: decodeEvents(data.end_block_events || []),\n    };\n}\nfunction decodeBlockId(data) {\n    return {\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        parts: {\n            total: (0, encodings_1.assertNotEmpty)(data.parts.total),\n            hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash)),\n        },\n    };\n}\nfunction decodeBlockVersion(data) {\n    return {\n        block: (0, inthelpers_1.apiToSmallInt)(data.block),\n        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0),\n    };\n}\nfunction decodeHeader(data) {\n    return {\n        version: decodeBlockVersion(data.version),\n        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),\n        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:\n        // { hash: '', parts: { total: 0, hash: '' } }\n        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,\n        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),\n        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),\n        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),\n        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),\n        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),\n        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),\n        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),\n        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),\n        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address)),\n    };\n}\nfunction decodeBlockMeta(data) {\n    return {\n        blockId: decodeBlockId(data.block_id),\n        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),\n        header: decodeHeader(data.header),\n        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs)),\n    };\n}\nfunction decodeBlockchain(data) {\n    return {\n        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),\n        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta),\n    };\n}\nfunction decodeBroadcastTxSync(data) {\n    return {\n        ...decodeTxData(data),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n    };\n}\nfunction decodeBroadcastTxCommit(data) {\n    const txResult = data.tx_result ? decodeTxData(data.tx_result) : undefined;\n    return {\n        height: (0, inthelpers_1.apiToSmallInt)(data.height),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),\n        deliverTx: txResult,\n        txResult: txResult,\n    };\n}\nfunction decodeBlockIdFlag(blockIdFlag) {\n    (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);\n    return blockIdFlag;\n}\nfunction decodeCommitSignature(data) {\n    return {\n        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),\n        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : undefined,\n        timestamp: data.timestamp ? (0, dates_1.fromRfc3339WithNanoseconds)(data.timestamp) : undefined,\n        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : undefined,\n    };\n}\nfunction decodeCommit(data) {\n    return {\n        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        round: (0, inthelpers_1.apiToSmallInt)(data.round),\n        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature),\n    };\n}\nfunction decodeCommitResponse(data) {\n    return {\n        canonical: (0, encodings_1.assertBoolean)(data.canonical),\n        header: decodeHeader(data.signed_header.header),\n        commit: decodeCommit(data.signed_header.commit),\n    };\n}\nfunction decodeValidatorGenesis(data) {\n    return {\n        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power)),\n    };\n}\nexports.decodeValidatorGenesis = decodeValidatorGenesis;\nfunction decodeGenesis(data) {\n    return {\n        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),\n        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),\n        consensusParams: decodeConsensusParams(data.consensus_params),\n        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],\n        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),\n        appState: data.app_state,\n    };\n}\nfunction decodeValidatorInfo(data) {\n    return {\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),\n        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),\n        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : undefined,\n    };\n}\nexports.decodeValidatorInfo = decodeValidatorInfo;\nfunction decodeNodeInfo(data) {\n    return {\n        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),\n        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),\n        network: (0, encodings_1.assertNotEmpty)(data.network),\n        version: (0, encodings_1.assertString)(data.version),\n        channels: (0, encodings_1.assertString)(data.channels),\n        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),\n        other: (0, encodings_1.dictionaryToStringMap)(data.other),\n        protocolVersion: {\n            app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),\n            block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),\n            p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p)),\n        },\n    };\n}\nfunction decodeSyncInfo(data) {\n    const earliestBlockHeight = data.earliest_block_height\n        ? (0, inthelpers_1.apiToSmallInt)(data.earliest_block_height)\n        : undefined;\n    const earliestBlockTime = data.earliest_block_time\n        ? (0, dates_1.fromRfc3339WithNanoseconds)(data.earliest_block_time)\n        : undefined;\n    return {\n        earliestAppHash: data.earliest_app_hash ? (0, encoding_1.fromHex)(data.earliest_app_hash) : undefined,\n        earliestBlockHash: data.earliest_block_hash ? (0, encoding_1.fromHex)(data.earliest_block_hash) : undefined,\n        earliestBlockHeight: earliestBlockHeight || undefined,\n        earliestBlockTime: earliestBlockTime?.getTime() ? earliestBlockTime : undefined,\n        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),\n        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),\n        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),\n        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),\n        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up),\n    };\n}\nfunction decodeStatus(data) {\n    return {\n        nodeInfo: decodeNodeInfo(data.node_info),\n        syncInfo: decodeSyncInfo(data.sync_info),\n        validatorInfo: decodeValidatorInfo(data.validator_info),\n    };\n}\nfunction decodeTxProof(data) {\n    return {\n        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),\n        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),\n        proof: {\n            total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),\n            index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),\n            leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),\n            aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64),\n        },\n    };\n}\nfunction decodeTxResponse(data) {\n    return {\n        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),\n        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        proof: (0, encodings_1.may)(decodeTxProof, data.proof),\n    };\n}\nfunction decodeTxSearch(data) {\n    return {\n        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),\n        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse),\n    };\n}\nfunction decodeTxEvent(data) {\n    const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));\n    return {\n        tx: tx,\n        hash: (0, hasher_1.hashTx)(tx),\n        result: decodeTxData(data.result),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n    };\n}\nfunction decodeValidators(data) {\n    return {\n        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),\n        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),\n        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),\n        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),\n    };\n}\nfunction decodeBlock(data) {\n    return {\n        header: decodeHeader((0, encodings_1.assertObject)(data.header)),\n        // For the block at height 1, last commit is not set. This is represented in an empty object like this:\n        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }\n        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,\n        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],\n        // Lift up .evidence.evidence to just .evidence\n        // See https://github.com/tendermint/tendermint/issues/7697\n        evidence: data.evidence?.evidence ?? [],\n    };\n}\nfunction decodeBlockResponse(data) {\n    return {\n        blockId: decodeBlockId(data.block_id),\n        block: decodeBlock(data.block),\n    };\n}\nfunction decodeBlockSearch(data) {\n    return {\n        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),\n        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse),\n    };\n}\nfunction decodeNumUnconfirmedTxs(data) {\n    return {\n        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),\n        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes)),\n    };\n}\nclass Responses {\n    static decodeAbciInfo(response) {\n        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));\n    }\n    static decodeAbciQuery(response) {\n        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));\n    }\n    static decodeBlock(response) {\n        return decodeBlockResponse(response.result);\n    }\n    static decodeBlockResults(response) {\n        return decodeBlockResults(response.result);\n    }\n    static decodeBlockSearch(response) {\n        return decodeBlockSearch(response.result);\n    }\n    static decodeBlockchain(response) {\n        return decodeBlockchain(response.result);\n    }\n    static decodeBroadcastTxSync(response) {\n        return decodeBroadcastTxSync(response.result);\n    }\n    static decodeBroadcastTxAsync(response) {\n        return Responses.decodeBroadcastTxSync(response);\n    }\n    static decodeBroadcastTxCommit(response) {\n        return decodeBroadcastTxCommit(response.result);\n    }\n    static decodeCommit(response) {\n        return decodeCommitResponse(response.result);\n    }\n    static decodeGenesis(response) {\n        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));\n    }\n    static decodeHealth() {\n        return null;\n    }\n    static decodeNumUnconfirmedTxs(response) {\n        return decodeNumUnconfirmedTxs(response.result);\n    }\n    static decodeStatus(response) {\n        return decodeStatus(response.result);\n    }\n    static decodeNewBlockEvent(event) {\n        return decodeBlock(event.data.value.block);\n    }\n    static decodeNewBlockHeaderEvent(event) {\n        return decodeHeader(event.data.value.header);\n    }\n    static decodeTxEvent(event) {\n        return decodeTxEvent(event.data.value.TxResult);\n    }\n    static decodeTx(response) {\n        return decodeTxResponse(response.result);\n    }\n    static decodeTxSearch(response) {\n        return decodeTxSearch(response.result);\n    }\n    static decodeValidators(response) {\n        return decodeValidators(response.result);\n    }\n}\nexports.Responses = Responses;\n//# sourceMappingURL=responses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/responses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/comet38client.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/comet38client.js ***!
  \****************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Comet38Client = void 0;\nconst jsonrpc_1 = __webpack_require__(/*! ../jsonrpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\");\nconst rpcclients_1 = __webpack_require__(/*! ../rpcclients */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js\");\nconst adaptor_1 = __webpack_require__(/*! ./adaptor */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/adaptor/index.js\");\nconst requests = __importStar(__webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/requests.js\"));\nclass Comet38Client {\n    /**\n     * Creates a new Tendermint client for the given endpoint.\n     *\n     * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n     */\n    static async connect(endpoint) {\n        let rpcClient;\n        if (typeof endpoint === \"object\") {\n            rpcClient = new rpcclients_1.HttpClient(endpoint);\n        }\n        else {\n            const useHttp = endpoint.startsWith(\"http://\") || endpoint.startsWith(\"https://\");\n            rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);\n        }\n        // For some very strange reason I don't understand, tests start to fail on some systems\n        // (our CI) when skipping the status call before doing other queries. Sleeping a little\n        // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n        // even in cases where we don't use the result.\n        const _version = await this.detectVersion(rpcClient);\n        return Comet38Client.create(rpcClient);\n    }\n    /**\n     * Creates a new Tendermint client given an RPC client.\n     */\n    static async create(rpcClient) {\n        return new Comet38Client(rpcClient);\n    }\n    static async detectVersion(client) {\n        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);\n        const response = await client.execute(req);\n        const result = response.result;\n        if (!result || !result.node_info) {\n            throw new Error(\"Unrecognized format for status response\");\n        }\n        const version = result.node_info.version;\n        if (typeof version !== \"string\") {\n            throw new Error(\"Unrecognized version format: must be string\");\n        }\n        return version;\n    }\n    /**\n     * Use `Tendermint37Client.connect` or `Tendermint37Client.create` to create an instance.\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    disconnect() {\n        this.client.disconnect();\n    }\n    async abciInfo() {\n        const query = { method: requests.Method.AbciInfo };\n        return this.doCall(query, adaptor_1.Params.encodeAbciInfo, adaptor_1.Responses.decodeAbciInfo);\n    }\n    async abciQuery(params) {\n        const query = { params: params, method: requests.Method.AbciQuery };\n        return this.doCall(query, adaptor_1.Params.encodeAbciQuery, adaptor_1.Responses.decodeAbciQuery);\n    }\n    async block(height) {\n        const query = { method: requests.Method.Block, params: { height: height } };\n        return this.doCall(query, adaptor_1.Params.encodeBlock, adaptor_1.Responses.decodeBlock);\n    }\n    async blockResults(height) {\n        const query = {\n            method: requests.Method.BlockResults,\n            params: { height: height },\n        };\n        return this.doCall(query, adaptor_1.Params.encodeBlockResults, adaptor_1.Responses.decodeBlockResults);\n    }\n    /**\n     * Search for events that are in a block.\n     *\n     * NOTE\n     * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n     */\n    async blockSearch(params) {\n        const query = { params: params, method: requests.Method.BlockSearch };\n        const resp = await this.doCall(query, adaptor_1.Params.encodeBlockSearch, adaptor_1.Responses.decodeBlockSearch);\n        return {\n            ...resp,\n            // make sure we sort by height, as tendermint may be sorting by string value of the height\n            blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height),\n        };\n    }\n    // this should paginate through all blockSearch options to ensure it returns all results.\n    // starts with page 1 or whatever was provided (eg. to start on page 7)\n    //\n    // NOTE\n    // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n    async blockSearchAll(params) {\n        let page = params.page || 1;\n        const blocks = [];\n        let done = false;\n        while (!done) {\n            const resp = await this.blockSearch({ ...params, page: page });\n            blocks.push(...resp.blocks);\n            if (blocks.length < resp.totalCount) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        // make sure we sort by height, as tendermint may be sorting by string value of the height\n        // and the earlier items may be in a higher page than the later items\n        blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n        return {\n            totalCount: blocks.length,\n            blocks: blocks,\n        };\n    }\n    /**\n     * Queries block headers filtered by minHeight <= height <= maxHeight.\n     *\n     * @param minHeight The minimum height to be included in the result. Defaults to 0.\n     * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n     */\n    async blockchain(minHeight, maxHeight) {\n        const query = {\n            method: requests.Method.Blockchain,\n            params: {\n                minHeight: minHeight,\n                maxHeight: maxHeight,\n            },\n        };\n        return this.doCall(query, adaptor_1.Params.encodeBlockchain, adaptor_1.Responses.decodeBlockchain);\n    }\n    /**\n     * Broadcast transaction to mempool and wait for response\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n     */\n    async broadcastTxSync(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxSync };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxSync);\n    }\n    /**\n     * Broadcast transaction to mempool and do not wait for result\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n     */\n    async broadcastTxAsync(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxAsync };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxAsync);\n    }\n    /**\n     * Broadcast transaction to mempool and wait for block\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n     */\n    async broadcastTxCommit(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxCommit };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxCommit);\n    }\n    async commit(height) {\n        const query = { method: requests.Method.Commit, params: { height: height } };\n        return this.doCall(query, adaptor_1.Params.encodeCommit, adaptor_1.Responses.decodeCommit);\n    }\n    async genesis() {\n        const query = { method: requests.Method.Genesis };\n        return this.doCall(query, adaptor_1.Params.encodeGenesis, adaptor_1.Responses.decodeGenesis);\n    }\n    async health() {\n        const query = { method: requests.Method.Health };\n        return this.doCall(query, adaptor_1.Params.encodeHealth, adaptor_1.Responses.decodeHealth);\n    }\n    async numUnconfirmedTxs() {\n        const query = { method: requests.Method.NumUnconfirmedTxs };\n        return this.doCall(query, adaptor_1.Params.encodeNumUnconfirmedTxs, adaptor_1.Responses.decodeNumUnconfirmedTxs);\n    }\n    async status() {\n        const query = { method: requests.Method.Status };\n        return this.doCall(query, adaptor_1.Params.encodeStatus, adaptor_1.Responses.decodeStatus);\n    }\n    subscribeNewBlock() {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: { type: requests.SubscriptionEventType.NewBlock },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeNewBlockEvent);\n    }\n    subscribeNewBlockHeader() {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: { type: requests.SubscriptionEventType.NewBlockHeader },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeNewBlockHeaderEvent);\n    }\n    subscribeTx(query) {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: {\n                type: requests.SubscriptionEventType.Tx,\n                raw: query,\n            },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeTxEvent);\n    }\n    /**\n     * Get a single transaction by hash\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n     */\n    async tx(params) {\n        const query = { params: params, method: requests.Method.Tx };\n        return this.doCall(query, adaptor_1.Params.encodeTx, adaptor_1.Responses.decodeTx);\n    }\n    /**\n     * Search for transactions that are in a block\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n     */\n    async txSearch(params) {\n        const query = { params: params, method: requests.Method.TxSearch };\n        return this.doCall(query, adaptor_1.Params.encodeTxSearch, adaptor_1.Responses.decodeTxSearch);\n    }\n    // this should paginate through all txSearch options to ensure it returns all results.\n    // starts with page 1 or whatever was provided (eg. to start on page 7)\n    async txSearchAll(params) {\n        let page = params.page || 1;\n        const txs = [];\n        let done = false;\n        while (!done) {\n            const resp = await this.txSearch({ ...params, page: page });\n            txs.push(...resp.txs);\n            if (txs.length < resp.totalCount) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        return {\n            totalCount: txs.length,\n            txs: txs,\n        };\n    }\n    async validators(params) {\n        const query = {\n            method: requests.Method.Validators,\n            params: params,\n        };\n        return this.doCall(query, adaptor_1.Params.encodeValidators, adaptor_1.Responses.decodeValidators);\n    }\n    async validatorsAll(height) {\n        const validators = [];\n        let page = 1;\n        let done = false;\n        let blockHeight = height;\n        while (!done) {\n            const response = await this.validators({\n                per_page: 50,\n                height: blockHeight,\n                page: page,\n            });\n            validators.push(...response.validators);\n            blockHeight = blockHeight || response.blockHeight;\n            if (validators.length < response.total) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        return {\n            // NOTE: Default value is for type safety but this should always be set\n            blockHeight: blockHeight ?? 0,\n            count: validators.length,\n            total: validators.length,\n            validators: validators,\n        };\n    }\n    // doCall is a helper to handle the encode/call/decode logic\n    async doCall(request, encode, decode) {\n        const req = encode(request);\n        const result = await this.client.execute(req);\n        return decode(result);\n    }\n    subscribe(request, decode) {\n        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {\n            throw new Error(\"This RPC client type cannot subscribe to events\");\n        }\n        const req = adaptor_1.Params.encodeSubscribe(request);\n        const eventStream = this.client.listen(req);\n        return eventStream.map((event) => {\n            return decode(event);\n        });\n    }\n}\nexports.Comet38Client = Comet38Client;\n//# sourceMappingURL=comet38client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/comet38client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/encodings.js":
/*!************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/encodings.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A runtime checker that ensures a given value is set (i.e. not undefined or null)\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n */\nfunction assertSet(value) {\n    if (value === undefined) {\n        throw new Error(\"Value must not be undefined\");\n    }\n    if (value === null) {\n        throw new Error(\"Value must not be null\");\n    }\n    return value;\n}\nexports.assertSet = assertSet;\n/**\n * A runtime checker that ensures a given value is a boolean\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertBoolean(value) {\n    assertSet(value);\n    if (typeof value !== \"boolean\") {\n        throw new Error(\"Value must be a boolean\");\n    }\n    return value;\n}\nexports.assertBoolean = assertBoolean;\n/**\n * A runtime checker that ensures a given value is a string.\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertString(value) {\n    assertSet(value);\n    if (typeof value !== \"string\") {\n        throw new Error(\"Value must be a string\");\n    }\n    return value;\n}\nexports.assertString = assertString;\n/**\n * A runtime checker that ensures a given value is a number\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertNumber(value) {\n    assertSet(value);\n    if (typeof value !== \"number\") {\n        throw new Error(\"Value must be a number\");\n    }\n    return value;\n}\nexports.assertNumber = assertNumber;\n/**\n * A runtime checker that ensures a given value is an array\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertArray(value) {\n    assertSet(value);\n    if (!Array.isArray(value)) {\n        throw new Error(\"Value must be a an array\");\n    }\n    return value;\n}\nexports.assertArray = assertArray;\n/**\n * A runtime checker that ensures a given value is an object in the sense of JSON\n * (an unordered collection of key–value pairs where the keys are strings)\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertObject(value) {\n    assertSet(value);\n    if (typeof value !== \"object\") {\n        throw new Error(\"Value must be an object\");\n    }\n    // Exclude special kind of objects like Array, Date or Uint8Array\n    // Object.prototype.toString() returns a specified value:\n    // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring\n    if (Object.prototype.toString.call(value) !== \"[object Object]\") {\n        throw new Error(\"Value must be a simple object\");\n    }\n    return value;\n}\nexports.assertObject = assertObject;\n/**\n * Throws an error if value matches the empty value for the\n * given type (array/string of length 0, number of value 0, ...)\n *\n * Otherwise returns the value.\n *\n * This implies assertSet\n */\nfunction assertNotEmpty(value) {\n    assertSet(value);\n    if (typeof value === \"number\" && value === 0) {\n        throw new Error(\"must provide a non-zero value\");\n    }\n    else if (value.length === 0) {\n        throw new Error(\"must provide a non-empty value\");\n    }\n    return value;\n}\nexports.assertNotEmpty = assertNotEmpty;\n// may will run the transform if value is defined, otherwise returns undefined\nfunction may(transform, value) {\n    return value === undefined || value === null ? undefined : transform(value);\n}\nexports.may = may;\nfunction dictionaryToStringMap(obj) {\n    const out = new Map();\n    for (const key of Object.keys(obj)) {\n        const value = obj[key];\n        if (typeof value !== \"string\") {\n            throw new Error(\"Found dictionary value of type other than string\");\n        }\n        out.set(key, value);\n    }\n    return out;\n}\nexports.dictionaryToStringMap = dictionaryToStringMap;\n// Encodings needed for hashing block headers\n// Several of these functions are inspired by https://github.com/nomic-io/js-tendermint/blob/tendermint-0.30/src/\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L193-L195\nfunction encodeString(s) {\n    const utf8 = (0, encoding_1.toUtf8)(s);\n    return Uint8Array.from([utf8.length, ...utf8]);\n}\nexports.encodeString = encodeString;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L79-L87\nfunction encodeUvarint(n) {\n    return n >= 0x80\n        ? // eslint-disable-next-line no-bitwise\n            Uint8Array.from([(n & 0xff) | 0x80, ...encodeUvarint(n >> 7)])\n        : // eslint-disable-next-line no-bitwise\n            Uint8Array.from([n & 0xff]);\n}\nexports.encodeUvarint = encodeUvarint;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L134-L178\nfunction encodeTime(time) {\n    const milliseconds = time.getTime();\n    const seconds = Math.floor(milliseconds / 1000);\n    const secondsArray = seconds ? [0x08, ...encodeUvarint(seconds)] : new Uint8Array();\n    const nanoseconds = (time.nanoseconds || 0) + (milliseconds % 1000) * 1e6;\n    const nanosecondsArray = nanoseconds ? [0x10, ...encodeUvarint(nanoseconds)] : new Uint8Array();\n    return Uint8Array.from([...secondsArray, ...nanosecondsArray]);\n}\nexports.encodeTime = encodeTime;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L180-L187\nfunction encodeBytes(bytes) {\n    // Since we're only dealing with short byte arrays we don't need a full VarBuffer implementation yet\n    if (bytes.length >= 0x80)\n        throw new Error(\"Not implemented for byte arrays of length 128 or more\");\n    return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();\n}\nexports.encodeBytes = encodeBytes;\nfunction encodeVersion(version) {\n    const blockArray = version.block\n        ? Uint8Array.from([0x08, ...encodeUvarint(version.block)])\n        : new Uint8Array();\n    const appArray = version.app ? Uint8Array.from([0x10, ...encodeUvarint(version.app)]) : new Uint8Array();\n    return Uint8Array.from([...blockArray, ...appArray]);\n}\nexports.encodeVersion = encodeVersion;\nfunction encodeBlockId(blockId) {\n    return Uint8Array.from([\n        0x0a,\n        blockId.hash.length,\n        ...blockId.hash,\n        0x12,\n        blockId.parts.hash.length + 4,\n        0x08,\n        blockId.parts.total,\n        0x12,\n        blockId.parts.hash.length,\n        ...blockId.parts.hash,\n    ]);\n}\nexports.encodeBlockId = encodeBlockId;\n//# sourceMappingURL=encodings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/encodings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/hasher.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/hasher.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashBlock = exports.hashTx = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encodings_1 = __webpack_require__(/*! ./encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/encodings.js\");\n// hash is sha256\n// https://github.com/tendermint/tendermint/blob/master/UPGRADING.md#v0260\nfunction hashTx(tx) {\n    return (0, crypto_1.sha256)(tx);\n}\nexports.hashTx = hashTx;\nfunction getSplitPoint(n) {\n    if (n < 1)\n        throw new Error(\"Cannot split an empty tree\");\n    const largestPowerOf2 = 2 ** Math.floor(Math.log2(n));\n    return largestPowerOf2 < n ? largestPowerOf2 : largestPowerOf2 / 2;\n}\nfunction hashLeaf(leaf) {\n    const hash = new crypto_1.Sha256(Uint8Array.from([0]));\n    hash.update(leaf);\n    return hash.digest();\n}\nfunction hashInner(left, right) {\n    const hash = new crypto_1.Sha256(Uint8Array.from([1]));\n    hash.update(left);\n    hash.update(right);\n    return hash.digest();\n}\n// See https://github.com/tendermint/tendermint/blob/v0.31.8/docs/spec/blockchain/encoding.md#merkleroot\n// Note: the hashes input may not actually be hashes, especially before a recursive call\nfunction hashTree(hashes) {\n    switch (hashes.length) {\n        case 0:\n            throw new Error(\"Cannot hash empty tree\");\n        case 1:\n            return hashLeaf(hashes[0]);\n        default: {\n            const slicePoint = getSplitPoint(hashes.length);\n            const left = hashTree(hashes.slice(0, slicePoint));\n            const right = hashTree(hashes.slice(slicePoint));\n            return hashInner(left, right);\n        }\n    }\n}\nfunction hashBlock(header) {\n    if (!header.lastBlockId) {\n        throw new Error(\"Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.\");\n    }\n    const encodedFields = [\n        (0, encodings_1.encodeVersion)(header.version),\n        (0, encodings_1.encodeString)(header.chainId),\n        (0, encodings_1.encodeUvarint)(header.height),\n        (0, encodings_1.encodeTime)(header.time),\n        (0, encodings_1.encodeBlockId)(header.lastBlockId),\n        (0, encodings_1.encodeBytes)(header.lastCommitHash),\n        (0, encodings_1.encodeBytes)(header.dataHash),\n        (0, encodings_1.encodeBytes)(header.validatorsHash),\n        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),\n        (0, encodings_1.encodeBytes)(header.consensusHash),\n        (0, encodings_1.encodeBytes)(header.appHash),\n        (0, encodings_1.encodeBytes)(header.lastResultsHash),\n        (0, encodings_1.encodeBytes)(header.evidenceHash),\n        (0, encodings_1.encodeBytes)(header.proposerAddress),\n    ];\n    return hashTree(encodedFields);\n}\nexports.hashBlock = hashBlock;\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9jb21ldDM4L2hhc2hlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxjQUFjO0FBQ2xDLGlCQUFpQixtQkFBTyxDQUFDLDBFQUFnQjtBQUN6QyxvQkFBb0IsbUJBQU8sQ0FBQywyRkFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL2NvbWV0MzgvaGFzaGVyLmpzP2RiOGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc2hCbG9jayA9IGV4cG9ydHMuaGFzaFR4ID0gdm9pZCAwO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiQGNvc21qcy9jcnlwdG9cIik7XG5jb25zdCBlbmNvZGluZ3NfMSA9IHJlcXVpcmUoXCIuL2VuY29kaW5nc1wiKTtcbi8vIGhhc2ggaXMgc2hhMjU2XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvbWFzdGVyL1VQR1JBRElORy5tZCN2MDI2MFxuZnVuY3Rpb24gaGFzaFR4KHR4KSB7XG4gICAgcmV0dXJuICgwLCBjcnlwdG9fMS5zaGEyNTYpKHR4KTtcbn1cbmV4cG9ydHMuaGFzaFR4ID0gaGFzaFR4O1xuZnVuY3Rpb24gZ2V0U3BsaXRQb2ludChuKSB7XG4gICAgaWYgKG4gPCAxKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3Qgc3BsaXQgYW4gZW1wdHkgdHJlZVwiKTtcbiAgICBjb25zdCBsYXJnZXN0UG93ZXJPZjIgPSAyICoqIE1hdGguZmxvb3IoTWF0aC5sb2cyKG4pKTtcbiAgICByZXR1cm4gbGFyZ2VzdFBvd2VyT2YyIDwgbiA/IGxhcmdlc3RQb3dlck9mMiA6IGxhcmdlc3RQb3dlck9mMiAvIDI7XG59XG5mdW5jdGlvbiBoYXNoTGVhZihsZWFmKSB7XG4gICAgY29uc3QgaGFzaCA9IG5ldyBjcnlwdG9fMS5TaGEyNTYoVWludDhBcnJheS5mcm9tKFswXSkpO1xuICAgIGhhc2gudXBkYXRlKGxlYWYpO1xuICAgIHJldHVybiBoYXNoLmRpZ2VzdCgpO1xufVxuZnVuY3Rpb24gaGFzaElubmVyKGxlZnQsIHJpZ2h0KSB7XG4gICAgY29uc3QgaGFzaCA9IG5ldyBjcnlwdG9fMS5TaGEyNTYoVWludDhBcnJheS5mcm9tKFsxXSkpO1xuICAgIGhhc2gudXBkYXRlKGxlZnQpO1xuICAgIGhhc2gudXBkYXRlKHJpZ2h0KTtcbiAgICByZXR1cm4gaGFzaC5kaWdlc3QoKTtcbn1cbi8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvdjAuMzEuOC9kb2NzL3NwZWMvYmxvY2tjaGFpbi9lbmNvZGluZy5tZCNtZXJrbGVyb290XG4vLyBOb3RlOiB0aGUgaGFzaGVzIGlucHV0IG1heSBub3QgYWN0dWFsbHkgYmUgaGFzaGVzLCBlc3BlY2lhbGx5IGJlZm9yZSBhIHJlY3Vyc2l2ZSBjYWxsXG5mdW5jdGlvbiBoYXNoVHJlZShoYXNoZXMpIHtcbiAgICBzd2l0Y2ggKGhhc2hlcy5sZW5ndGgpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGhhc2ggZW1wdHkgdHJlZVwiKTtcbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgcmV0dXJuIGhhc2hMZWFmKGhhc2hlc1swXSk7XG4gICAgICAgIGRlZmF1bHQ6IHtcbiAgICAgICAgICAgIGNvbnN0IHNsaWNlUG9pbnQgPSBnZXRTcGxpdFBvaW50KGhhc2hlcy5sZW5ndGgpO1xuICAgICAgICAgICAgY29uc3QgbGVmdCA9IGhhc2hUcmVlKGhhc2hlcy5zbGljZSgwLCBzbGljZVBvaW50KSk7XG4gICAgICAgICAgICBjb25zdCByaWdodCA9IGhhc2hUcmVlKGhhc2hlcy5zbGljZShzbGljZVBvaW50KSk7XG4gICAgICAgICAgICByZXR1cm4gaGFzaElubmVyKGxlZnQsIHJpZ2h0KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uIGhhc2hCbG9jayhoZWFkZXIpIHtcbiAgICBpZiAoIWhlYWRlci5sYXN0QmxvY2tJZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJIYXNoaW5nIGEgYmxvY2sgaGVhZGVyIHdpdGggbm8gbGFzdCBibG9jayBJRCAoaS5lLiBoZWFkZXIgYXQgaGVpZ2h0IDEpIGlzIG5vdCBzdXBwb3J0ZWQuIElmIHlvdSBuZWVkIHRoaXMsIGNvbnRyaWJ1dGlvbnMgYXJlIHdlbGNvbWUuIFBsZWFzZSBhZGQgZG9jdW1lbnRhdGlvbiBhbmQgdGVzdCB2ZWN0b3JzIGZvciB0aGlzIGNhc2UuXCIpO1xuICAgIH1cbiAgICBjb25zdCBlbmNvZGVkRmllbGRzID0gW1xuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlVmVyc2lvbikoaGVhZGVyLnZlcnNpb24pLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlU3RyaW5nKShoZWFkZXIuY2hhaW5JZCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVVdmFyaW50KShoZWFkZXIuaGVpZ2h0KSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZVRpbWUpKGhlYWRlci50aW1lKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJsb2NrSWQpKGhlYWRlci5sYXN0QmxvY2tJZCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmxhc3RDb21taXRIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIuZGF0YUhhc2gpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci52YWxpZGF0b3JzSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLm5leHRWYWxpZGF0b3JzSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmNvbnNlbnN1c0hhc2gpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5hcHBIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIubGFzdFJlc3VsdHNIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIuZXZpZGVuY2VIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIucHJvcG9zZXJBZGRyZXNzKSxcbiAgICBdO1xuICAgIHJldHVybiBoYXNoVHJlZShlbmNvZGVkRmllbGRzKTtcbn1cbmV4cG9ydHMuaGFzaEJsb2NrID0gaGFzaEJsb2NrO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aGFzaGVyLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Note: all exports in this module are publicly available via\n// `import { comet38 } from \"@cosmjs/tendermint-rpc\"`\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = exports.Comet38Client = void 0;\nvar comet38client_1 = __webpack_require__(/*! ./comet38client */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/comet38client.js\");\nObject.defineProperty(exports, \"Comet38Client\", ({ enumerable: true, get: function () { return comet38client_1.Comet38Client; } }));\nvar requests_1 = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/requests.js\");\nObject.defineProperty(exports, \"Method\", ({ enumerable: true, get: function () { return requests_1.Method; } }));\nObject.defineProperty(exports, \"SubscriptionEventType\", ({ enumerable: true, get: function () { return requests_1.SubscriptionEventType; } }));\nvar responses_1 = __webpack_require__(/*! ./responses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/responses.js\");\nObject.defineProperty(exports, \"broadcastTxCommitSuccess\", ({ enumerable: true, get: function () { return responses_1.broadcastTxCommitSuccess; } }));\nObject.defineProperty(exports, \"broadcastTxSyncSuccess\", ({ enumerable: true, get: function () { return responses_1.broadcastTxSyncSuccess; } }));\nObject.defineProperty(exports, \"VoteType\", ({ enumerable: true, get: function () { return responses_1.VoteType; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9jb21ldDM4L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSxhQUFhLFVBQVU7QUFDdkIsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLDhCQUE4QixHQUFHLGdDQUFnQyxHQUFHLDZCQUE2QixHQUFHLGNBQWMsR0FBRyxxQkFBcUI7QUFDN0osc0JBQXNCLG1CQUFPLENBQUMsbUdBQWlCO0FBQy9DLGlEQUFnRCxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUNqSSxpQkFBaUIsbUJBQU8sQ0FBQyx5RkFBWTtBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUcseURBQXdELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQzVJLGtCQUFrQixtQkFBTyxDQUFDLDJGQUFhO0FBQ3ZDLDREQUEyRCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNuSiwwREFBeUQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDL0ksNENBQTJDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ25IIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL2NvbWV0MzgvaW5kZXguanM/Y2YzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIE5vdGU6IGFsbCBleHBvcnRzIGluIHRoaXMgbW9kdWxlIGFyZSBwdWJsaWNseSBhdmFpbGFibGUgdmlhXG4vLyBgaW1wb3J0IHsgY29tZXQzOCB9IGZyb20gXCJAY29zbWpzL3RlbmRlcm1pbnQtcnBjXCJgXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZvdGVUeXBlID0gZXhwb3J0cy5icm9hZGNhc3RUeFN5bmNTdWNjZXNzID0gZXhwb3J0cy5icm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3MgPSBleHBvcnRzLlN1YnNjcmlwdGlvbkV2ZW50VHlwZSA9IGV4cG9ydHMuTWV0aG9kID0gZXhwb3J0cy5Db21ldDM4Q2xpZW50ID0gdm9pZCAwO1xudmFyIGNvbWV0MzhjbGllbnRfMSA9IHJlcXVpcmUoXCIuL2NvbWV0MzhjbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb21ldDM4Q2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBjb21ldDM4Y2xpZW50XzEuQ29tZXQzOENsaWVudDsgfSB9KTtcbnZhciByZXF1ZXN0c18xID0gcmVxdWlyZShcIi4vcmVxdWVzdHNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJNZXRob2RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlcXVlc3RzXzEuTWV0aG9kOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiU3Vic2NyaXB0aW9uRXZlbnRUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXF1ZXN0c18xLlN1YnNjcmlwdGlvbkV2ZW50VHlwZTsgfSB9KTtcbnZhciByZXNwb25zZXNfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImJyb2FkY2FzdFR4Q29tbWl0U3VjY2Vzc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzcG9uc2VzXzEuYnJvYWRjYXN0VHhDb21taXRTdWNjZXNzOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYnJvYWRjYXN0VHhTeW5jU3VjY2Vzc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzcG9uc2VzXzEuYnJvYWRjYXN0VHhTeW5jU3VjY2VzczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlZvdGVUeXBlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXNwb25zZXNfMS5Wb3RlVHlwZTsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/requests.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/requests.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* eslint-disable @typescript-eslint/naming-convention */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;\n/**\n * RPC methods as documented in https://docs.tendermint.com/master/rpc/\n *\n * Enum raw value must match the spelling in the \"shell\" example call (snake_case)\n */\nvar Method;\n(function (Method) {\n    Method[\"AbciInfo\"] = \"abci_info\";\n    Method[\"AbciQuery\"] = \"abci_query\";\n    Method[\"Block\"] = \"block\";\n    /** Get block headers for minHeight <= height <= maxHeight. */\n    Method[\"Blockchain\"] = \"blockchain\";\n    Method[\"BlockResults\"] = \"block_results\";\n    Method[\"BlockSearch\"] = \"block_search\";\n    Method[\"BroadcastTxAsync\"] = \"broadcast_tx_async\";\n    Method[\"BroadcastTxSync\"] = \"broadcast_tx_sync\";\n    Method[\"BroadcastTxCommit\"] = \"broadcast_tx_commit\";\n    Method[\"Commit\"] = \"commit\";\n    Method[\"Genesis\"] = \"genesis\";\n    Method[\"Health\"] = \"health\";\n    Method[\"NumUnconfirmedTxs\"] = \"num_unconfirmed_txs\";\n    Method[\"Status\"] = \"status\";\n    Method[\"Subscribe\"] = \"subscribe\";\n    Method[\"Tx\"] = \"tx\";\n    Method[\"TxSearch\"] = \"tx_search\";\n    Method[\"Validators\"] = \"validators\";\n    Method[\"Unsubscribe\"] = \"unsubscribe\";\n})(Method = exports.Method || (exports.Method = {}));\n/**\n * Raw values must match the tendermint event name\n *\n * @see https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n */\nvar SubscriptionEventType;\n(function (SubscriptionEventType) {\n    SubscriptionEventType[\"NewBlock\"] = \"NewBlock\";\n    SubscriptionEventType[\"NewBlockHeader\"] = \"NewBlockHeader\";\n    SubscriptionEventType[\"Tx\"] = \"Tx\";\n})(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));\nfunction buildQuery(components) {\n    const tags = components.tags ? components.tags : [];\n    const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);\n    const rawComponents = components.raw ? [components.raw] : [];\n    return [...tagComponents, ...rawComponents].join(\" AND \");\n}\nexports.buildQuery = buildQuery;\n//# sourceMappingURL=requests.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9jb21ldDM4L3JlcXVlc3RzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCLEdBQUcsNkJBQTZCLEdBQUcsY0FBYztBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QixjQUFjLEtBQUs7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDREQUE0RCw2QkFBNkIsS0FBSztBQUMvRjtBQUNBO0FBQ0EsK0NBQStDLFFBQVEsSUFBSSxVQUFVO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9jb21ldDM4L3JlcXVlc3RzLmpzPzI1YTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vKiBlc2xpbnQtZGlzYWJsZSBAdHlwZXNjcmlwdC1lc2xpbnQvbmFtaW5nLWNvbnZlbnRpb24gKi9cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGRRdWVyeSA9IGV4cG9ydHMuU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0gZXhwb3J0cy5NZXRob2QgPSB2b2lkIDA7XG4vKipcbiAqIFJQQyBtZXRob2RzIGFzIGRvY3VtZW50ZWQgaW4gaHR0cHM6Ly9kb2NzLnRlbmRlcm1pbnQuY29tL21hc3Rlci9ycGMvXG4gKlxuICogRW51bSByYXcgdmFsdWUgbXVzdCBtYXRjaCB0aGUgc3BlbGxpbmcgaW4gdGhlIFwic2hlbGxcIiBleGFtcGxlIGNhbGwgKHNuYWtlX2Nhc2UpXG4gKi9cbnZhciBNZXRob2Q7XG4oZnVuY3Rpb24gKE1ldGhvZCkge1xuICAgIE1ldGhvZFtcIkFiY2lJbmZvXCJdID0gXCJhYmNpX2luZm9cIjtcbiAgICBNZXRob2RbXCJBYmNpUXVlcnlcIl0gPSBcImFiY2lfcXVlcnlcIjtcbiAgICBNZXRob2RbXCJCbG9ja1wiXSA9IFwiYmxvY2tcIjtcbiAgICAvKiogR2V0IGJsb2NrIGhlYWRlcnMgZm9yIG1pbkhlaWdodCA8PSBoZWlnaHQgPD0gbWF4SGVpZ2h0LiAqL1xuICAgIE1ldGhvZFtcIkJsb2NrY2hhaW5cIl0gPSBcImJsb2NrY2hhaW5cIjtcbiAgICBNZXRob2RbXCJCbG9ja1Jlc3VsdHNcIl0gPSBcImJsb2NrX3Jlc3VsdHNcIjtcbiAgICBNZXRob2RbXCJCbG9ja1NlYXJjaFwiXSA9IFwiYmxvY2tfc2VhcmNoXCI7XG4gICAgTWV0aG9kW1wiQnJvYWRjYXN0VHhBc3luY1wiXSA9IFwiYnJvYWRjYXN0X3R4X2FzeW5jXCI7XG4gICAgTWV0aG9kW1wiQnJvYWRjYXN0VHhTeW5jXCJdID0gXCJicm9hZGNhc3RfdHhfc3luY1wiO1xuICAgIE1ldGhvZFtcIkJyb2FkY2FzdFR4Q29tbWl0XCJdID0gXCJicm9hZGNhc3RfdHhfY29tbWl0XCI7XG4gICAgTWV0aG9kW1wiQ29tbWl0XCJdID0gXCJjb21taXRcIjtcbiAgICBNZXRob2RbXCJHZW5lc2lzXCJdID0gXCJnZW5lc2lzXCI7XG4gICAgTWV0aG9kW1wiSGVhbHRoXCJdID0gXCJoZWFsdGhcIjtcbiAgICBNZXRob2RbXCJOdW1VbmNvbmZpcm1lZFR4c1wiXSA9IFwibnVtX3VuY29uZmlybWVkX3R4c1wiO1xuICAgIE1ldGhvZFtcIlN0YXR1c1wiXSA9IFwic3RhdHVzXCI7XG4gICAgTWV0aG9kW1wiU3Vic2NyaWJlXCJdID0gXCJzdWJzY3JpYmVcIjtcbiAgICBNZXRob2RbXCJUeFwiXSA9IFwidHhcIjtcbiAgICBNZXRob2RbXCJUeFNlYXJjaFwiXSA9IFwidHhfc2VhcmNoXCI7XG4gICAgTWV0aG9kW1wiVmFsaWRhdG9yc1wiXSA9IFwidmFsaWRhdG9yc1wiO1xuICAgIE1ldGhvZFtcIlVuc3Vic2NyaWJlXCJdID0gXCJ1bnN1YnNjcmliZVwiO1xufSkoTWV0aG9kID0gZXhwb3J0cy5NZXRob2QgfHwgKGV4cG9ydHMuTWV0aG9kID0ge30pKTtcbi8qKlxuICogUmF3IHZhbHVlcyBtdXN0IG1hdGNoIHRoZSB0ZW5kZXJtaW50IGV2ZW50IG5hbWVcbiAqXG4gKiBAc2VlIGh0dHBzOi8vZ29kb2Mub3JnL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L3R5cGVzI3BrZy1jb25zdGFudHNcbiAqL1xudmFyIFN1YnNjcmlwdGlvbkV2ZW50VHlwZTtcbihmdW5jdGlvbiAoU3Vic2NyaXB0aW9uRXZlbnRUeXBlKSB7XG4gICAgU3Vic2NyaXB0aW9uRXZlbnRUeXBlW1wiTmV3QmxvY2tcIl0gPSBcIk5ld0Jsb2NrXCI7XG4gICAgU3Vic2NyaXB0aW9uRXZlbnRUeXBlW1wiTmV3QmxvY2tIZWFkZXJcIl0gPSBcIk5ld0Jsb2NrSGVhZGVyXCI7XG4gICAgU3Vic2NyaXB0aW9uRXZlbnRUeXBlW1wiVHhcIl0gPSBcIlR4XCI7XG59KShTdWJzY3JpcHRpb25FdmVudFR5cGUgPSBleHBvcnRzLlN1YnNjcmlwdGlvbkV2ZW50VHlwZSB8fCAoZXhwb3J0cy5TdWJzY3JpcHRpb25FdmVudFR5cGUgPSB7fSkpO1xuZnVuY3Rpb24gYnVpbGRRdWVyeShjb21wb25lbnRzKSB7XG4gICAgY29uc3QgdGFncyA9IGNvbXBvbmVudHMudGFncyA/IGNvbXBvbmVudHMudGFncyA6IFtdO1xuICAgIGNvbnN0IHRhZ0NvbXBvbmVudHMgPSB0YWdzLm1hcCgodGFnKSA9PiBgJHt0YWcua2V5fT0nJHt0YWcudmFsdWV9J2ApO1xuICAgIGNvbnN0IHJhd0NvbXBvbmVudHMgPSBjb21wb25lbnRzLnJhdyA/IFtjb21wb25lbnRzLnJhd10gOiBbXTtcbiAgICByZXR1cm4gWy4uLnRhZ0NvbXBvbmVudHMsIC4uLnJhd0NvbXBvbmVudHNdLmpvaW4oXCIgQU5EIFwiKTtcbn1cbmV4cG9ydHMuYnVpbGRRdWVyeSA9IGJ1aWxkUXVlcnk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/responses.js":
/*!************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/comet38/responses.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;\n/**\n * Returns true iff transaction made it successfully into the transaction pool\n */\nfunction broadcastTxSyncSuccess(res) {\n    // code must be 0 on success\n    return res.code === 0;\n}\nexports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;\n/**\n * Returns true iff transaction made it successfully into a block\n * (i.e. success in `check_tx` and `deliver_tx` field)\n */\nfunction broadcastTxCommitSuccess(response) {\n    // code must be 0 on success\n    // deliverTx may be present but empty on failure\n    return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;\n}\nexports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;\n/**\n * raw values from https://github.com/tendermint/tendermint/blob/dfa9a9a30a666132425b29454e90a472aa579a48/types/vote.go#L44\n */\nvar VoteType;\n(function (VoteType) {\n    VoteType[VoteType[\"PreVote\"] = 1] = \"PreVote\";\n    VoteType[VoteType[\"PreCommit\"] = 2] = \"PreCommit\";\n})(VoteType = exports.VoteType || (exports.VoteType = {}));\n//# sourceMappingURL=responses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9jb21ldDM4L3Jlc3BvbnNlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxnQ0FBZ0MsR0FBRyw4QkFBOEI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxrQ0FBa0MsZ0JBQWdCLEtBQUs7QUFDeEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvY29tZXQzOC9yZXNwb25zZXMuanM/MDY4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVm90ZVR5cGUgPSBleHBvcnRzLmJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzcyA9IGV4cG9ydHMuYnJvYWRjYXN0VHhTeW5jU3VjY2VzcyA9IHZvaWQgMDtcbi8qKlxuICogUmV0dXJucyB0cnVlIGlmZiB0cmFuc2FjdGlvbiBtYWRlIGl0IHN1Y2Nlc3NmdWxseSBpbnRvIHRoZSB0cmFuc2FjdGlvbiBwb29sXG4gKi9cbmZ1bmN0aW9uIGJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MocmVzKSB7XG4gICAgLy8gY29kZSBtdXN0IGJlIDAgb24gc3VjY2Vzc1xuICAgIHJldHVybiByZXMuY29kZSA9PT0gMDtcbn1cbmV4cG9ydHMuYnJvYWRjYXN0VHhTeW5jU3VjY2VzcyA9IGJyb2FkY2FzdFR4U3luY1N1Y2Nlc3M7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZmYgdHJhbnNhY3Rpb24gbWFkZSBpdCBzdWNjZXNzZnVsbHkgaW50byBhIGJsb2NrXG4gKiAoaS5lLiBzdWNjZXNzIGluIGBjaGVja190eGAgYW5kIGBkZWxpdmVyX3R4YCBmaWVsZClcbiAqL1xuZnVuY3Rpb24gYnJvYWRjYXN0VHhDb21taXRTdWNjZXNzKHJlc3BvbnNlKSB7XG4gICAgLy8gY29kZSBtdXN0IGJlIDAgb24gc3VjY2Vzc1xuICAgIC8vIGRlbGl2ZXJUeCBtYXkgYmUgcHJlc2VudCBidXQgZW1wdHkgb24gZmFpbHVyZVxuICAgIHJldHVybiByZXNwb25zZS5jaGVja1R4LmNvZGUgPT09IDAgJiYgISFyZXNwb25zZS5kZWxpdmVyVHggJiYgcmVzcG9uc2UuZGVsaXZlclR4LmNvZGUgPT09IDA7XG59XG5leHBvcnRzLmJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzcyA9IGJyb2FkY2FzdFR4Q29tbWl0U3VjY2Vzcztcbi8qKlxuICogcmF3IHZhbHVlcyBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvYmxvYi9kZmE5YTlhMzBhNjY2MTMyNDI1YjI5NDU0ZTkwYTQ3MmFhNTc5YTQ4L3R5cGVzL3ZvdGUuZ28jTDQ0XG4gKi9cbnZhciBWb3RlVHlwZTtcbihmdW5jdGlvbiAoVm90ZVR5cGUpIHtcbiAgICBWb3RlVHlwZVtWb3RlVHlwZVtcIlByZVZvdGVcIl0gPSAxXSA9IFwiUHJlVm90ZVwiO1xuICAgIFZvdGVUeXBlW1ZvdGVUeXBlW1wiUHJlQ29tbWl0XCJdID0gMl0gPSBcIlByZUNvbW1pdFwiO1xufSkoVm90ZVR5cGUgPSBleHBvcnRzLlZvdGVUeXBlIHx8IChleHBvcnRzLlZvdGVUeXBlID0ge30pKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlc3BvbnNlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/responses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/dates.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/dates.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DateTime = exports.toSeconds = exports.fromSeconds = exports.toRfc3339WithNanoseconds = exports.fromRfc3339WithNanoseconds = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nfunction fromRfc3339WithNanoseconds(dateTimeString) {\n    const out = (0, encoding_1.fromRfc3339)(dateTimeString);\n    const nanosecondsMatch = dateTimeString.match(/\\.(\\d+)Z$/);\n    const nanoseconds = nanosecondsMatch ? nanosecondsMatch[1].slice(3) : \"\";\n    out.nanoseconds = parseInt(nanoseconds.padEnd(6, \"0\"), 10);\n    return out;\n}\nexports.fromRfc3339WithNanoseconds = fromRfc3339WithNanoseconds;\nfunction toRfc3339WithNanoseconds(dateTime) {\n    const millisecondIso = dateTime.toISOString();\n    const nanoseconds = dateTime.nanoseconds?.toString() ?? \"\";\n    return `${millisecondIso.slice(0, -1)}${nanoseconds.padStart(6, \"0\")}Z`;\n}\nexports.toRfc3339WithNanoseconds = toRfc3339WithNanoseconds;\nfunction fromSeconds(seconds, nanos = 0) {\n    const checkedNanos = new math_1.Uint32(nanos).toNumber();\n    if (checkedNanos > 999999999) {\n        throw new Error(\"Nano seconds must not exceed 999999999\");\n    }\n    const out = new Date(seconds * 1000 + Math.floor(checkedNanos / 1000000));\n    out.nanoseconds = checkedNanos % 1000000;\n    return out;\n}\nexports.fromSeconds = fromSeconds;\n/**\n * Calculates the UNIX timestamp in seconds as well as the nanoseconds after the given second.\n *\n * This is useful when dealing with external systems like the protobuf type\n * [.google.protobuf.Timestamp](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.Timestamp)\n * or any other system that does not use millisecond precision.\n */\nfunction toSeconds(date) {\n    return {\n        seconds: Math.floor(date.getTime() / 1000),\n        nanos: (date.getTime() % 1000) * 1000000 + (date.nanoseconds ?? 0),\n    };\n}\nexports.toSeconds = toSeconds;\n/** @deprecated Use fromRfc3339WithNanoseconds/toRfc3339WithNanoseconds instead */\nclass DateTime {\n    /** @deprecated Use fromRfc3339WithNanoseconds instead */\n    static decode(dateTimeString) {\n        return fromRfc3339WithNanoseconds(dateTimeString);\n    }\n    /** @deprecated Use toRfc3339WithNanoseconds instead */\n    static encode(dateTime) {\n        return toRfc3339WithNanoseconds(dateTime);\n    }\n}\nexports.DateTime = DateTime;\n//# sourceMappingURL=dates.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9kYXRlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsR0FBRyxpQkFBaUIsR0FBRyxtQkFBbUIsR0FBRyxnQ0FBZ0MsR0FBRyxrQ0FBa0M7QUFDbEksbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxzRUFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQztBQUNsQztBQUNBO0FBQ0E7QUFDQSxjQUFjLDRCQUE0QixFQUFFLDZCQUE2QjtBQUN6RTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9kYXRlcy5qcz81MzJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EYXRlVGltZSA9IGV4cG9ydHMudG9TZWNvbmRzID0gZXhwb3J0cy5mcm9tU2Vjb25kcyA9IGV4cG9ydHMudG9SZmMzMzM5V2l0aE5hbm9zZWNvbmRzID0gZXhwb3J0cy5mcm9tUmZjMzMzOVdpdGhOYW5vc2Vjb25kcyA9IHZvaWQgMDtcbmNvbnN0IGVuY29kaW5nXzEgPSByZXF1aXJlKFwiQGNvc21qcy9lbmNvZGluZ1wiKTtcbmNvbnN0IG1hdGhfMSA9IHJlcXVpcmUoXCJAY29zbWpzL21hdGhcIik7XG5mdW5jdGlvbiBmcm9tUmZjMzMzOVdpdGhOYW5vc2Vjb25kcyhkYXRlVGltZVN0cmluZykge1xuICAgIGNvbnN0IG91dCA9ICgwLCBlbmNvZGluZ18xLmZyb21SZmMzMzM5KShkYXRlVGltZVN0cmluZyk7XG4gICAgY29uc3QgbmFub3NlY29uZHNNYXRjaCA9IGRhdGVUaW1lU3RyaW5nLm1hdGNoKC9cXC4oXFxkKylaJC8pO1xuICAgIGNvbnN0IG5hbm9zZWNvbmRzID0gbmFub3NlY29uZHNNYXRjaCA/IG5hbm9zZWNvbmRzTWF0Y2hbMV0uc2xpY2UoMykgOiBcIlwiO1xuICAgIG91dC5uYW5vc2Vjb25kcyA9IHBhcnNlSW50KG5hbm9zZWNvbmRzLnBhZEVuZCg2LCBcIjBcIiksIDEwKTtcbiAgICByZXR1cm4gb3V0O1xufVxuZXhwb3J0cy5mcm9tUmZjMzMzOVdpdGhOYW5vc2Vjb25kcyA9IGZyb21SZmMzMzM5V2l0aE5hbm9zZWNvbmRzO1xuZnVuY3Rpb24gdG9SZmMzMzM5V2l0aE5hbm9zZWNvbmRzKGRhdGVUaW1lKSB7XG4gICAgY29uc3QgbWlsbGlzZWNvbmRJc28gPSBkYXRlVGltZS50b0lTT1N0cmluZygpO1xuICAgIGNvbnN0IG5hbm9zZWNvbmRzID0gZGF0ZVRpbWUubmFub3NlY29uZHM/LnRvU3RyaW5nKCkgPz8gXCJcIjtcbiAgICByZXR1cm4gYCR7bWlsbGlzZWNvbmRJc28uc2xpY2UoMCwgLTEpfSR7bmFub3NlY29uZHMucGFkU3RhcnQoNiwgXCIwXCIpfVpgO1xufVxuZXhwb3J0cy50b1JmYzMzMzlXaXRoTmFub3NlY29uZHMgPSB0b1JmYzMzMzlXaXRoTmFub3NlY29uZHM7XG5mdW5jdGlvbiBmcm9tU2Vjb25kcyhzZWNvbmRzLCBuYW5vcyA9IDApIHtcbiAgICBjb25zdCBjaGVja2VkTmFub3MgPSBuZXcgbWF0aF8xLlVpbnQzMihuYW5vcykudG9OdW1iZXIoKTtcbiAgICBpZiAoY2hlY2tlZE5hbm9zID4gOTk5OTk5OTk5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIk5hbm8gc2Vjb25kcyBtdXN0IG5vdCBleGNlZWQgOTk5OTk5OTk5XCIpO1xuICAgIH1cbiAgICBjb25zdCBvdXQgPSBuZXcgRGF0ZShzZWNvbmRzICogMTAwMCArIE1hdGguZmxvb3IoY2hlY2tlZE5hbm9zIC8gMTAwMDAwMCkpO1xuICAgIG91dC5uYW5vc2Vjb25kcyA9IGNoZWNrZWROYW5vcyAlIDEwMDAwMDA7XG4gICAgcmV0dXJuIG91dDtcbn1cbmV4cG9ydHMuZnJvbVNlY29uZHMgPSBmcm9tU2Vjb25kcztcbi8qKlxuICogQ2FsY3VsYXRlcyB0aGUgVU5JWCB0aW1lc3RhbXAgaW4gc2Vjb25kcyBhcyB3ZWxsIGFzIHRoZSBuYW5vc2Vjb25kcyBhZnRlciB0aGUgZ2l2ZW4gc2Vjb25kLlxuICpcbiAqIFRoaXMgaXMgdXNlZnVsIHdoZW4gZGVhbGluZyB3aXRoIGV4dGVybmFsIHN5c3RlbXMgbGlrZSB0aGUgcHJvdG9idWYgdHlwZVxuICogWy5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wXShodHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS9wcm90b2NvbC1idWZmZXJzL2RvY3MvcmVmZXJlbmNlL2dvb2dsZS5wcm90b2J1ZiNnb29nbGUucHJvdG9idWYuVGltZXN0YW1wKVxuICogb3IgYW55IG90aGVyIHN5c3RlbSB0aGF0IGRvZXMgbm90IHVzZSBtaWxsaXNlY29uZCBwcmVjaXNpb24uXG4gKi9cbmZ1bmN0aW9uIHRvU2Vjb25kcyhkYXRlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2Vjb25kczogTWF0aC5mbG9vcihkYXRlLmdldFRpbWUoKSAvIDEwMDApLFxuICAgICAgICBuYW5vczogKGRhdGUuZ2V0VGltZSgpICUgMTAwMCkgKiAxMDAwMDAwICsgKGRhdGUubmFub3NlY29uZHMgPz8gMCksXG4gICAgfTtcbn1cbmV4cG9ydHMudG9TZWNvbmRzID0gdG9TZWNvbmRzO1xuLyoqIEBkZXByZWNhdGVkIFVzZSBmcm9tUmZjMzMzOVdpdGhOYW5vc2Vjb25kcy90b1JmYzMzMzlXaXRoTmFub3NlY29uZHMgaW5zdGVhZCAqL1xuY2xhc3MgRGF0ZVRpbWUge1xuICAgIC8qKiBAZGVwcmVjYXRlZCBVc2UgZnJvbVJmYzMzMzlXaXRoTmFub3NlY29uZHMgaW5zdGVhZCAqL1xuICAgIHN0YXRpYyBkZWNvZGUoZGF0ZVRpbWVTdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIGZyb21SZmMzMzM5V2l0aE5hbm9zZWNvbmRzKGRhdGVUaW1lU3RyaW5nKTtcbiAgICB9XG4gICAgLyoqIEBkZXByZWNhdGVkIFVzZSB0b1JmYzMzMzlXaXRoTmFub3NlY29uZHMgaW5zdGVhZCAqL1xuICAgIHN0YXRpYyBlbmNvZGUoZGF0ZVRpbWUpIHtcbiAgICAgICAgcmV0dXJuIHRvUmZjMzMzOVdpdGhOYW5vc2Vjb25kcyhkYXRlVGltZSk7XG4gICAgfVxufVxuZXhwb3J0cy5EYXRlVGltZSA9IERhdGVUaW1lO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0ZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/dates.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockIdFlag = exports.isTendermint37Client = exports.isTendermint34Client = exports.isComet38Client = exports.connectComet = exports.Tendermint37Client = exports.tendermint37 = exports.Tendermint34Client = exports.tendermint34 = exports.VoteType = exports.SubscriptionEventType = exports.Method = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.WebsocketClient = exports.HttpClient = exports.HttpBatchClient = exports.Comet38Client = exports.comet38 = exports.toSeconds = exports.toRfc3339WithNanoseconds = exports.fromSeconds = exports.fromRfc3339WithNanoseconds = exports.DateTime = exports.rawSecp256k1PubkeyToRawAddress = exports.rawEd25519PubkeyToRawAddress = exports.pubkeyToRawAddress = exports.pubkeyToAddress = void 0;\nvar addresses_1 = __webpack_require__(/*! ./addresses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/addresses.js\");\nObject.defineProperty(exports, \"pubkeyToAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToAddress; } }));\nObject.defineProperty(exports, \"pubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.pubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawEd25519PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawEd25519PubkeyToRawAddress; } }));\nObject.defineProperty(exports, \"rawSecp256k1PubkeyToRawAddress\", ({ enumerable: true, get: function () { return addresses_1.rawSecp256k1PubkeyToRawAddress; } }));\nvar dates_1 = __webpack_require__(/*! ./dates */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/dates.js\");\nObject.defineProperty(exports, \"DateTime\", ({ enumerable: true, get: function () { return dates_1.DateTime; } }));\nObject.defineProperty(exports, \"fromRfc3339WithNanoseconds\", ({ enumerable: true, get: function () { return dates_1.fromRfc3339WithNanoseconds; } }));\nObject.defineProperty(exports, \"fromSeconds\", ({ enumerable: true, get: function () { return dates_1.fromSeconds; } }));\nObject.defineProperty(exports, \"toRfc3339WithNanoseconds\", ({ enumerable: true, get: function () { return dates_1.toRfc3339WithNanoseconds; } }));\nObject.defineProperty(exports, \"toSeconds\", ({ enumerable: true, get: function () { return dates_1.toSeconds; } }));\n// The public Tendermint34Client.create constructor allows manually choosing an RpcClient.\n// This is currently the only way to switch to the HttpBatchClient (which may become default at some point).\n// Due to this API, we make RPC client implementations public.\nexports.comet38 = __importStar(__webpack_require__(/*! ./comet38 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/index.js\"));\nvar comet38_1 = __webpack_require__(/*! ./comet38 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/index.js\");\nObject.defineProperty(exports, \"Comet38Client\", ({ enumerable: true, get: function () { return comet38_1.Comet38Client; } }));\nvar rpcclients_1 = __webpack_require__(/*! ./rpcclients */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js\");\nObject.defineProperty(exports, \"HttpBatchClient\", ({ enumerable: true, get: function () { return rpcclients_1.HttpBatchClient; } }));\nObject.defineProperty(exports, \"HttpClient\", ({ enumerable: true, get: function () { return rpcclients_1.HttpClient; } }));\nObject.defineProperty(exports, \"WebsocketClient\", ({ enumerable: true, get: function () { return rpcclients_1.WebsocketClient; } }));\nvar tendermint34_1 = __webpack_require__(/*! ./tendermint34 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js\");\nObject.defineProperty(exports, \"broadcastTxCommitSuccess\", ({ enumerable: true, get: function () { return tendermint34_1.broadcastTxCommitSuccess; } }));\nObject.defineProperty(exports, \"broadcastTxSyncSuccess\", ({ enumerable: true, get: function () { return tendermint34_1.broadcastTxSyncSuccess; } }));\nObject.defineProperty(exports, \"Method\", ({ enumerable: true, get: function () { return tendermint34_1.Method; } }));\nObject.defineProperty(exports, \"SubscriptionEventType\", ({ enumerable: true, get: function () { return tendermint34_1.SubscriptionEventType; } }));\nObject.defineProperty(exports, \"VoteType\", ({ enumerable: true, get: function () { return tendermint34_1.VoteType; } }));\nexports.tendermint34 = __importStar(__webpack_require__(/*! ./tendermint34 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js\"));\nvar tendermint34_2 = __webpack_require__(/*! ./tendermint34 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js\");\nObject.defineProperty(exports, \"Tendermint34Client\", ({ enumerable: true, get: function () { return tendermint34_2.Tendermint34Client; } }));\nexports.tendermint37 = __importStar(__webpack_require__(/*! ./tendermint37 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js\"));\nvar tendermint37_1 = __webpack_require__(/*! ./tendermint37 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js\");\nObject.defineProperty(exports, \"Tendermint37Client\", ({ enumerable: true, get: function () { return tendermint37_1.Tendermint37Client; } }));\nvar tendermintclient_1 = __webpack_require__(/*! ./tendermintclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js\");\nObject.defineProperty(exports, \"connectComet\", ({ enumerable: true, get: function () { return tendermintclient_1.connectComet; } }));\nObject.defineProperty(exports, \"isComet38Client\", ({ enumerable: true, get: function () { return tendermintclient_1.isComet38Client; } }));\nObject.defineProperty(exports, \"isTendermint34Client\", ({ enumerable: true, get: function () { return tendermintclient_1.isTendermint34Client; } }));\nObject.defineProperty(exports, \"isTendermint37Client\", ({ enumerable: true, get: function () { return tendermintclient_1.isTendermint37Client; } }));\nvar types_1 = __webpack_require__(/*! ./types */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/types.js\");\nObject.defineProperty(exports, \"BlockIdFlag\", ({ enumerable: true, get: function () { return types_1.BlockIdFlag; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.smallIntToApi = exports.apiToBigInt = exports.apiToSmallInt = void 0;\nconst math_1 = __webpack_require__(/*! @cosmjs/math */ \"(ssr)/./node_modules/@cosmjs/math/build/index.js\");\nconst encodings_1 = __webpack_require__(/*! ./tendermint34/encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js\");\n/**\n * Takes an integer value from the Tendermint RPC API and\n * returns it as number.\n *\n * Only works within the safe integer range.\n */\nfunction apiToSmallInt(input) {\n    const asInt = typeof input === \"number\" ? new math_1.Int53(input) : math_1.Int53.fromString(input);\n    return asInt.toNumber();\n}\nexports.apiToSmallInt = apiToSmallInt;\n/**\n * Takes an integer value from the Tendermint RPC API and\n * returns it as BigInt.\n *\n * This supports the full uint64 and int64 ranges.\n */\nfunction apiToBigInt(input) {\n    (0, encodings_1.assertString)(input); // Runtime check on top of TypeScript just to be safe for semi-trusted API types\n    if (!input.match(/^-?[0-9]+$/)) {\n        throw new Error(\"Invalid string format\");\n    }\n    return BigInt(input);\n}\nexports.apiToBigInt = apiToBigInt;\n/**\n * Takes an integer in the safe integer range and returns\n * a string representation to be used in the Tendermint RPC API.\n */\nfunction smallIntToApi(num) {\n    return new math_1.Int53(num).toString();\n}\nexports.smallIntToApi = smallIntToApi;\n//# sourceMappingURL=inthelpers.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9pbnRoZWxwZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQixHQUFHLG1CQUFtQixHQUFHLHFCQUFxQjtBQUNuRSxlQUFlLG1CQUFPLENBQUMsc0VBQWM7QUFDckMsb0JBQW9CLG1CQUFPLENBQUMsNkdBQTBCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvaW50aGVscGVycy5qcz9jOTZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5zbWFsbEludFRvQXBpID0gZXhwb3J0cy5hcGlUb0JpZ0ludCA9IGV4cG9ydHMuYXBpVG9TbWFsbEludCA9IHZvaWQgMDtcbmNvbnN0IG1hdGhfMSA9IHJlcXVpcmUoXCJAY29zbWpzL21hdGhcIik7XG5jb25zdCBlbmNvZGluZ3NfMSA9IHJlcXVpcmUoXCIuL3RlbmRlcm1pbnQzNC9lbmNvZGluZ3NcIik7XG4vKipcbiAqIFRha2VzIGFuIGludGVnZXIgdmFsdWUgZnJvbSB0aGUgVGVuZGVybWludCBSUEMgQVBJIGFuZFxuICogcmV0dXJucyBpdCBhcyBudW1iZXIuXG4gKlxuICogT25seSB3b3JrcyB3aXRoaW4gdGhlIHNhZmUgaW50ZWdlciByYW5nZS5cbiAqL1xuZnVuY3Rpb24gYXBpVG9TbWFsbEludChpbnB1dCkge1xuICAgIGNvbnN0IGFzSW50ID0gdHlwZW9mIGlucHV0ID09PSBcIm51bWJlclwiID8gbmV3IG1hdGhfMS5JbnQ1MyhpbnB1dCkgOiBtYXRoXzEuSW50NTMuZnJvbVN0cmluZyhpbnB1dCk7XG4gICAgcmV0dXJuIGFzSW50LnRvTnVtYmVyKCk7XG59XG5leHBvcnRzLmFwaVRvU21hbGxJbnQgPSBhcGlUb1NtYWxsSW50O1xuLyoqXG4gKiBUYWtlcyBhbiBpbnRlZ2VyIHZhbHVlIGZyb20gdGhlIFRlbmRlcm1pbnQgUlBDIEFQSSBhbmRcbiAqIHJldHVybnMgaXQgYXMgQmlnSW50LlxuICpcbiAqIFRoaXMgc3VwcG9ydHMgdGhlIGZ1bGwgdWludDY0IGFuZCBpbnQ2NCByYW5nZXMuXG4gKi9cbmZ1bmN0aW9uIGFwaVRvQmlnSW50KGlucHV0KSB7XG4gICAgKDAsIGVuY29kaW5nc18xLmFzc2VydFN0cmluZykoaW5wdXQpOyAvLyBSdW50aW1lIGNoZWNrIG9uIHRvcCBvZiBUeXBlU2NyaXB0IGp1c3QgdG8gYmUgc2FmZSBmb3Igc2VtaS10cnVzdGVkIEFQSSB0eXBlc1xuICAgIGlmICghaW5wdXQubWF0Y2goL14tP1swLTldKyQvKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHN0cmluZyBmb3JtYXRcIik7XG4gICAgfVxuICAgIHJldHVybiBCaWdJbnQoaW5wdXQpO1xufVxuZXhwb3J0cy5hcGlUb0JpZ0ludCA9IGFwaVRvQmlnSW50O1xuLyoqXG4gKiBUYWtlcyBhbiBpbnRlZ2VyIGluIHRoZSBzYWZlIGludGVnZXIgcmFuZ2UgYW5kIHJldHVybnNcbiAqIGEgc3RyaW5nIHJlcHJlc2VudGF0aW9uIHRvIGJlIHVzZWQgaW4gdGhlIFRlbmRlcm1pbnQgUlBDIEFQSS5cbiAqL1xuZnVuY3Rpb24gc21hbGxJbnRUb0FwaShudW0pIHtcbiAgICByZXR1cm4gbmV3IG1hdGhfMS5JbnQ1MyhudW0pLnRvU3RyaW5nKCk7XG59XG5leHBvcnRzLnNtYWxsSW50VG9BcGkgPSBzbWFsbEludFRvQXBpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW50aGVscGVycy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js":
/*!**************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createJsonRpcRequest = void 0;\nconst numbersWithoutZero = \"123456789\";\n/** generates a random numeric character  */\nfunction randomNumericChar() {\n    return numbersWithoutZero[Math.floor(Math.random() * numbersWithoutZero.length)];\n}\n/**\n * An (absolutely not cryptographically secure) random integer > 0.\n */\nfunction randomId() {\n    return parseInt(Array.from({ length: 12 })\n        .map(() => randomNumericChar())\n        .join(\"\"), 10);\n}\n/** Creates a JSON-RPC request with random ID */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction createJsonRpcRequest(method, params) {\n    const paramsCopy = params ? { ...params } : {};\n    return {\n        jsonrpc: \"2.0\",\n        id: randomId(),\n        method: method,\n        params: paramsCopy,\n    };\n}\nexports.createJsonRpcRequest = createJsonRpcRequest;\n//# sourceMappingURL=jsonrpc.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9qc29ucnBjLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsWUFBWTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsWUFBWTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9qc29ucnBjLmpzPzdmZWMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmNyZWF0ZUpzb25ScGNSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgbnVtYmVyc1dpdGhvdXRaZXJvID0gXCIxMjM0NTY3ODlcIjtcbi8qKiBnZW5lcmF0ZXMgYSByYW5kb20gbnVtZXJpYyBjaGFyYWN0ZXIgICovXG5mdW5jdGlvbiByYW5kb21OdW1lcmljQ2hhcigpIHtcbiAgICByZXR1cm4gbnVtYmVyc1dpdGhvdXRaZXJvW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG51bWJlcnNXaXRob3V0WmVyby5sZW5ndGgpXTtcbn1cbi8qKlxuICogQW4gKGFic29sdXRlbHkgbm90IGNyeXB0b2dyYXBoaWNhbGx5IHNlY3VyZSkgcmFuZG9tIGludGVnZXIgPiAwLlxuICovXG5mdW5jdGlvbiByYW5kb21JZCgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQoQXJyYXkuZnJvbSh7IGxlbmd0aDogMTIgfSlcbiAgICAgICAgLm1hcCgoKSA9PiByYW5kb21OdW1lcmljQ2hhcigpKVxuICAgICAgICAuam9pbihcIlwiKSwgMTApO1xufVxuLyoqIENyZWF0ZXMgYSBKU09OLVJQQyByZXF1ZXN0IHdpdGggcmFuZG9tIElEICovXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10eXBlc1xuZnVuY3Rpb24gY3JlYXRlSnNvblJwY1JlcXVlc3QobWV0aG9kLCBwYXJhbXMpIHtcbiAgICBjb25zdCBwYXJhbXNDb3B5ID0gcGFyYW1zID8geyAuLi5wYXJhbXMgfSA6IHt9O1xuICAgIHJldHVybiB7XG4gICAgICAgIGpzb25ycGM6IFwiMi4wXCIsXG4gICAgICAgIGlkOiByYW5kb21JZCgpLFxuICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgcGFyYW1zOiBwYXJhbXNDb3B5LFxuICAgIH07XG59XG5leHBvcnRzLmNyZWF0ZUpzb25ScGNSZXF1ZXN0ID0gY3JlYXRlSnNvblJwY1JlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1qc29ucnBjLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.http = void 0;\nconst axios_1 = __importDefault(__webpack_require__(/*! axios */ \"(ssr)/./node_modules/axios/dist/node/axios.cjs\"));\nfunction filterBadStatus(res) {\n    if (res.status >= 400) {\n        throw new Error(`Bad status on response: ${res.status}`);\n    }\n    return res;\n}\n/**\n * Node.js 18 comes with exprimental fetch support (https://nodejs.org/de/blog/announcements/v18-release-announce/).\n * This is nice, but the implementation does not yet work wekk for us. We\n * can just stick with axios on those systems for now.\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isExperimental(nodeJsFunc) {\n    // This works because we get this info in node 18:\n    //\n    // > fetch.toString()\n    // 'async function fetch(input, init = undefined) {\\n' +\n    // \"    emitExperimentalWarning('The Fetch API');\\n\" +\n    // '    return lazyUndici().fetch(input, init);\\n' +\n    // '  }'\n    return nodeJsFunc.toString().includes(\"emitExperimentalWarning\");\n}\n/**\n * Helper to work around missing CORS support in Tendermint (https://github.com/tendermint/tendermint/pull/2800)\n *\n * For some reason, fetch does not complain about missing server-side CORS support.\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nasync function http(method, url, headers, request) {\n    if (typeof fetch === \"function\" && !isExperimental(fetch)) {\n        const settings = {\n            method: method,\n            body: request ? JSON.stringify(request) : undefined,\n            headers: {\n                // eslint-disable-next-line @typescript-eslint/naming-convention\n                \"Content-Type\": \"application/json\",\n                ...headers,\n            },\n        };\n        return fetch(url, settings)\n            .then(filterBadStatus)\n            .then((res) => res.json());\n    }\n    else {\n        return axios_1.default\n            .request({ url: url, method: method, data: request, headers: headers })\n            .then((res) => res.data);\n    }\n}\nexports.http = http;\n//# sourceMappingURL=http.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9ycGNjbGllbnRzL2h0dHAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxZQUFZO0FBQ1osZ0NBQWdDLG1CQUFPLENBQUMsNkRBQU87QUFDL0M7QUFDQTtBQUNBLG1EQUFtRCxXQUFXO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdURBQXVEO0FBQ3ZELHFEQUFxRDtBQUNyRCxtREFBbUQ7QUFDbkQsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQTJEO0FBQ2xGO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9ycGNjbGllbnRzL2h0dHAuanM/ZjE4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuaHR0cCA9IHZvaWQgMDtcbmNvbnN0IGF4aW9zXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImF4aW9zXCIpKTtcbmZ1bmN0aW9uIGZpbHRlckJhZFN0YXR1cyhyZXMpIHtcbiAgICBpZiAocmVzLnN0YXR1cyA+PSA0MDApIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBCYWQgc3RhdHVzIG9uIHJlc3BvbnNlOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfVxuICAgIHJldHVybiByZXM7XG59XG4vKipcbiAqIE5vZGUuanMgMTggY29tZXMgd2l0aCBleHByaW1lbnRhbCBmZXRjaCBzdXBwb3J0IChodHRwczovL25vZGVqcy5vcmcvZGUvYmxvZy9hbm5vdW5jZW1lbnRzL3YxOC1yZWxlYXNlLWFubm91bmNlLykuXG4gKiBUaGlzIGlzIG5pY2UsIGJ1dCB0aGUgaW1wbGVtZW50YXRpb24gZG9lcyBub3QgeWV0IHdvcmsgd2VrayBmb3IgdXMuIFdlXG4gKiBjYW4ganVzdCBzdGljayB3aXRoIGF4aW9zIG9uIHRob3NlIHN5c3RlbXMgZm9yIG5vdy5cbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbmZ1bmN0aW9uIGlzRXhwZXJpbWVudGFsKG5vZGVKc0Z1bmMpIHtcbiAgICAvLyBUaGlzIHdvcmtzIGJlY2F1c2Ugd2UgZ2V0IHRoaXMgaW5mbyBpbiBub2RlIDE4OlxuICAgIC8vXG4gICAgLy8gPiBmZXRjaC50b1N0cmluZygpXG4gICAgLy8gJ2FzeW5jIGZ1bmN0aW9uIGZldGNoKGlucHV0LCBpbml0ID0gdW5kZWZpbmVkKSB7XFxuJyArXG4gICAgLy8gXCIgICAgZW1pdEV4cGVyaW1lbnRhbFdhcm5pbmcoJ1RoZSBGZXRjaCBBUEknKTtcXG5cIiArXG4gICAgLy8gJyAgICByZXR1cm4gbGF6eVVuZGljaSgpLmZldGNoKGlucHV0LCBpbml0KTtcXG4nICtcbiAgICAvLyAnICB9J1xuICAgIHJldHVybiBub2RlSnNGdW5jLnRvU3RyaW5nKCkuaW5jbHVkZXMoXCJlbWl0RXhwZXJpbWVudGFsV2FybmluZ1wiKTtcbn1cbi8qKlxuICogSGVscGVyIHRvIHdvcmsgYXJvdW5kIG1pc3NpbmcgQ09SUyBzdXBwb3J0IGluIFRlbmRlcm1pbnQgKGh0dHBzOi8vZ2l0aHViLmNvbS90ZW5kZXJtaW50L3RlbmRlcm1pbnQvcHVsbC8yODAwKVxuICpcbiAqIEZvciBzb21lIHJlYXNvbiwgZmV0Y2ggZG9lcyBub3QgY29tcGxhaW4gYWJvdXQgbWlzc2luZyBzZXJ2ZXItc2lkZSBDT1JTIHN1cHBvcnQuXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvZXhwbGljaXQtbW9kdWxlLWJvdW5kYXJ5LXR5cGVzXG5hc3luYyBmdW5jdGlvbiBodHRwKG1ldGhvZCwgdXJsLCBoZWFkZXJzLCByZXF1ZXN0KSB7XG4gICAgaWYgKHR5cGVvZiBmZXRjaCA9PT0gXCJmdW5jdGlvblwiICYmICFpc0V4cGVyaW1lbnRhbChmZXRjaCkpIHtcbiAgICAgICAgY29uc3Qgc2V0dGluZ3MgPSB7XG4gICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcbiAgICAgICAgICAgIGJvZHk6IHJlcXVlc3QgPyBKU09OLnN0cmluZ2lmeShyZXF1ZXN0KSA6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uXG4gICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gICAgICAgICAgICAgICAgLi4uaGVhZGVycyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBmZXRjaCh1cmwsIHNldHRpbmdzKVxuICAgICAgICAgICAgLnRoZW4oZmlsdGVyQmFkU3RhdHVzKVxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYXhpb3NfMS5kZWZhdWx0XG4gICAgICAgICAgICAucmVxdWVzdCh7IHVybDogdXJsLCBtZXRob2Q6IG1ldGhvZCwgZGF0YTogcmVxdWVzdCwgaGVhZGVyczogaGVhZGVycyB9KVxuICAgICAgICAgICAgLnRoZW4oKHJlcykgPT4gcmVzLmRhdGEpO1xuICAgIH1cbn1cbmV4cG9ydHMuaHR0cCA9IGh0dHA7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1odHRwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HttpBatchClient = void 0;\nconst json_rpc_1 = __webpack_require__(/*! @cosmjs/json-rpc */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/index.js\");\nconst http_1 = __webpack_require__(/*! ./http */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js\");\nconst rpcclient_1 = __webpack_require__(/*! ./rpcclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js\");\n// Those values are private and can change any time.\n// Does a user need to know them? I don't think so. You either set\n// a custom value or leave the option field unset.\nconst defaultHttpBatchClientOptions = {\n    dispatchInterval: 20,\n    batchSizeLimit: 20,\n};\nclass HttpBatchClient {\n    constructor(endpoint, options = {}) {\n        this.queue = [];\n        this.options = {\n            batchSizeLimit: options.batchSizeLimit ?? defaultHttpBatchClientOptions.batchSizeLimit,\n            dispatchInterval: options.dispatchInterval ?? defaultHttpBatchClientOptions.dispatchInterval,\n        };\n        if (typeof endpoint === \"string\") {\n            if (!(0, rpcclient_1.hasProtocol)(endpoint)) {\n                throw new Error(\"Endpoint URL is missing a protocol. Expected 'https://' or 'http://'.\");\n            }\n            this.url = endpoint;\n        }\n        else {\n            this.url = endpoint.url;\n            this.headers = endpoint.headers;\n        }\n        this.timer = setInterval(() => this.tick(), options.dispatchInterval);\n        this.validate();\n    }\n    disconnect() {\n        this.timer && clearInterval(this.timer);\n        this.timer = undefined;\n    }\n    async execute(request) {\n        return new Promise((resolve, reject) => {\n            this.queue.push({ request, resolve, reject });\n            if (this.queue.length >= this.options.batchSizeLimit) {\n                // this train is full, let's go\n                this.tick();\n            }\n        });\n    }\n    validate() {\n        if (!this.options.batchSizeLimit ||\n            !Number.isSafeInteger(this.options.batchSizeLimit) ||\n            this.options.batchSizeLimit < 1) {\n            throw new Error(\"batchSizeLimit must be a safe integer >= 1\");\n        }\n    }\n    /**\n     * This is called in an interval where promise rejections cannot be handled.\n     * So this is not async and HTTP errors need to be handled by the queued promises.\n     */\n    tick() {\n        // Avoid race conditions\n        const batch = this.queue.splice(0, this.options.batchSizeLimit);\n        if (!batch.length)\n            return;\n        const requests = batch.map((s) => s.request);\n        const requestIds = requests.map((request) => request.id);\n        (0, http_1.http)(\"POST\", this.url, this.headers, requests).then((raw) => {\n            // Requests with a single entry return as an object\n            const arr = Array.isArray(raw) ? raw : [raw];\n            arr.forEach((el) => {\n                const req = batch.find((s) => s.request.id === el.id);\n                if (!req)\n                    return;\n                const { reject, resolve } = req;\n                const response = (0, json_rpc_1.parseJsonRpcResponse)(el);\n                if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n                    reject(new Error(JSON.stringify(response.error)));\n                }\n                else {\n                    resolve(response);\n                }\n            });\n        }, (error) => {\n            for (const requestId of requestIds) {\n                const req = batch.find((s) => s.request.id === requestId);\n                if (!req)\n                    return;\n                req.reject(error);\n            }\n        });\n    }\n}\nexports.HttpBatchClient = HttpBatchClient;\n//# sourceMappingURL=httpbatchclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9ycGNjbGllbnRzL2h0dHBiYXRjaGNsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx1QkFBdUI7QUFDdkIsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLGVBQWUsbUJBQU8sQ0FBQyxvRkFBUTtBQUMvQixvQkFBb0IsbUJBQU8sQ0FBQyw4RkFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwwQkFBMEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixrQkFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3JwY2NsaWVudHMvaHR0cGJhdGNoY2xpZW50LmpzP2E5ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkh0dHBCYXRjaENsaWVudCA9IHZvaWQgMDtcbmNvbnN0IGpzb25fcnBjXzEgPSByZXF1aXJlKFwiQGNvc21qcy9qc29uLXJwY1wiKTtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCIuL2h0dHBcIik7XG5jb25zdCBycGNjbGllbnRfMSA9IHJlcXVpcmUoXCIuL3JwY2NsaWVudFwiKTtcbi8vIFRob3NlIHZhbHVlcyBhcmUgcHJpdmF0ZSBhbmQgY2FuIGNoYW5nZSBhbnkgdGltZS5cbi8vIERvZXMgYSB1c2VyIG5lZWQgdG8ga25vdyB0aGVtPyBJIGRvbid0IHRoaW5rIHNvLiBZb3UgZWl0aGVyIHNldFxuLy8gYSBjdXN0b20gdmFsdWUgb3IgbGVhdmUgdGhlIG9wdGlvbiBmaWVsZCB1bnNldC5cbmNvbnN0IGRlZmF1bHRIdHRwQmF0Y2hDbGllbnRPcHRpb25zID0ge1xuICAgIGRpc3BhdGNoSW50ZXJ2YWw6IDIwLFxuICAgIGJhdGNoU2l6ZUxpbWl0OiAyMCxcbn07XG5jbGFzcyBIdHRwQmF0Y2hDbGllbnQge1xuICAgIGNvbnN0cnVjdG9yKGVuZHBvaW50LCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgdGhpcy5xdWV1ZSA9IFtdO1xuICAgICAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICAgICAgICBiYXRjaFNpemVMaW1pdDogb3B0aW9ucy5iYXRjaFNpemVMaW1pdCA/PyBkZWZhdWx0SHR0cEJhdGNoQ2xpZW50T3B0aW9ucy5iYXRjaFNpemVMaW1pdCxcbiAgICAgICAgICAgIGRpc3BhdGNoSW50ZXJ2YWw6IG9wdGlvbnMuZGlzcGF0Y2hJbnRlcnZhbCA/PyBkZWZhdWx0SHR0cEJhdGNoQ2xpZW50T3B0aW9ucy5kaXNwYXRjaEludGVydmFsLFxuICAgICAgICB9O1xuICAgICAgICBpZiAodHlwZW9mIGVuZHBvaW50ID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgICBpZiAoISgwLCBycGNjbGllbnRfMS5oYXNQcm90b2NvbCkoZW5kcG9pbnQpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiRW5kcG9pbnQgVVJMIGlzIG1pc3NpbmcgYSBwcm90b2NvbC4gRXhwZWN0ZWQgJ2h0dHBzOi8vJyBvciAnaHR0cDovLycuXCIpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy51cmwgPSBlbmRwb2ludDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudXJsID0gZW5kcG9pbnQudXJsO1xuICAgICAgICAgICAgdGhpcy5oZWFkZXJzID0gZW5kcG9pbnQuaGVhZGVycztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnRpbWVyID0gc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy50aWNrKCksIG9wdGlvbnMuZGlzcGF0Y2hJbnRlcnZhbCk7XG4gICAgICAgIHRoaXMudmFsaWRhdGUoKTtcbiAgICB9XG4gICAgZGlzY29ubmVjdCgpIHtcbiAgICAgICAgdGhpcy50aW1lciAmJiBjbGVhckludGVydmFsKHRoaXMudGltZXIpO1xuICAgICAgICB0aGlzLnRpbWVyID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBhc3luYyBleGVjdXRlKHJlcXVlc3QpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgIHRoaXMucXVldWUucHVzaCh7IHJlcXVlc3QsIHJlc29sdmUsIHJlamVjdCB9KTtcbiAgICAgICAgICAgIGlmICh0aGlzLnF1ZXVlLmxlbmd0aCA+PSB0aGlzLm9wdGlvbnMuYmF0Y2hTaXplTGltaXQpIHtcbiAgICAgICAgICAgICAgICAvLyB0aGlzIHRyYWluIGlzIGZ1bGwsIGxldCdzIGdvXG4gICAgICAgICAgICAgICAgdGhpcy50aWNrKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB2YWxpZGF0ZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLm9wdGlvbnMuYmF0Y2hTaXplTGltaXQgfHxcbiAgICAgICAgICAgICFOdW1iZXIuaXNTYWZlSW50ZWdlcih0aGlzLm9wdGlvbnMuYmF0Y2hTaXplTGltaXQpIHx8XG4gICAgICAgICAgICB0aGlzLm9wdGlvbnMuYmF0Y2hTaXplTGltaXQgPCAxKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJiYXRjaFNpemVMaW1pdCBtdXN0IGJlIGEgc2FmZSBpbnRlZ2VyID49IDFcIik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogVGhpcyBpcyBjYWxsZWQgaW4gYW4gaW50ZXJ2YWwgd2hlcmUgcHJvbWlzZSByZWplY3Rpb25zIGNhbm5vdCBiZSBoYW5kbGVkLlxuICAgICAqIFNvIHRoaXMgaXMgbm90IGFzeW5jIGFuZCBIVFRQIGVycm9ycyBuZWVkIHRvIGJlIGhhbmRsZWQgYnkgdGhlIHF1ZXVlZCBwcm9taXNlcy5cbiAgICAgKi9cbiAgICB0aWNrKCkge1xuICAgICAgICAvLyBBdm9pZCByYWNlIGNvbmRpdGlvbnNcbiAgICAgICAgY29uc3QgYmF0Y2ggPSB0aGlzLnF1ZXVlLnNwbGljZSgwLCB0aGlzLm9wdGlvbnMuYmF0Y2hTaXplTGltaXQpO1xuICAgICAgICBpZiAoIWJhdGNoLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgY29uc3QgcmVxdWVzdHMgPSBiYXRjaC5tYXAoKHMpID0+IHMucmVxdWVzdCk7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RJZHMgPSByZXF1ZXN0cy5tYXAoKHJlcXVlc3QpID0+IHJlcXVlc3QuaWQpO1xuICAgICAgICAoMCwgaHR0cF8xLmh0dHApKFwiUE9TVFwiLCB0aGlzLnVybCwgdGhpcy5oZWFkZXJzLCByZXF1ZXN0cykudGhlbigocmF3KSA9PiB7XG4gICAgICAgICAgICAvLyBSZXF1ZXN0cyB3aXRoIGEgc2luZ2xlIGVudHJ5IHJldHVybiBhcyBhbiBvYmplY3RcbiAgICAgICAgICAgIGNvbnN0IGFyciA9IEFycmF5LmlzQXJyYXkocmF3KSA/IHJhdyA6IFtyYXddO1xuICAgICAgICAgICAgYXJyLmZvckVhY2goKGVsKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVxID0gYmF0Y2guZmluZCgocykgPT4gcy5yZXF1ZXN0LmlkID09PSBlbC5pZCk7XG4gICAgICAgICAgICAgICAgaWYgKCFyZXEpXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICBjb25zdCB7IHJlamVjdCwgcmVzb2x2ZSB9ID0gcmVxO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gKDAsIGpzb25fcnBjXzEucGFyc2VKc29uUnBjUmVzcG9uc2UpKGVsKTtcbiAgICAgICAgICAgICAgICBpZiAoKDAsIGpzb25fcnBjXzEuaXNKc29uUnBjRXJyb3JSZXNwb25zZSkocmVzcG9uc2UpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChuZXcgRXJyb3IoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZXJyb3IpKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSwgKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHJlcXVlc3RJZCBvZiByZXF1ZXN0SWRzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVxID0gYmF0Y2guZmluZCgocykgPT4gcy5yZXF1ZXN0LmlkID09PSByZXF1ZXN0SWQpO1xuICAgICAgICAgICAgICAgIGlmICghcmVxKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgcmVxLnJlamVjdChlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSHR0cEJhdGNoQ2xpZW50ID0gSHR0cEJhdGNoQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cGJhdGNoY2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HttpClient = void 0;\nconst json_rpc_1 = __webpack_require__(/*! @cosmjs/json-rpc */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/index.js\");\nconst http_1 = __webpack_require__(/*! ./http */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/http.js\");\nconst rpcclient_1 = __webpack_require__(/*! ./rpcclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js\");\nclass HttpClient {\n    constructor(endpoint) {\n        if (typeof endpoint === \"string\") {\n            if (!(0, rpcclient_1.hasProtocol)(endpoint)) {\n                throw new Error(\"Endpoint URL is missing a protocol. Expected 'https://' or 'http://'.\");\n            }\n            this.url = endpoint;\n        }\n        else {\n            this.url = endpoint.url;\n            this.headers = endpoint.headers;\n        }\n    }\n    disconnect() {\n        // nothing to be done\n    }\n    async execute(request) {\n        const response = (0, json_rpc_1.parseJsonRpcResponse)(await (0, http_1.http)(\"POST\", this.url, this.headers, request));\n        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n            throw new Error(JSON.stringify(response.error));\n        }\n        return response;\n    }\n}\nexports.HttpClient = HttpClient;\n//# sourceMappingURL=httpclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9ycGNjbGllbnRzL2h0dHBjbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsa0JBQWtCO0FBQ2xCLG1CQUFtQixtQkFBTyxDQUFDLDhFQUFrQjtBQUM3QyxlQUFlLG1CQUFPLENBQUMsb0ZBQVE7QUFDL0Isb0JBQW9CLG1CQUFPLENBQUMsOEZBQWE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3JwY2NsaWVudHMvaHR0cGNsaWVudC5qcz83MWM3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5IdHRwQ2xpZW50ID0gdm9pZCAwO1xuY29uc3QganNvbl9ycGNfMSA9IHJlcXVpcmUoXCJAY29zbWpzL2pzb24tcnBjXCIpO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcIi4vaHR0cFwiKTtcbmNvbnN0IHJwY2NsaWVudF8xID0gcmVxdWlyZShcIi4vcnBjY2xpZW50XCIpO1xuY2xhc3MgSHR0cENsaWVudCB7XG4gICAgY29uc3RydWN0b3IoZW5kcG9pbnQpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBlbmRwb2ludCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICAgICAgaWYgKCEoMCwgcnBjY2xpZW50XzEuaGFzUHJvdG9jb2wpKGVuZHBvaW50KSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkVuZHBvaW50IFVSTCBpcyBtaXNzaW5nIGEgcHJvdG9jb2wuIEV4cGVjdGVkICdodHRwczovLycgb3IgJ2h0dHA6Ly8nLlwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMudXJsID0gZW5kcG9pbnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnVybCA9IGVuZHBvaW50LnVybDtcbiAgICAgICAgICAgIHRoaXMuaGVhZGVycyA9IGVuZHBvaW50LmhlYWRlcnM7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGlzY29ubmVjdCgpIHtcbiAgICAgICAgLy8gbm90aGluZyB0byBiZSBkb25lXG4gICAgfVxuICAgIGFzeW5jIGV4ZWN1dGUocmVxdWVzdCkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9ICgwLCBqc29uX3JwY18xLnBhcnNlSnNvblJwY1Jlc3BvbnNlKShhd2FpdCAoMCwgaHR0cF8xLmh0dHApKFwiUE9TVFwiLCB0aGlzLnVybCwgdGhpcy5oZWFkZXJzLCByZXF1ZXN0KSk7XG4gICAgICAgIGlmICgoMCwganNvbl9ycGNfMS5pc0pzb25ScGNFcnJvclJlc3BvbnNlKShyZXNwb25zZSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihKU09OLnN0cmluZ2lmeShyZXNwb25zZS5lcnJvcikpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNwb25zZTtcbiAgICB9XG59XG5leHBvcnRzLkh0dHBDbGllbnQgPSBIdHRwQ2xpZW50O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aHR0cGNsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// This folder contains Tendermint-specific RPC clients\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebsocketClient = exports.instanceOfRpcStreamingClient = exports.HttpClient = exports.HttpBatchClient = void 0;\nvar httpbatchclient_1 = __webpack_require__(/*! ./httpbatchclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpbatchclient.js\");\nObject.defineProperty(exports, \"HttpBatchClient\", ({ enumerable: true, get: function () { return httpbatchclient_1.HttpBatchClient; } }));\nvar httpclient_1 = __webpack_require__(/*! ./httpclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/httpclient.js\");\nObject.defineProperty(exports, \"HttpClient\", ({ enumerable: true, get: function () { return httpclient_1.HttpClient; } }));\nvar rpcclient_1 = __webpack_require__(/*! ./rpcclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js\");\nObject.defineProperty(exports, \"instanceOfRpcStreamingClient\", ({ enumerable: true, get: function () { return rpcclient_1.instanceOfRpcStreamingClient; } }));\nvar websocketclient_1 = __webpack_require__(/*! ./websocketclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js\");\nObject.defineProperty(exports, \"WebsocketClient\", ({ enumerable: true, get: function () { return websocketclient_1.WebsocketClient; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9ycGNjbGllbnRzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCLEdBQUcsb0NBQW9DLEdBQUcsa0JBQWtCLEdBQUcsdUJBQXVCO0FBQzdHLHdCQUF3QixtQkFBTyxDQUFDLDBHQUFtQjtBQUNuRCxtREFBa0QsRUFBRSxxQ0FBcUMsNkNBQTZDLEVBQUM7QUFDdkksbUJBQW1CLG1CQUFPLENBQUMsZ0dBQWM7QUFDekMsOENBQTZDLEVBQUUscUNBQXFDLG1DQUFtQyxFQUFDO0FBQ3hILGtCQUFrQixtQkFBTyxDQUFDLDhGQUFhO0FBQ3ZDLGdFQUErRCxFQUFFLHFDQUFxQyxvREFBb0QsRUFBQztBQUMzSix3QkFBd0IsbUJBQU8sQ0FBQywwR0FBbUI7QUFDbkQsbURBQWtELEVBQUUscUNBQXFDLDZDQUE2QyxFQUFDO0FBQ3ZJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3JwY2NsaWVudHMvaW5kZXguanM/OGZiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFRoaXMgZm9sZGVyIGNvbnRhaW5zIFRlbmRlcm1pbnQtc3BlY2lmaWMgUlBDIGNsaWVudHNcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuV2Vic29ja2V0Q2xpZW50ID0gZXhwb3J0cy5pbnN0YW5jZU9mUnBjU3RyZWFtaW5nQ2xpZW50ID0gZXhwb3J0cy5IdHRwQ2xpZW50ID0gZXhwb3J0cy5IdHRwQmF0Y2hDbGllbnQgPSB2b2lkIDA7XG52YXIgaHR0cGJhdGNoY2xpZW50XzEgPSByZXF1aXJlKFwiLi9odHRwYmF0Y2hjbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIdHRwQmF0Y2hDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGh0dHBiYXRjaGNsaWVudF8xLkh0dHBCYXRjaENsaWVudDsgfSB9KTtcbnZhciBodHRwY2xpZW50XzEgPSByZXF1aXJlKFwiLi9odHRwY2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSHR0cENsaWVudFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gaHR0cGNsaWVudF8xLkh0dHBDbGllbnQ7IH0gfSk7XG52YXIgcnBjY2xpZW50XzEgPSByZXF1aXJlKFwiLi9ycGNjbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpbnN0YW5jZU9mUnBjU3RyZWFtaW5nQ2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBycGNjbGllbnRfMS5pbnN0YW5jZU9mUnBjU3RyZWFtaW5nQ2xpZW50OyB9IH0pO1xudmFyIHdlYnNvY2tldGNsaWVudF8xID0gcmVxdWlyZShcIi4vd2Vic29ja2V0Y2xpZW50XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiV2Vic29ja2V0Q2xpZW50XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB3ZWJzb2NrZXRjbGllbnRfMS5XZWJzb2NrZXRDbGllbnQ7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hasProtocol = exports.instanceOfRpcStreamingClient = void 0;\nfunction instanceOfRpcStreamingClient(client) {\n    return typeof client.listen === \"function\";\n}\nexports.instanceOfRpcStreamingClient = instanceOfRpcStreamingClient;\n// Helpers for all RPC clients\nfunction hasProtocol(url) {\n    return url.search(\"://\") !== -1;\n}\nexports.hasProtocol = hasProtocol;\n//# sourceMappingURL=rpcclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC9ycGNjbGllbnRzL3JwY2NsaWVudC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUIsR0FBRyxvQ0FBb0M7QUFDMUQ7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3JwY2NsaWVudHMvcnBjY2xpZW50LmpzPzgyNTMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhhc1Byb3RvY29sID0gZXhwb3J0cy5pbnN0YW5jZU9mUnBjU3RyZWFtaW5nQ2xpZW50ID0gdm9pZCAwO1xuZnVuY3Rpb24gaW5zdGFuY2VPZlJwY1N0cmVhbWluZ0NsaWVudChjbGllbnQpIHtcbiAgICByZXR1cm4gdHlwZW9mIGNsaWVudC5saXN0ZW4gPT09IFwiZnVuY3Rpb25cIjtcbn1cbmV4cG9ydHMuaW5zdGFuY2VPZlJwY1N0cmVhbWluZ0NsaWVudCA9IGluc3RhbmNlT2ZScGNTdHJlYW1pbmdDbGllbnQ7XG4vLyBIZWxwZXJzIGZvciBhbGwgUlBDIGNsaWVudHNcbmZ1bmN0aW9uIGhhc1Byb3RvY29sKHVybCkge1xuICAgIHJldHVybiB1cmwuc2VhcmNoKFwiOi8vXCIpICE9PSAtMTtcbn1cbmV4cG9ydHMuaGFzUHJvdG9jb2wgPSBoYXNQcm90b2NvbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJwY2NsaWVudC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.WebsocketClient = void 0;\nconst json_rpc_1 = __webpack_require__(/*! @cosmjs/json-rpc */ \"(ssr)/./node_modules/@cosmjs/json-rpc/build/index.js\");\nconst socket_1 = __webpack_require__(/*! @cosmjs/socket */ \"(ssr)/./node_modules/@cosmjs/socket/build/index.js\");\nconst stream_1 = __webpack_require__(/*! @cosmjs/stream */ \"(ssr)/./node_modules/@cosmjs/stream/build/index.js\");\nconst xstream_1 = __webpack_require__(/*! xstream */ \"(ssr)/./node_modules/xstream/index.js\");\nconst rpcclient_1 = __webpack_require__(/*! ./rpcclient */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/rpcclient.js\");\nfunction defaultErrorHandler(error) {\n    throw error;\n}\nfunction toJsonRpcResponse(message) {\n    // this should never happen, but I want an alert if it does\n    if (message.type !== \"message\") {\n        throw new Error(`Unexcepted message type on websocket: ${message.type}`);\n    }\n    const jsonRpcEvent = (0, json_rpc_1.parseJsonRpcResponse)(JSON.parse(message.data));\n    return jsonRpcEvent;\n}\nclass RpcEventProducer {\n    constructor(request, socket) {\n        this.running = false;\n        this.subscriptions = [];\n        this.request = request;\n        this.socket = socket;\n    }\n    /**\n     * Implementation of Producer.start\n     */\n    start(listener) {\n        if (this.running) {\n            throw Error(\"Already started. Please stop first before restarting.\");\n        }\n        this.running = true;\n        this.connectToClient(listener);\n        this.socket.queueRequest(JSON.stringify(this.request));\n    }\n    /**\n     * Implementation of Producer.stop\n     *\n     * Called by the stream when the stream's last listener stopped listening\n     * or when the producer completed.\n     */\n    stop() {\n        this.running = false;\n        // Tell the server we are done in order to save resources. We cannot wait for the result.\n        // This may fail when socket connection is not open, thus ignore errors in queueRequest\n        const endRequest = { ...this.request, method: \"unsubscribe\" };\n        try {\n            this.socket.queueRequest(JSON.stringify(endRequest));\n        }\n        catch (error) {\n            if (error instanceof Error && error.message.match(/socket has disconnected/i)) {\n                // ignore\n            }\n            else {\n                throw error;\n            }\n        }\n    }\n    connectToClient(listener) {\n        const responseStream = this.socket.events.map(toJsonRpcResponse);\n        // this should unsubscribe itself, so doesn't need to be removed explicitly\n        const idSubscription = responseStream\n            .filter((response) => response.id === this.request.id)\n            .subscribe({\n            next: (response) => {\n                if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n                    this.closeSubscriptions();\n                    listener.error(JSON.stringify(response.error));\n                }\n                idSubscription.unsubscribe();\n            },\n        });\n        // this will fire on a response (success or error)\n        // Tendermint adds an \"#event\" suffix for events that follow a previous subscription\n        // https://github.com/tendermint/tendermint/blob/v0.23.0/rpc/core/events.go#L107\n        const idEventSubscription = responseStream\n            .filter((response) => response.id === this.request.id)\n            .subscribe({\n            next: (response) => {\n                if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n                    this.closeSubscriptions();\n                    listener.error(JSON.stringify(response.error));\n                }\n                else {\n                    listener.next(response.result);\n                }\n            },\n        });\n        // this will fire in case the websocket disconnects cleanly\n        const nonResponseSubscription = responseStream.subscribe({\n            error: (error) => {\n                this.closeSubscriptions();\n                listener.error(error);\n            },\n            complete: () => {\n                this.closeSubscriptions();\n                listener.complete();\n            },\n        });\n        this.subscriptions.push(idSubscription, idEventSubscription, nonResponseSubscription);\n    }\n    closeSubscriptions() {\n        for (const subscription of this.subscriptions) {\n            subscription.unsubscribe();\n        }\n        // clear unused subscriptions\n        this.subscriptions = [];\n    }\n}\nclass WebsocketClient {\n    constructor(baseUrl, onError = defaultErrorHandler) {\n        // Lazily create streams and use the same stream when listening to the same query twice.\n        //\n        // Creating streams is cheap since producer is not started as long as nobody listens to events. Thus this\n        // map is never cleared and there is no need to do so. But unsubscribe all the subscriptions!\n        this.subscriptionStreams = new Map();\n        if (!(0, rpcclient_1.hasProtocol)(baseUrl)) {\n            throw new Error(\"Base URL is missing a protocol. Expected 'ws://' or 'wss://'.\");\n        }\n        // make sure we don't end up with ...//websocket\n        const path = baseUrl.endsWith(\"/\") ? \"websocket\" : \"/websocket\";\n        this.url = baseUrl + path;\n        this.socket = new socket_1.ReconnectingSocket(this.url);\n        const errorSubscription = this.socket.events.subscribe({\n            error: (error) => {\n                onError(error);\n                errorSubscription.unsubscribe();\n            },\n        });\n        this.jsonRpcResponseStream = this.socket.events.map(toJsonRpcResponse);\n        this.socket.connect();\n    }\n    async execute(request) {\n        const pendingResponse = this.responseForRequestId(request.id);\n        this.socket.queueRequest(JSON.stringify(request));\n        const response = await pendingResponse;\n        if ((0, json_rpc_1.isJsonRpcErrorResponse)(response)) {\n            throw new Error(JSON.stringify(response.error));\n        }\n        return response;\n    }\n    listen(request) {\n        if (request.method !== \"subscribe\") {\n            throw new Error(`Request method must be \"subscribe\" to start event listening`);\n        }\n        const query = request.params.query;\n        if (typeof query !== \"string\") {\n            throw new Error(\"request.params.query must be a string\");\n        }\n        if (!this.subscriptionStreams.has(query)) {\n            const producer = new RpcEventProducer(request, this.socket);\n            const stream = xstream_1.Stream.create(producer);\n            this.subscriptionStreams.set(query, stream);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this.subscriptionStreams.get(query).filter((response) => response.query !== undefined);\n    }\n    /**\n     * Resolves as soon as websocket is connected. execute() queues requests automatically,\n     * so this should be required for testing purposes only.\n     */\n    async connected() {\n        await this.socket.connectionStatus.waitFor(socket_1.ConnectionStatus.Connected);\n    }\n    disconnect() {\n        this.socket.disconnect();\n    }\n    async responseForRequestId(id) {\n        return (0, stream_1.firstEvent)(this.jsonRpcResponseStream.filter((r) => r.id === id));\n    }\n}\nexports.WebsocketClient = WebsocketClient;\n//# sourceMappingURL=websocketclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/websocketclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Responses = exports.Params = void 0;\nvar requests_1 = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js\");\nObject.defineProperty(exports, \"Params\", ({ enumerable: true, get: function () { return requests_1.Params; } }));\nvar responses_1 = __webpack_require__(/*! ./responses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js\");\nObject.defineProperty(exports, \"Responses\", ({ enumerable: true, get: function () { return responses_1.Responses; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzQvYWRhcHRvci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxjQUFjO0FBQ2xDLGlCQUFpQixtQkFBTyxDQUFDLHNHQUFZO0FBQ3JDLDBDQUF5QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM5RyxrQkFBa0IsbUJBQU8sQ0FBQyx3R0FBYTtBQUN2Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdGVuZGVybWludDM0L2FkYXB0b3IvaW5kZXguanM/ODg5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVzcG9uc2VzID0gZXhwb3J0cy5QYXJhbXMgPSB2b2lkIDA7XG52YXIgcmVxdWVzdHNfMSA9IHJlcXVpcmUoXCIuL3JlcXVlc3RzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFyYW1zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXF1ZXN0c18xLlBhcmFtczsgfSB9KTtcbnZhciByZXNwb25zZXNfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3BvbnNlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzcG9uc2VzXzEuUmVzcG9uc2VzOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Params = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst inthelpers_1 = __webpack_require__(/*! ../../inthelpers */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\");\nconst jsonrpc_1 = __webpack_require__(/*! ../../jsonrpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\");\nconst encodings_1 = __webpack_require__(/*! ../encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js\");\nconst requests = __importStar(__webpack_require__(/*! ../requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js\"));\nfunction encodeHeightParam(param) {\n    return {\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height),\n    };\n}\nfunction encodeBlockchainRequestParams(param) {\n    return {\n        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),\n        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight),\n    };\n}\nfunction encodeBlockSearchParams(params) {\n    return {\n        query: params.query,\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n        order_by: params.order_by,\n    };\n}\nfunction encodeAbciQueryParams(params) {\n    return {\n        path: (0, encodings_1.assertNotEmpty)(params.path),\n        data: (0, encoding_1.toHex)(params.data),\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),\n        prove: params.prove,\n    };\n}\nfunction encodeBroadcastTxParams(params) {\n    return {\n        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx)),\n    };\n}\nfunction encodeTxParams(params) {\n    return {\n        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),\n        prove: params.prove,\n    };\n}\nfunction encodeTxSearchParams(params) {\n    return {\n        query: params.query,\n        prove: params.prove,\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n        order_by: params.order_by,\n    };\n}\nfunction encodeValidatorsParams(params) {\n    return {\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n    };\n}\nclass Params {\n    static encodeAbciInfo(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeAbciQuery(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));\n    }\n    static encodeBlock(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeBlockchain(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));\n    }\n    static encodeBlockResults(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeBlockSearch(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));\n    }\n    static encodeBroadcastTx(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));\n    }\n    static encodeCommit(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeGenesis(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeHealth(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeNumUnconfirmedTxs(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeStatus(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeSubscribe(req) {\n        const eventTag = { key: \"tm.event\", value: req.query.type };\n        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });\n        return (0, jsonrpc_1.createJsonRpcRequest)(\"subscribe\", { query: query });\n    }\n    static encodeTx(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));\n    }\n    // TODO: encode params for query string???\n    static encodeTxSearch(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));\n    }\n    static encodeValidators(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));\n    }\n}\nexports.Params = Params;\n//# sourceMappingURL=requests.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst dates_1 = __webpack_require__(/*! ../../dates */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/dates.js\");\nconst inthelpers_1 = __webpack_require__(/*! ../../inthelpers */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\");\nconst types_1 = __webpack_require__(/*! ../../types */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/types.js\");\nconst encodings_1 = __webpack_require__(/*! ../encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js\");\nconst hasher_1 = __webpack_require__(/*! ../hasher */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js\");\nfunction decodeAbciInfo(data) {\n    return {\n        data: data.data,\n        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),\n        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash),\n    };\n}\nfunction decodeQueryProof(data) {\n    return {\n        ops: data.ops.map((op) => ({\n            type: op.type,\n            key: (0, encoding_1.fromBase64)(op.key),\n            data: (0, encoding_1.fromBase64)(op.data),\n        })),\n    };\n}\nfunction decodeAbciQuery(data) {\n    return {\n        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? \"\")),\n        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? \"\")),\n        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),\n        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),\n        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),\n        codespace: (0, encodings_1.assertString)(data.codespace ?? \"\"),\n        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),\n        log: data.log,\n        info: (0, encodings_1.assertString)(data.info ?? \"\"),\n    };\n}\nfunction decodeAttribute(attribute) {\n    return {\n        key: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(attribute.key)),\n        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(attribute.value ?? \"\")),\n    };\n}\nfunction decodeAttributes(attributes) {\n    return (0, encodings_1.assertArray)(attributes).map(decodeAttribute);\n}\nfunction decodeEvent(event) {\n    return {\n        type: event.type,\n        attributes: event.attributes ? decodeAttributes(event.attributes) : [],\n    };\n}\nexports.decodeEvent = decodeEvent;\nfunction decodeEvents(events) {\n    return (0, encodings_1.assertArray)(events).map(decodeEvent);\n}\nfunction decodeTxData(data) {\n    return {\n        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),\n        codespace: data.codespace,\n        log: data.log,\n        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),\n        events: data.events ? decodeEvents(data.events) : [],\n        gasWanted: (0, inthelpers_1.apiToBigInt)(data.gas_wanted ?? \"0\"),\n        gasUsed: (0, inthelpers_1.apiToBigInt)(data.gas_used ?? \"0\"),\n    };\n}\nfunction decodePubkey(data) {\n    if (\"Sum\" in data) {\n        // we don't need to check type because we're checking algorithm\n        const [[algorithm, value]] = Object.entries(data.Sum.value);\n        (0, utils_1.assert)(algorithm === \"ed25519\" || algorithm === \"secp256k1\", `unknown pubkey type: ${algorithm}`);\n        return {\n            algorithm,\n            data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value)),\n        };\n    }\n    else {\n        switch (data.type) {\n            // go-amino special code\n            case \"tendermint/PubKeyEd25519\":\n                return {\n                    algorithm: \"ed25519\",\n                    data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value)),\n                };\n            case \"tendermint/PubKeySecp256k1\":\n                return {\n                    algorithm: \"secp256k1\",\n                    data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value)),\n                };\n            default:\n                throw new Error(`unknown pubkey type: ${data.type}`);\n        }\n    }\n}\n/**\n * Note: we do not parse block.time_iota_ms for now because of this CHANGELOG entry\n *\n * > Add time_iota_ms to block's consensus parameters (not exposed to the application)\n * https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#v0310\n */\nfunction decodeBlockParams(data) {\n    return {\n        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),\n        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas)),\n    };\n}\nfunction decodeEvidenceParams(data) {\n    return {\n        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),\n        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration)),\n    };\n}\nfunction decodeConsensusParams(data) {\n    return {\n        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),\n        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence)),\n    };\n}\nfunction decodeValidatorUpdate(data) {\n    return {\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? \"0\"),\n    };\n}\nexports.decodeValidatorUpdate = decodeValidatorUpdate;\nfunction decodeBlockResults(data) {\n    return {\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        results: (data.txs_results || []).map(decodeTxData),\n        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),\n        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),\n        beginBlockEvents: decodeEvents(data.begin_block_events || []),\n        endBlockEvents: decodeEvents(data.end_block_events || []),\n    };\n}\nfunction decodeBlockId(data) {\n    return {\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        parts: {\n            total: (0, encodings_1.assertNotEmpty)(data.parts.total),\n            hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash)),\n        },\n    };\n}\nfunction decodeBlockVersion(data) {\n    return {\n        block: (0, inthelpers_1.apiToSmallInt)(data.block),\n        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0),\n    };\n}\nfunction decodeHeader(data) {\n    return {\n        version: decodeBlockVersion(data.version),\n        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),\n        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:\n        // { hash: '', parts: { total: 0, hash: '' } }\n        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,\n        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),\n        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),\n        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),\n        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),\n        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),\n        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),\n        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),\n        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),\n        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address)),\n    };\n}\nfunction decodeBlockMeta(data) {\n    return {\n        blockId: decodeBlockId(data.block_id),\n        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),\n        header: decodeHeader(data.header),\n        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs)),\n    };\n}\nfunction decodeBlockchain(data) {\n    return {\n        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),\n        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta),\n    };\n}\nfunction decodeBroadcastTxSync(data) {\n    return {\n        ...decodeTxData(data),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n    };\n}\nfunction decodeBroadcastTxCommit(data) {\n    return {\n        height: (0, inthelpers_1.apiToSmallInt)(data.height),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),\n        deliverTx: (0, encodings_1.may)(decodeTxData, data.deliver_tx),\n    };\n}\nfunction decodeBlockIdFlag(blockIdFlag) {\n    (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);\n    return blockIdFlag;\n}\nfunction decodeCommitSignature(data) {\n    return {\n        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),\n        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : undefined,\n        timestamp: data.timestamp ? (0, dates_1.fromRfc3339WithNanoseconds)(data.timestamp) : undefined,\n        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : undefined,\n    };\n}\nfunction decodeCommit(data) {\n    return {\n        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        round: (0, inthelpers_1.apiToSmallInt)(data.round),\n        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature),\n    };\n}\nfunction decodeCommitResponse(data) {\n    return {\n        canonical: (0, encodings_1.assertBoolean)(data.canonical),\n        header: decodeHeader(data.signed_header.header),\n        commit: decodeCommit(data.signed_header.commit),\n    };\n}\nfunction decodeValidatorGenesis(data) {\n    return {\n        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power)),\n    };\n}\nexports.decodeValidatorGenesis = decodeValidatorGenesis;\nfunction decodeGenesis(data) {\n    return {\n        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),\n        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),\n        consensusParams: decodeConsensusParams(data.consensus_params),\n        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],\n        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),\n        appState: data.app_state,\n    };\n}\nfunction decodeValidatorInfo(data) {\n    return {\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),\n        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),\n        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : undefined,\n    };\n}\nexports.decodeValidatorInfo = decodeValidatorInfo;\nfunction decodeNodeInfo(data) {\n    return {\n        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),\n        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),\n        network: (0, encodings_1.assertNotEmpty)(data.network),\n        version: (0, encodings_1.assertString)(data.version),\n        channels: (0, encodings_1.assertNotEmpty)(data.channels),\n        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),\n        other: (0, encodings_1.dictionaryToStringMap)(data.other),\n        protocolVersion: {\n            app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),\n            block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),\n            p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p)),\n        },\n    };\n}\nfunction decodeSyncInfo(data) {\n    const earliestBlockHeight = data.earliest_block_height\n        ? (0, inthelpers_1.apiToSmallInt)(data.earliest_block_height)\n        : undefined;\n    const earliestBlockTime = data.earliest_block_time\n        ? (0, dates_1.fromRfc3339WithNanoseconds)(data.earliest_block_time)\n        : undefined;\n    return {\n        earliestAppHash: data.earliest_app_hash ? (0, encoding_1.fromHex)(data.earliest_app_hash) : undefined,\n        earliestBlockHash: data.earliest_block_hash ? (0, encoding_1.fromHex)(data.earliest_block_hash) : undefined,\n        earliestBlockHeight: earliestBlockHeight || undefined,\n        earliestBlockTime: earliestBlockTime?.getTime() ? earliestBlockTime : undefined,\n        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),\n        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),\n        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),\n        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),\n        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up),\n    };\n}\nfunction decodeStatus(data) {\n    return {\n        nodeInfo: decodeNodeInfo(data.node_info),\n        syncInfo: decodeSyncInfo(data.sync_info),\n        validatorInfo: decodeValidatorInfo(data.validator_info),\n    };\n}\nfunction decodeTxProof(data) {\n    return {\n        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),\n        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),\n        proof: {\n            total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),\n            index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),\n            leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),\n            aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64),\n        },\n    };\n}\nfunction decodeTxResponse(data) {\n    return {\n        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),\n        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        proof: (0, encodings_1.may)(decodeTxProof, data.proof),\n    };\n}\nfunction decodeTxSearch(data) {\n    return {\n        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),\n        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse),\n    };\n}\nfunction decodeTxEvent(data) {\n    const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));\n    return {\n        tx: tx,\n        hash: (0, hasher_1.hashTx)(tx),\n        result: decodeTxData(data.result),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n    };\n}\nfunction decodeValidators(data) {\n    return {\n        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),\n        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),\n        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),\n        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),\n    };\n}\nfunction decodeBlock(data) {\n    return {\n        header: decodeHeader((0, encodings_1.assertObject)(data.header)),\n        // For the block at height 1, last commit is not set. This is represented in an empty object like this:\n        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }\n        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,\n        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],\n        // Lift up .evidence.evidence to just .evidence\n        // See https://github.com/tendermint/tendermint/issues/7697\n        evidence: data.evidence?.evidence ?? [],\n    };\n}\nfunction decodeBlockResponse(data) {\n    return {\n        blockId: decodeBlockId(data.block_id),\n        block: decodeBlock(data.block),\n    };\n}\nfunction decodeBlockSearch(data) {\n    return {\n        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),\n        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse),\n    };\n}\nfunction decodeNumUnconfirmedTxs(data) {\n    return {\n        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),\n        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes)),\n    };\n}\nclass Responses {\n    static decodeAbciInfo(response) {\n        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));\n    }\n    static decodeAbciQuery(response) {\n        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));\n    }\n    static decodeBlock(response) {\n        return decodeBlockResponse(response.result);\n    }\n    static decodeBlockResults(response) {\n        return decodeBlockResults(response.result);\n    }\n    static decodeBlockSearch(response) {\n        return decodeBlockSearch(response.result);\n    }\n    static decodeBlockchain(response) {\n        return decodeBlockchain(response.result);\n    }\n    static decodeBroadcastTxSync(response) {\n        return decodeBroadcastTxSync(response.result);\n    }\n    static decodeBroadcastTxAsync(response) {\n        return Responses.decodeBroadcastTxSync(response);\n    }\n    static decodeBroadcastTxCommit(response) {\n        return decodeBroadcastTxCommit(response.result);\n    }\n    static decodeCommit(response) {\n        return decodeCommitResponse(response.result);\n    }\n    static decodeGenesis(response) {\n        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));\n    }\n    static decodeHealth() {\n        return null;\n    }\n    static decodeNumUnconfirmedTxs(response) {\n        return decodeNumUnconfirmedTxs(response.result);\n    }\n    static decodeStatus(response) {\n        return decodeStatus(response.result);\n    }\n    static decodeNewBlockEvent(event) {\n        return decodeBlock(event.data.value.block);\n    }\n    static decodeNewBlockHeaderEvent(event) {\n        return decodeHeader(event.data.value.header);\n    }\n    static decodeTxEvent(event) {\n        return decodeTxEvent(event.data.value.TxResult);\n    }\n    static decodeTx(response) {\n        return decodeTxResponse(response.result);\n    }\n    static decodeTxSearch(response) {\n        return decodeTxSearch(response.result);\n    }\n    static decodeValidators(response) {\n        return decodeValidators(response.result);\n    }\n}\nexports.Responses = Responses;\n//# sourceMappingURL=responses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/responses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A runtime checker that ensures a given value is set (i.e. not undefined or null)\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n */\nfunction assertSet(value) {\n    if (value === undefined) {\n        throw new Error(\"Value must not be undefined\");\n    }\n    if (value === null) {\n        throw new Error(\"Value must not be null\");\n    }\n    return value;\n}\nexports.assertSet = assertSet;\n/**\n * A runtime checker that ensures a given value is a boolean\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertBoolean(value) {\n    assertSet(value);\n    if (typeof value !== \"boolean\") {\n        throw new Error(\"Value must be a boolean\");\n    }\n    return value;\n}\nexports.assertBoolean = assertBoolean;\n/**\n * A runtime checker that ensures a given value is a string.\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertString(value) {\n    assertSet(value);\n    if (typeof value !== \"string\") {\n        throw new Error(\"Value must be a string\");\n    }\n    return value;\n}\nexports.assertString = assertString;\n/**\n * A runtime checker that ensures a given value is a number\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertNumber(value) {\n    assertSet(value);\n    if (typeof value !== \"number\") {\n        throw new Error(\"Value must be a number\");\n    }\n    return value;\n}\nexports.assertNumber = assertNumber;\n/**\n * A runtime checker that ensures a given value is an array\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertArray(value) {\n    assertSet(value);\n    if (!Array.isArray(value)) {\n        throw new Error(\"Value must be a an array\");\n    }\n    return value;\n}\nexports.assertArray = assertArray;\n/**\n * A runtime checker that ensures a given value is an object in the sense of JSON\n * (an unordered collection of key–value pairs where the keys are strings)\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertObject(value) {\n    assertSet(value);\n    if (typeof value !== \"object\") {\n        throw new Error(\"Value must be an object\");\n    }\n    // Exclude special kind of objects like Array, Date or Uint8Array\n    // Object.prototype.toString() returns a specified value:\n    // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring\n    if (Object.prototype.toString.call(value) !== \"[object Object]\") {\n        throw new Error(\"Value must be a simple object\");\n    }\n    return value;\n}\nexports.assertObject = assertObject;\n/**\n * Throws an error if value matches the empty value for the\n * given type (array/string of length 0, number of value 0, ...)\n *\n * Otherwise returns the value.\n *\n * This implies assertSet\n */\nfunction assertNotEmpty(value) {\n    assertSet(value);\n    if (typeof value === \"number\" && value === 0) {\n        throw new Error(\"must provide a non-zero value\");\n    }\n    else if (value.length === 0) {\n        throw new Error(\"must provide a non-empty value\");\n    }\n    return value;\n}\nexports.assertNotEmpty = assertNotEmpty;\n// may will run the transform if value is defined, otherwise returns undefined\nfunction may(transform, value) {\n    return value === undefined || value === null ? undefined : transform(value);\n}\nexports.may = may;\nfunction dictionaryToStringMap(obj) {\n    const out = new Map();\n    for (const key of Object.keys(obj)) {\n        const value = obj[key];\n        if (typeof value !== \"string\") {\n            throw new Error(\"Found dictionary value of type other than string\");\n        }\n        out.set(key, value);\n    }\n    return out;\n}\nexports.dictionaryToStringMap = dictionaryToStringMap;\n// Encodings needed for hashing block headers\n// Several of these functions are inspired by https://github.com/nomic-io/js-tendermint/blob/tendermint-0.30/src/\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L193-L195\nfunction encodeString(s) {\n    const utf8 = (0, encoding_1.toUtf8)(s);\n    return Uint8Array.from([utf8.length, ...utf8]);\n}\nexports.encodeString = encodeString;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L79-L87\nfunction encodeUvarint(n) {\n    return n >= 0x80\n        ? // eslint-disable-next-line no-bitwise\n            Uint8Array.from([(n & 0xff) | 0x80, ...encodeUvarint(n >> 7)])\n        : // eslint-disable-next-line no-bitwise\n            Uint8Array.from([n & 0xff]);\n}\nexports.encodeUvarint = encodeUvarint;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L134-L178\nfunction encodeTime(time) {\n    const milliseconds = time.getTime();\n    const seconds = Math.floor(milliseconds / 1000);\n    const secondsArray = seconds ? [0x08, ...encodeUvarint(seconds)] : new Uint8Array();\n    const nanoseconds = (time.nanoseconds || 0) + (milliseconds % 1000) * 1e6;\n    const nanosecondsArray = nanoseconds ? [0x10, ...encodeUvarint(nanoseconds)] : new Uint8Array();\n    return Uint8Array.from([...secondsArray, ...nanosecondsArray]);\n}\nexports.encodeTime = encodeTime;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L180-L187\nfunction encodeBytes(bytes) {\n    // Since we're only dealing with short byte arrays we don't need a full VarBuffer implementation yet\n    if (bytes.length >= 0x80)\n        throw new Error(\"Not implemented for byte arrays of length 128 or more\");\n    return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();\n}\nexports.encodeBytes = encodeBytes;\nfunction encodeVersion(version) {\n    const blockArray = version.block\n        ? Uint8Array.from([0x08, ...encodeUvarint(version.block)])\n        : new Uint8Array();\n    const appArray = version.app ? Uint8Array.from([0x10, ...encodeUvarint(version.app)]) : new Uint8Array();\n    return Uint8Array.from([...blockArray, ...appArray]);\n}\nexports.encodeVersion = encodeVersion;\nfunction encodeBlockId(blockId) {\n    return Uint8Array.from([\n        0x0a,\n        blockId.hash.length,\n        ...blockId.hash,\n        0x12,\n        blockId.parts.hash.length + 4,\n        0x08,\n        blockId.parts.total,\n        0x12,\n        blockId.parts.hash.length,\n        ...blockId.parts.hash,\n    ]);\n}\nexports.encodeBlockId = encodeBlockId;\n//# sourceMappingURL=encodings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashBlock = exports.hashTx = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encodings_1 = __webpack_require__(/*! ./encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/encodings.js\");\n// hash is sha256\n// https://github.com/tendermint/tendermint/blob/master/UPGRADING.md#v0260\nfunction hashTx(tx) {\n    return (0, crypto_1.sha256)(tx);\n}\nexports.hashTx = hashTx;\nfunction getSplitPoint(n) {\n    if (n < 1)\n        throw new Error(\"Cannot split an empty tree\");\n    const largestPowerOf2 = 2 ** Math.floor(Math.log2(n));\n    return largestPowerOf2 < n ? largestPowerOf2 : largestPowerOf2 / 2;\n}\nfunction hashLeaf(leaf) {\n    const hash = new crypto_1.Sha256(Uint8Array.from([0]));\n    hash.update(leaf);\n    return hash.digest();\n}\nfunction hashInner(left, right) {\n    const hash = new crypto_1.Sha256(Uint8Array.from([1]));\n    hash.update(left);\n    hash.update(right);\n    return hash.digest();\n}\n// See https://github.com/tendermint/tendermint/blob/v0.31.8/docs/spec/blockchain/encoding.md#merkleroot\n// Note: the hashes input may not actually be hashes, especially before a recursive call\nfunction hashTree(hashes) {\n    switch (hashes.length) {\n        case 0:\n            throw new Error(\"Cannot hash empty tree\");\n        case 1:\n            return hashLeaf(hashes[0]);\n        default: {\n            const slicePoint = getSplitPoint(hashes.length);\n            const left = hashTree(hashes.slice(0, slicePoint));\n            const right = hashTree(hashes.slice(slicePoint));\n            return hashInner(left, right);\n        }\n    }\n}\nfunction hashBlock(header) {\n    if (!header.lastBlockId) {\n        throw new Error(\"Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.\");\n    }\n    const encodedFields = [\n        (0, encodings_1.encodeVersion)(header.version),\n        (0, encodings_1.encodeString)(header.chainId),\n        (0, encodings_1.encodeUvarint)(header.height),\n        (0, encodings_1.encodeTime)(header.time),\n        (0, encodings_1.encodeBlockId)(header.lastBlockId),\n        (0, encodings_1.encodeBytes)(header.lastCommitHash),\n        (0, encodings_1.encodeBytes)(header.dataHash),\n        (0, encodings_1.encodeBytes)(header.validatorsHash),\n        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),\n        (0, encodings_1.encodeBytes)(header.consensusHash),\n        (0, encodings_1.encodeBytes)(header.appHash),\n        (0, encodings_1.encodeBytes)(header.lastResultsHash),\n        (0, encodings_1.encodeBytes)(header.evidenceHash),\n        (0, encodings_1.encodeBytes)(header.proposerAddress),\n    ];\n    return hashTree(encodedFields);\n}\nexports.hashBlock = hashBlock;\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzQvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGNBQWM7QUFDbEMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG9CQUFvQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdGVuZGVybWludDM0L2hhc2hlci5qcz8zNTQ5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYXNoQmxvY2sgPSBleHBvcnRzLmhhc2hUeCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdzXzEgPSByZXF1aXJlKFwiLi9lbmNvZGluZ3NcIik7XG4vLyBoYXNoIGlzIHNoYTI1NlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21hc3Rlci9VUEdSQURJTkcubWQjdjAyNjBcbmZ1bmN0aW9uIGhhc2hUeCh0eCkge1xuICAgIHJldHVybiAoMCwgY3J5cHRvXzEuc2hhMjU2KSh0eCk7XG59XG5leHBvcnRzLmhhc2hUeCA9IGhhc2hUeDtcbmZ1bmN0aW9uIGdldFNwbGl0UG9pbnQobikge1xuICAgIGlmIChuIDwgMSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNwbGl0IGFuIGVtcHR5IHRyZWVcIik7XG4gICAgY29uc3QgbGFyZ2VzdFBvd2VyT2YyID0gMiAqKiBNYXRoLmZsb29yKE1hdGgubG9nMihuKSk7XG4gICAgcmV0dXJuIGxhcmdlc3RQb3dlck9mMiA8IG4gPyBsYXJnZXN0UG93ZXJPZjIgOiBsYXJnZXN0UG93ZXJPZjIgLyAyO1xufVxuZnVuY3Rpb24gaGFzaExlYWYobGVhZikge1xuICAgIGNvbnN0IGhhc2ggPSBuZXcgY3J5cHRvXzEuU2hhMjU2KFVpbnQ4QXJyYXkuZnJvbShbMF0pKTtcbiAgICBoYXNoLnVwZGF0ZShsZWFmKTtcbiAgICByZXR1cm4gaGFzaC5kaWdlc3QoKTtcbn1cbmZ1bmN0aW9uIGhhc2hJbm5lcihsZWZ0LCByaWdodCkge1xuICAgIGNvbnN0IGhhc2ggPSBuZXcgY3J5cHRvXzEuU2hhMjU2KFVpbnQ4QXJyYXkuZnJvbShbMV0pKTtcbiAgICBoYXNoLnVwZGF0ZShsZWZ0KTtcbiAgICBoYXNoLnVwZGF0ZShyaWdodCk7XG4gICAgcmV0dXJuIGhhc2guZGlnZXN0KCk7XG59XG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL3YwLjMxLjgvZG9jcy9zcGVjL2Jsb2NrY2hhaW4vZW5jb2RpbmcubWQjbWVya2xlcm9vdFxuLy8gTm90ZTogdGhlIGhhc2hlcyBpbnB1dCBtYXkgbm90IGFjdHVhbGx5IGJlIGhhc2hlcywgZXNwZWNpYWxseSBiZWZvcmUgYSByZWN1cnNpdmUgY2FsbFxuZnVuY3Rpb24gaGFzaFRyZWUoaGFzaGVzKSB7XG4gICAgc3dpdGNoIChoYXNoZXMubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBoYXNoIGVtcHR5IHRyZWVcIik7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHJldHVybiBoYXNoTGVhZihoYXNoZXNbMF0pO1xuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBjb25zdCBzbGljZVBvaW50ID0gZ2V0U3BsaXRQb2ludChoYXNoZXMubGVuZ3RoKTtcbiAgICAgICAgICAgIGNvbnN0IGxlZnQgPSBoYXNoVHJlZShoYXNoZXMuc2xpY2UoMCwgc2xpY2VQb2ludCkpO1xuICAgICAgICAgICAgY29uc3QgcmlnaHQgPSBoYXNoVHJlZShoYXNoZXMuc2xpY2Uoc2xpY2VQb2ludCkpO1xuICAgICAgICAgICAgcmV0dXJuIGhhc2hJbm5lcihsZWZ0LCByaWdodCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiBoYXNoQmxvY2soaGVhZGVyKSB7XG4gICAgaWYgKCFoZWFkZXIubGFzdEJsb2NrSWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSGFzaGluZyBhIGJsb2NrIGhlYWRlciB3aXRoIG5vIGxhc3QgYmxvY2sgSUQgKGkuZS4gaGVhZGVyIGF0IGhlaWdodCAxKSBpcyBub3Qgc3VwcG9ydGVkLiBJZiB5b3UgbmVlZCB0aGlzLCBjb250cmlidXRpb25zIGFyZSB3ZWxjb21lLiBQbGVhc2UgYWRkIGRvY3VtZW50YXRpb24gYW5kIHRlc3QgdmVjdG9ycyBmb3IgdGhpcyBjYXNlLlwiKTtcbiAgICB9XG4gICAgY29uc3QgZW5jb2RlZEZpZWxkcyA9IFtcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZVZlcnNpb24pKGhlYWRlci52ZXJzaW9uKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZVN0cmluZykoaGVhZGVyLmNoYWluSWQpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlVXZhcmludCkoaGVhZGVyLmhlaWdodCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVUaW1lKShoZWFkZXIudGltZSksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCbG9ja0lkKShoZWFkZXIubGFzdEJsb2NrSWQpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5sYXN0Q29tbWl0SGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmRhdGFIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIudmFsaWRhdG9yc0hhc2gpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5uZXh0VmFsaWRhdG9yc0hhc2gpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5jb25zZW5zdXNIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIuYXBwSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmxhc3RSZXN1bHRzSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmV2aWRlbmNlSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLnByb3Bvc2VyQWRkcmVzcyksXG4gICAgXTtcbiAgICByZXR1cm4gaGFzaFRyZWUoZW5jb2RlZEZpZWxkcyk7XG59XG5leHBvcnRzLmhhc2hCbG9jayA9IGhhc2hCbG9jaztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Note: all exports in this module are publicly available via\n// `import { tendermint34 } from \"@cosmjs/tendermint-rpc\"`\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tendermint34Client = exports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = void 0;\nvar requests_1 = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js\");\nObject.defineProperty(exports, \"Method\", ({ enumerable: true, get: function () { return requests_1.Method; } }));\nObject.defineProperty(exports, \"SubscriptionEventType\", ({ enumerable: true, get: function () { return requests_1.SubscriptionEventType; } }));\nvar responses_1 = __webpack_require__(/*! ./responses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js\");\nObject.defineProperty(exports, \"broadcastTxCommitSuccess\", ({ enumerable: true, get: function () { return responses_1.broadcastTxCommitSuccess; } }));\nObject.defineProperty(exports, \"broadcastTxSyncSuccess\", ({ enumerable: true, get: function () { return responses_1.broadcastTxSyncSuccess; } }));\nObject.defineProperty(exports, \"VoteType\", ({ enumerable: true, get: function () { return responses_1.VoteType; } }));\nvar tendermint34client_1 = __webpack_require__(/*! ./tendermint34client */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js\");\nObject.defineProperty(exports, \"Tendermint34Client\", ({ enumerable: true, get: function () { return tendermint34client_1.Tendermint34Client; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzQvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLGFBQWEsZUFBZTtBQUM1Qiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsZ0JBQWdCLEdBQUcsOEJBQThCLEdBQUcsZ0NBQWdDLEdBQUcsNkJBQTZCLEdBQUcsY0FBYztBQUNsSyxpQkFBaUIsbUJBQU8sQ0FBQyw4RkFBWTtBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUcseURBQXdELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQzVJLGtCQUFrQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3ZDLDREQUEyRCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNuSiwwREFBeUQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDL0ksNENBQTJDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ25ILDJCQUEyQixtQkFBTyxDQUFDLGtIQUFzQjtBQUN6RCxzREFBcUQsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDaEoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdGVuZGVybWludDM0L2luZGV4LmpzPzllOTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBOb3RlOiBhbGwgZXhwb3J0cyBpbiB0aGlzIG1vZHVsZSBhcmUgcHVibGljbHkgYXZhaWxhYmxlIHZpYVxuLy8gYGltcG9ydCB7IHRlbmRlcm1pbnQzNCB9IGZyb20gXCJAY29zbWpzL3RlbmRlcm1pbnQtcnBjXCJgXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRlbmRlcm1pbnQzNENsaWVudCA9IGV4cG9ydHMuVm90ZVR5cGUgPSBleHBvcnRzLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MgPSBleHBvcnRzLmJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzcyA9IGV4cG9ydHMuU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0gZXhwb3J0cy5NZXRob2QgPSB2b2lkIDA7XG52YXIgcmVxdWVzdHNfMSA9IHJlcXVpcmUoXCIuL3JlcXVlc3RzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWV0aG9kXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXF1ZXN0c18xLk1ldGhvZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlN1YnNjcmlwdGlvbkV2ZW50VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVxdWVzdHNfMS5TdWJzY3JpcHRpb25FdmVudFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VzXzEgPSByZXF1aXJlKFwiLi9yZXNwb25zZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJicm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlc18xLmJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImJyb2FkY2FzdFR4U3luY1N1Y2Nlc3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlc18xLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJWb3RlVHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzcG9uc2VzXzEuVm90ZVR5cGU7IH0gfSk7XG52YXIgdGVuZGVybWludDM0Y2xpZW50XzEgPSByZXF1aXJlKFwiLi90ZW5kZXJtaW50MzRjbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZW5kZXJtaW50MzRDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRlbmRlcm1pbnQzNGNsaWVudF8xLlRlbmRlcm1pbnQzNENsaWVudDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* eslint-disable @typescript-eslint/naming-convention */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;\n/**\n * RPC methods as documented in https://docs.tendermint.com/master/rpc/\n *\n * Enum raw value must match the spelling in the \"shell\" example call (snake_case)\n */\nvar Method;\n(function (Method) {\n    Method[\"AbciInfo\"] = \"abci_info\";\n    Method[\"AbciQuery\"] = \"abci_query\";\n    Method[\"Block\"] = \"block\";\n    /** Get block headers for minHeight <= height <= maxHeight. */\n    Method[\"Blockchain\"] = \"blockchain\";\n    Method[\"BlockResults\"] = \"block_results\";\n    Method[\"BlockSearch\"] = \"block_search\";\n    Method[\"BroadcastTxAsync\"] = \"broadcast_tx_async\";\n    Method[\"BroadcastTxSync\"] = \"broadcast_tx_sync\";\n    Method[\"BroadcastTxCommit\"] = \"broadcast_tx_commit\";\n    Method[\"Commit\"] = \"commit\";\n    Method[\"Genesis\"] = \"genesis\";\n    Method[\"Health\"] = \"health\";\n    Method[\"NumUnconfirmedTxs\"] = \"num_unconfirmed_txs\";\n    Method[\"Status\"] = \"status\";\n    Method[\"Subscribe\"] = \"subscribe\";\n    Method[\"Tx\"] = \"tx\";\n    Method[\"TxSearch\"] = \"tx_search\";\n    Method[\"Validators\"] = \"validators\";\n    Method[\"Unsubscribe\"] = \"unsubscribe\";\n})(Method = exports.Method || (exports.Method = {}));\n/**\n * Raw values must match the tendermint event name\n *\n * @see https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n */\nvar SubscriptionEventType;\n(function (SubscriptionEventType) {\n    SubscriptionEventType[\"NewBlock\"] = \"NewBlock\";\n    SubscriptionEventType[\"NewBlockHeader\"] = \"NewBlockHeader\";\n    SubscriptionEventType[\"Tx\"] = \"Tx\";\n})(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));\nfunction buildQuery(components) {\n    const tags = components.tags ? components.tags : [];\n    const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);\n    const rawComponents = components.raw ? [components.raw] : [];\n    return [...tagComponents, ...rawComponents].join(\" AND \");\n}\nexports.buildQuery = buildQuery;\n//# sourceMappingURL=requests.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzQvcmVxdWVzdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyw2QkFBNkIsR0FBRyxjQUFjO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOEJBQThCLGNBQWMsS0FBSztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNERBQTRELDZCQUE2QixLQUFLO0FBQy9GO0FBQ0E7QUFDQSwrQ0FBK0MsUUFBUSxJQUFJLFVBQVU7QUFDckU7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3RlbmRlcm1pbnQzNC9yZXF1ZXN0cy5qcz9mOGIyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJ1aWxkUXVlcnkgPSBleHBvcnRzLlN1YnNjcmlwdGlvbkV2ZW50VHlwZSA9IGV4cG9ydHMuTWV0aG9kID0gdm9pZCAwO1xuLyoqXG4gKiBSUEMgbWV0aG9kcyBhcyBkb2N1bWVudGVkIGluIGh0dHBzOi8vZG9jcy50ZW5kZXJtaW50LmNvbS9tYXN0ZXIvcnBjL1xuICpcbiAqIEVudW0gcmF3IHZhbHVlIG11c3QgbWF0Y2ggdGhlIHNwZWxsaW5nIGluIHRoZSBcInNoZWxsXCIgZXhhbXBsZSBjYWxsIChzbmFrZV9jYXNlKVxuICovXG52YXIgTWV0aG9kO1xuKGZ1bmN0aW9uIChNZXRob2QpIHtcbiAgICBNZXRob2RbXCJBYmNpSW5mb1wiXSA9IFwiYWJjaV9pbmZvXCI7XG4gICAgTWV0aG9kW1wiQWJjaVF1ZXJ5XCJdID0gXCJhYmNpX3F1ZXJ5XCI7XG4gICAgTWV0aG9kW1wiQmxvY2tcIl0gPSBcImJsb2NrXCI7XG4gICAgLyoqIEdldCBibG9jayBoZWFkZXJzIGZvciBtaW5IZWlnaHQgPD0gaGVpZ2h0IDw9IG1heEhlaWdodC4gKi9cbiAgICBNZXRob2RbXCJCbG9ja2NoYWluXCJdID0gXCJibG9ja2NoYWluXCI7XG4gICAgTWV0aG9kW1wiQmxvY2tSZXN1bHRzXCJdID0gXCJibG9ja19yZXN1bHRzXCI7XG4gICAgTWV0aG9kW1wiQmxvY2tTZWFyY2hcIl0gPSBcImJsb2NrX3NlYXJjaFwiO1xuICAgIE1ldGhvZFtcIkJyb2FkY2FzdFR4QXN5bmNcIl0gPSBcImJyb2FkY2FzdF90eF9hc3luY1wiO1xuICAgIE1ldGhvZFtcIkJyb2FkY2FzdFR4U3luY1wiXSA9IFwiYnJvYWRjYXN0X3R4X3N5bmNcIjtcbiAgICBNZXRob2RbXCJCcm9hZGNhc3RUeENvbW1pdFwiXSA9IFwiYnJvYWRjYXN0X3R4X2NvbW1pdFwiO1xuICAgIE1ldGhvZFtcIkNvbW1pdFwiXSA9IFwiY29tbWl0XCI7XG4gICAgTWV0aG9kW1wiR2VuZXNpc1wiXSA9IFwiZ2VuZXNpc1wiO1xuICAgIE1ldGhvZFtcIkhlYWx0aFwiXSA9IFwiaGVhbHRoXCI7XG4gICAgTWV0aG9kW1wiTnVtVW5jb25maXJtZWRUeHNcIl0gPSBcIm51bV91bmNvbmZpcm1lZF90eHNcIjtcbiAgICBNZXRob2RbXCJTdGF0dXNcIl0gPSBcInN0YXR1c1wiO1xuICAgIE1ldGhvZFtcIlN1YnNjcmliZVwiXSA9IFwic3Vic2NyaWJlXCI7XG4gICAgTWV0aG9kW1wiVHhcIl0gPSBcInR4XCI7XG4gICAgTWV0aG9kW1wiVHhTZWFyY2hcIl0gPSBcInR4X3NlYXJjaFwiO1xuICAgIE1ldGhvZFtcIlZhbGlkYXRvcnNcIl0gPSBcInZhbGlkYXRvcnNcIjtcbiAgICBNZXRob2RbXCJVbnN1YnNjcmliZVwiXSA9IFwidW5zdWJzY3JpYmVcIjtcbn0pKE1ldGhvZCA9IGV4cG9ydHMuTWV0aG9kIHx8IChleHBvcnRzLk1ldGhvZCA9IHt9KSk7XG4vKipcbiAqIFJhdyB2YWx1ZXMgbXVzdCBtYXRjaCB0aGUgdGVuZGVybWludCBldmVudCBuYW1lXG4gKlxuICogQHNlZSBodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC90eXBlcyNwa2ctY29uc3RhbnRzXG4gKi9cbnZhciBTdWJzY3JpcHRpb25FdmVudFR5cGU7XG4oZnVuY3Rpb24gKFN1YnNjcmlwdGlvbkV2ZW50VHlwZSkge1xuICAgIFN1YnNjcmlwdGlvbkV2ZW50VHlwZVtcIk5ld0Jsb2NrXCJdID0gXCJOZXdCbG9ja1wiO1xuICAgIFN1YnNjcmlwdGlvbkV2ZW50VHlwZVtcIk5ld0Jsb2NrSGVhZGVyXCJdID0gXCJOZXdCbG9ja0hlYWRlclwiO1xuICAgIFN1YnNjcmlwdGlvbkV2ZW50VHlwZVtcIlR4XCJdID0gXCJUeFwiO1xufSkoU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0gZXhwb3J0cy5TdWJzY3JpcHRpb25FdmVudFR5cGUgfHwgKGV4cG9ydHMuU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0ge30pKTtcbmZ1bmN0aW9uIGJ1aWxkUXVlcnkoY29tcG9uZW50cykge1xuICAgIGNvbnN0IHRhZ3MgPSBjb21wb25lbnRzLnRhZ3MgPyBjb21wb25lbnRzLnRhZ3MgOiBbXTtcbiAgICBjb25zdCB0YWdDb21wb25lbnRzID0gdGFncy5tYXAoKHRhZykgPT4gYCR7dGFnLmtleX09JyR7dGFnLnZhbHVlfSdgKTtcbiAgICBjb25zdCByYXdDb21wb25lbnRzID0gY29tcG9uZW50cy5yYXcgPyBbY29tcG9uZW50cy5yYXddIDogW107XG4gICAgcmV0dXJuIFsuLi50YWdDb21wb25lbnRzLCAuLi5yYXdDb21wb25lbnRzXS5qb2luKFwiIEFORCBcIik7XG59XG5leHBvcnRzLmJ1aWxkUXVlcnkgPSBidWlsZFF1ZXJ5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;\n/**\n * Returns true iff transaction made it successfully into the transaction pool\n */\nfunction broadcastTxSyncSuccess(res) {\n    // code must be 0 on success\n    return res.code === 0;\n}\nexports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;\n/**\n * Returns true iff transaction made it successfully into a block\n * (i.e. success in `check_tx` and `deliver_tx` field)\n */\nfunction broadcastTxCommitSuccess(response) {\n    // code must be 0 on success\n    // deliverTx may be present but empty on failure\n    return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;\n}\nexports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;\n/**\n * raw values from https://github.com/tendermint/tendermint/blob/dfa9a9a30a666132425b29454e90a472aa579a48/types/vote.go#L44\n */\nvar VoteType;\n(function (VoteType) {\n    VoteType[VoteType[\"PreVote\"] = 1] = \"PreVote\";\n    VoteType[VoteType[\"PreCommit\"] = 2] = \"PreCommit\";\n})(VoteType = exports.VoteType || (exports.VoteType = {}));\n//# sourceMappingURL=responses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzQvcmVzcG9uc2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGdDQUFnQyxHQUFHLDhCQUE4QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQyxnQkFBZ0IsS0FBSztBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzQvcmVzcG9uc2VzLmpzPzEwNTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZvdGVUeXBlID0gZXhwb3J0cy5icm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3MgPSBleHBvcnRzLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MgPSB2b2lkIDA7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZmYgdHJhbnNhY3Rpb24gbWFkZSBpdCBzdWNjZXNzZnVsbHkgaW50byB0aGUgdHJhbnNhY3Rpb24gcG9vbFxuICovXG5mdW5jdGlvbiBicm9hZGNhc3RUeFN5bmNTdWNjZXNzKHJlcykge1xuICAgIC8vIGNvZGUgbXVzdCBiZSAwIG9uIHN1Y2Nlc3NcbiAgICByZXR1cm4gcmVzLmNvZGUgPT09IDA7XG59XG5leHBvcnRzLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MgPSBicm9hZGNhc3RUeFN5bmNTdWNjZXNzO1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWZmIHRyYW5zYWN0aW9uIG1hZGUgaXQgc3VjY2Vzc2Z1bGx5IGludG8gYSBibG9ja1xuICogKGkuZS4gc3VjY2VzcyBpbiBgY2hlY2tfdHhgIGFuZCBgZGVsaXZlcl90eGAgZmllbGQpXG4gKi9cbmZ1bmN0aW9uIGJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzcyhyZXNwb25zZSkge1xuICAgIC8vIGNvZGUgbXVzdCBiZSAwIG9uIHN1Y2Nlc3NcbiAgICAvLyBkZWxpdmVyVHggbWF5IGJlIHByZXNlbnQgYnV0IGVtcHR5IG9uIGZhaWx1cmVcbiAgICByZXR1cm4gcmVzcG9uc2UuY2hlY2tUeC5jb2RlID09PSAwICYmICEhcmVzcG9uc2UuZGVsaXZlclR4ICYmIHJlc3BvbnNlLmRlbGl2ZXJUeC5jb2RlID09PSAwO1xufVxuZXhwb3J0cy5icm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3MgPSBicm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3M7XG4vKipcbiAqIHJhdyB2YWx1ZXMgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvZGZhOWE5YTMwYTY2NjEzMjQyNWIyOTQ1NGU5MGE0NzJhYTU3OWE0OC90eXBlcy92b3RlLmdvI0w0NFxuICovXG52YXIgVm90ZVR5cGU7XG4oZnVuY3Rpb24gKFZvdGVUeXBlKSB7XG4gICAgVm90ZVR5cGVbVm90ZVR5cGVbXCJQcmVWb3RlXCJdID0gMV0gPSBcIlByZVZvdGVcIjtcbiAgICBWb3RlVHlwZVtWb3RlVHlwZVtcIlByZUNvbW1pdFwiXSA9IDJdID0gXCJQcmVDb21taXRcIjtcbn0pKFZvdGVUeXBlID0gZXhwb3J0cy5Wb3RlVHlwZSB8fCAoZXhwb3J0cy5Wb3RlVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/responses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tendermint34Client = void 0;\nconst jsonrpc_1 = __webpack_require__(/*! ../jsonrpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\");\nconst rpcclients_1 = __webpack_require__(/*! ../rpcclients */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js\");\nconst adaptor_1 = __webpack_require__(/*! ./adaptor */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/adaptor/index.js\");\nconst requests = __importStar(__webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/requests.js\"));\nclass Tendermint34Client {\n    /**\n     * Creates a new Tendermint client for the given endpoint.\n     *\n     * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n     */\n    static async connect(endpoint) {\n        let rpcClient;\n        if (typeof endpoint === \"object\") {\n            rpcClient = new rpcclients_1.HttpClient(endpoint);\n        }\n        else {\n            const useHttp = endpoint.startsWith(\"http://\") || endpoint.startsWith(\"https://\");\n            rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);\n        }\n        // For some very strange reason I don't understand, tests start to fail on some systems\n        // (our CI) when skipping the status call before doing other queries. Sleeping a little\n        // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n        // even in cases where we don't use the result.\n        const _version = await this.detectVersion(rpcClient);\n        return Tendermint34Client.create(rpcClient);\n    }\n    /**\n     * Creates a new Tendermint client given an RPC client.\n     */\n    static async create(rpcClient) {\n        return new Tendermint34Client(rpcClient);\n    }\n    static async detectVersion(client) {\n        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);\n        const response = await client.execute(req);\n        const result = response.result;\n        if (!result || !result.node_info) {\n            throw new Error(\"Unrecognized format for status response\");\n        }\n        const version = result.node_info.version;\n        if (typeof version !== \"string\") {\n            throw new Error(\"Unrecognized version format: must be string\");\n        }\n        return version;\n    }\n    /**\n     * Use `Tendermint34Client.connect` or `Tendermint34Client.create` to create an instance.\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    disconnect() {\n        this.client.disconnect();\n    }\n    async abciInfo() {\n        const query = { method: requests.Method.AbciInfo };\n        return this.doCall(query, adaptor_1.Params.encodeAbciInfo, adaptor_1.Responses.decodeAbciInfo);\n    }\n    async abciQuery(params) {\n        const query = { params: params, method: requests.Method.AbciQuery };\n        return this.doCall(query, adaptor_1.Params.encodeAbciQuery, adaptor_1.Responses.decodeAbciQuery);\n    }\n    async block(height) {\n        const query = { method: requests.Method.Block, params: { height: height } };\n        return this.doCall(query, adaptor_1.Params.encodeBlock, adaptor_1.Responses.decodeBlock);\n    }\n    async blockResults(height) {\n        const query = {\n            method: requests.Method.BlockResults,\n            params: { height: height },\n        };\n        return this.doCall(query, adaptor_1.Params.encodeBlockResults, adaptor_1.Responses.decodeBlockResults);\n    }\n    /**\n     * Search for events that are in a block.\n     *\n     * NOTE\n     * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n     */\n    async blockSearch(params) {\n        const query = { params: params, method: requests.Method.BlockSearch };\n        const resp = await this.doCall(query, adaptor_1.Params.encodeBlockSearch, adaptor_1.Responses.decodeBlockSearch);\n        return {\n            ...resp,\n            // make sure we sort by height, as tendermint may be sorting by string value of the height\n            blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height),\n        };\n    }\n    // this should paginate through all blockSearch options to ensure it returns all results.\n    // starts with page 1 or whatever was provided (eg. to start on page 7)\n    //\n    // NOTE\n    // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n    async blockSearchAll(params) {\n        let page = params.page || 1;\n        const blocks = [];\n        let done = false;\n        while (!done) {\n            const resp = await this.blockSearch({ ...params, page: page });\n            blocks.push(...resp.blocks);\n            if (blocks.length < resp.totalCount) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        // make sure we sort by height, as tendermint may be sorting by string value of the height\n        // and the earlier items may be in a higher page than the later items\n        blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n        return {\n            totalCount: blocks.length,\n            blocks: blocks,\n        };\n    }\n    /**\n     * Queries block headers filtered by minHeight <= height <= maxHeight.\n     *\n     * @param minHeight The minimum height to be included in the result. Defaults to 0.\n     * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n     */\n    async blockchain(minHeight, maxHeight) {\n        const query = {\n            method: requests.Method.Blockchain,\n            params: {\n                minHeight: minHeight,\n                maxHeight: maxHeight,\n            },\n        };\n        return this.doCall(query, adaptor_1.Params.encodeBlockchain, adaptor_1.Responses.decodeBlockchain);\n    }\n    /**\n     * Broadcast transaction to mempool and wait for response\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n     */\n    async broadcastTxSync(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxSync };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxSync);\n    }\n    /**\n     * Broadcast transaction to mempool and do not wait for result\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n     */\n    async broadcastTxAsync(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxAsync };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxAsync);\n    }\n    /**\n     * Broadcast transaction to mempool and wait for block\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n     */\n    async broadcastTxCommit(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxCommit };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxCommit);\n    }\n    async commit(height) {\n        const query = { method: requests.Method.Commit, params: { height: height } };\n        return this.doCall(query, adaptor_1.Params.encodeCommit, adaptor_1.Responses.decodeCommit);\n    }\n    async genesis() {\n        const query = { method: requests.Method.Genesis };\n        return this.doCall(query, adaptor_1.Params.encodeGenesis, adaptor_1.Responses.decodeGenesis);\n    }\n    async health() {\n        const query = { method: requests.Method.Health };\n        return this.doCall(query, adaptor_1.Params.encodeHealth, adaptor_1.Responses.decodeHealth);\n    }\n    async numUnconfirmedTxs() {\n        const query = { method: requests.Method.NumUnconfirmedTxs };\n        return this.doCall(query, adaptor_1.Params.encodeNumUnconfirmedTxs, adaptor_1.Responses.decodeNumUnconfirmedTxs);\n    }\n    async status() {\n        const query = { method: requests.Method.Status };\n        return this.doCall(query, adaptor_1.Params.encodeStatus, adaptor_1.Responses.decodeStatus);\n    }\n    subscribeNewBlock() {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: { type: requests.SubscriptionEventType.NewBlock },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeNewBlockEvent);\n    }\n    subscribeNewBlockHeader() {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: { type: requests.SubscriptionEventType.NewBlockHeader },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeNewBlockHeaderEvent);\n    }\n    subscribeTx(query) {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: {\n                type: requests.SubscriptionEventType.Tx,\n                raw: query,\n            },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeTxEvent);\n    }\n    /**\n     * Get a single transaction by hash\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n     */\n    async tx(params) {\n        const query = { params: params, method: requests.Method.Tx };\n        return this.doCall(query, adaptor_1.Params.encodeTx, adaptor_1.Responses.decodeTx);\n    }\n    /**\n     * Search for transactions that are in a block\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n     */\n    async txSearch(params) {\n        const query = { params: params, method: requests.Method.TxSearch };\n        return this.doCall(query, adaptor_1.Params.encodeTxSearch, adaptor_1.Responses.decodeTxSearch);\n    }\n    // this should paginate through all txSearch options to ensure it returns all results.\n    // starts with page 1 or whatever was provided (eg. to start on page 7)\n    async txSearchAll(params) {\n        let page = params.page || 1;\n        const txs = [];\n        let done = false;\n        while (!done) {\n            const resp = await this.txSearch({ ...params, page: page });\n            txs.push(...resp.txs);\n            if (txs.length < resp.totalCount) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        return {\n            totalCount: txs.length,\n            txs: txs,\n        };\n    }\n    async validators(params) {\n        const query = {\n            method: requests.Method.Validators,\n            params: params,\n        };\n        return this.doCall(query, adaptor_1.Params.encodeValidators, adaptor_1.Responses.decodeValidators);\n    }\n    async validatorsAll(height) {\n        const validators = [];\n        let page = 1;\n        let done = false;\n        let blockHeight = height;\n        while (!done) {\n            const response = await this.validators({\n                per_page: 50,\n                height: blockHeight,\n                page: page,\n            });\n            validators.push(...response.validators);\n            blockHeight = blockHeight || response.blockHeight;\n            if (validators.length < response.total) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        return {\n            // NOTE: Default value is for type safety but this should always be set\n            blockHeight: blockHeight ?? 0,\n            count: validators.length,\n            total: validators.length,\n            validators: validators,\n        };\n    }\n    // doCall is a helper to handle the encode/call/decode logic\n    async doCall(request, encode, decode) {\n        const req = encode(request);\n        const result = await this.client.execute(req);\n        return decode(result);\n    }\n    subscribe(request, decode) {\n        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {\n            throw new Error(\"This RPC client type cannot subscribe to events\");\n        }\n        const req = adaptor_1.Params.encodeSubscribe(request);\n        const eventStream = this.client.listen(req);\n        return eventStream.map((event) => {\n            return decode(event);\n        });\n    }\n}\nexports.Tendermint34Client = Tendermint34Client;\n//# sourceMappingURL=tendermint34client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/tendermint34client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Responses = exports.Params = void 0;\nvar requests_1 = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js\");\nObject.defineProperty(exports, \"Params\", ({ enumerable: true, get: function () { return requests_1.Params; } }));\nvar responses_1 = __webpack_require__(/*! ./responses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js\");\nObject.defineProperty(exports, \"Responses\", ({ enumerable: true, get: function () { return responses_1.Responses; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvYWRhcHRvci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUIsR0FBRyxjQUFjO0FBQ2xDLGlCQUFpQixtQkFBTyxDQUFDLHNHQUFZO0FBQ3JDLDBDQUF5QyxFQUFFLHFDQUFxQyw2QkFBNkIsRUFBQztBQUM5RyxrQkFBa0IsbUJBQU8sQ0FBQyx3R0FBYTtBQUN2Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsaUNBQWlDLEVBQUM7QUFDckgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdGVuZGVybWludDM3L2FkYXB0b3IvaW5kZXguanM/MjgwOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUmVzcG9uc2VzID0gZXhwb3J0cy5QYXJhbXMgPSB2b2lkIDA7XG52YXIgcmVxdWVzdHNfMSA9IHJlcXVpcmUoXCIuL3JlcXVlc3RzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUGFyYW1zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXF1ZXN0c18xLlBhcmFtczsgfSB9KTtcbnZhciByZXNwb25zZXNfMSA9IHJlcXVpcmUoXCIuL3Jlc3BvbnNlc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3BvbnNlc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzcG9uc2VzXzEuUmVzcG9uc2VzOyB9IH0pO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Params = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst inthelpers_1 = __webpack_require__(/*! ../../inthelpers */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\");\nconst jsonrpc_1 = __webpack_require__(/*! ../../jsonrpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\");\nconst encodings_1 = __webpack_require__(/*! ../encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js\");\nconst requests = __importStar(__webpack_require__(/*! ../requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js\"));\nfunction encodeHeightParam(param) {\n    return {\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.height),\n    };\n}\nfunction encodeBlockchainRequestParams(param) {\n    return {\n        minHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.minHeight),\n        maxHeight: (0, encodings_1.may)(inthelpers_1.smallIntToApi, param.maxHeight),\n    };\n}\nfunction encodeBlockSearchParams(params) {\n    return {\n        query: params.query,\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n        order_by: params.order_by,\n    };\n}\nfunction encodeAbciQueryParams(params) {\n    return {\n        path: (0, encodings_1.assertNotEmpty)(params.path),\n        data: (0, encoding_1.toHex)(params.data),\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),\n        prove: params.prove,\n    };\n}\nfunction encodeBroadcastTxParams(params) {\n    return {\n        tx: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.tx)),\n    };\n}\nfunction encodeTxParams(params) {\n    return {\n        hash: (0, encoding_1.toBase64)((0, encodings_1.assertNotEmpty)(params.hash)),\n        prove: params.prove,\n    };\n}\nfunction encodeTxSearchParams(params) {\n    return {\n        query: params.query,\n        prove: params.prove,\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n        order_by: params.order_by,\n    };\n}\nfunction encodeValidatorsParams(params) {\n    return {\n        height: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.height),\n        page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.page),\n        per_page: (0, encodings_1.may)(inthelpers_1.smallIntToApi, params.per_page),\n    };\n}\nclass Params {\n    static encodeAbciInfo(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeAbciQuery(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeAbciQueryParams(req.params));\n    }\n    static encodeBlock(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeBlockchain(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockchainRequestParams(req.params));\n    }\n    static encodeBlockResults(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeBlockSearch(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBlockSearchParams(req.params));\n    }\n    static encodeBroadcastTx(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeBroadcastTxParams(req.params));\n    }\n    static encodeCommit(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeHeightParam(req.params));\n    }\n    static encodeGenesis(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeHealth(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeNumUnconfirmedTxs(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeStatus(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method);\n    }\n    static encodeSubscribe(req) {\n        const eventTag = { key: \"tm.event\", value: req.query.type };\n        const query = requests.buildQuery({ tags: [eventTag], raw: req.query.raw });\n        return (0, jsonrpc_1.createJsonRpcRequest)(\"subscribe\", { query: query });\n    }\n    static encodeTx(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxParams(req.params));\n    }\n    // TODO: encode params for query string???\n    static encodeTxSearch(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeTxSearchParams(req.params));\n    }\n    static encodeValidators(req) {\n        return (0, jsonrpc_1.createJsonRpcRequest)(req.method, encodeValidatorsParams(req.params));\n    }\n}\nexports.Params = Params;\n//# sourceMappingURL=requests.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvYWRhcHRvci9yZXF1ZXN0cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxvQ0FBb0M7QUFDbkQ7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsMENBQTBDLDRCQUE0QjtBQUN0RSxDQUFDO0FBQ0Q7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsY0FBYztBQUNkO0FBQ0EsbUJBQW1CLG1CQUFPLENBQUMsOEVBQWtCO0FBQzdDLHFCQUFxQixtQkFBTyxDQUFDLHlGQUFrQjtBQUMvQyxrQkFBa0IsbUJBQU8sQ0FBQyxtRkFBZTtBQUN6QyxvQkFBb0IsbUJBQU8sQ0FBQyxpR0FBYztBQUMxQyw4QkFBOEIsbUJBQU8sQ0FBQywrRkFBYTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCLDRDQUE0QyxzQ0FBc0M7QUFDbEYsa0VBQWtFLGNBQWM7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYztBQUNkIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3RlbmRlcm1pbnQzNy9hZGFwdG9yL3JlcXVlc3RzLmpzP2MwM2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19jcmVhdGVCaW5kaW5nID0gKHRoaXMgJiYgdGhpcy5fX2NyZWF0ZUJpbmRpbmcpIHx8IChPYmplY3QuY3JlYXRlID8gKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICB2YXIgZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IobSwgayk7XG4gICAgaWYgKCFkZXNjIHx8IChcImdldFwiIGluIGRlc2MgPyAhbS5fX2VzTW9kdWxlIDogZGVzYy53cml0YWJsZSB8fCBkZXNjLmNvbmZpZ3VyYWJsZSkpIHtcbiAgICAgIGRlc2MgPSB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24oKSB7IHJldHVybiBtW2tdOyB9IH07XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBrMiwgZGVzYyk7XG59KSA6IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgb1trMl0gPSBtW2tdO1xufSkpO1xudmFyIF9fc2V0TW9kdWxlRGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19zZXRNb2R1bGVEZWZhdWx0KSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCB2KSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIFwiZGVmYXVsdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2IH0pO1xufSkgOiBmdW5jdGlvbihvLCB2KSB7XG4gICAgb1tcImRlZmF1bHRcIl0gPSB2O1xufSk7XG52YXIgX19pbXBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydFN0YXIpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICBpZiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSByZXR1cm4gbW9kO1xuICAgIHZhciByZXN1bHQgPSB7fTtcbiAgICBpZiAobW9kICE9IG51bGwpIGZvciAodmFyIGsgaW4gbW9kKSBpZiAoayAhPT0gXCJkZWZhdWx0XCIgJiYgT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vZCwgaykpIF9fY3JlYXRlQmluZGluZyhyZXN1bHQsIG1vZCwgayk7XG4gICAgX19zZXRNb2R1bGVEZWZhdWx0KHJlc3VsdCwgbW9kKTtcbiAgICByZXR1cm4gcmVzdWx0O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUGFyYW1zID0gdm9pZCAwO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5jb25zdCBlbmNvZGluZ18xID0gcmVxdWlyZShcIkBjb3NtanMvZW5jb2RpbmdcIik7XG5jb25zdCBpbnRoZWxwZXJzXzEgPSByZXF1aXJlKFwiLi4vLi4vaW50aGVscGVyc1wiKTtcbmNvbnN0IGpzb25ycGNfMSA9IHJlcXVpcmUoXCIuLi8uLi9qc29ucnBjXCIpO1xuY29uc3QgZW5jb2RpbmdzXzEgPSByZXF1aXJlKFwiLi4vZW5jb2RpbmdzXCIpO1xuY29uc3QgcmVxdWVzdHMgPSBfX2ltcG9ydFN0YXIocmVxdWlyZShcIi4uL3JlcXVlc3RzXCIpKTtcbmZ1bmN0aW9uIGVuY29kZUhlaWdodFBhcmFtKHBhcmFtKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGVpZ2h0OiAoMCwgZW5jb2RpbmdzXzEubWF5KShpbnRoZWxwZXJzXzEuc21hbGxJbnRUb0FwaSwgcGFyYW0uaGVpZ2h0KSxcbiAgICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlQmxvY2tjaGFpblJlcXVlc3RQYXJhbXMocGFyYW0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBtaW5IZWlnaHQ6ICgwLCBlbmNvZGluZ3NfMS5tYXkpKGludGhlbHBlcnNfMS5zbWFsbEludFRvQXBpLCBwYXJhbS5taW5IZWlnaHQpLFxuICAgICAgICBtYXhIZWlnaHQ6ICgwLCBlbmNvZGluZ3NfMS5tYXkpKGludGhlbHBlcnNfMS5zbWFsbEludFRvQXBpLCBwYXJhbS5tYXhIZWlnaHQpLFxuICAgIH07XG59XG5mdW5jdGlvbiBlbmNvZGVCbG9ja1NlYXJjaFBhcmFtcyhwYXJhbXMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBxdWVyeTogcGFyYW1zLnF1ZXJ5LFxuICAgICAgICBwYWdlOiAoMCwgZW5jb2RpbmdzXzEubWF5KShpbnRoZWxwZXJzXzEuc21hbGxJbnRUb0FwaSwgcGFyYW1zLnBhZ2UpLFxuICAgICAgICBwZXJfcGFnZTogKDAsIGVuY29kaW5nc18xLm1heSkoaW50aGVscGVyc18xLnNtYWxsSW50VG9BcGksIHBhcmFtcy5wZXJfcGFnZSksXG4gICAgICAgIG9yZGVyX2J5OiBwYXJhbXMub3JkZXJfYnksXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGVuY29kZUFiY2lRdWVyeVBhcmFtcyhwYXJhbXMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBwYXRoOiAoMCwgZW5jb2RpbmdzXzEuYXNzZXJ0Tm90RW1wdHkpKHBhcmFtcy5wYXRoKSxcbiAgICAgICAgZGF0YTogKDAsIGVuY29kaW5nXzEudG9IZXgpKHBhcmFtcy5kYXRhKSxcbiAgICAgICAgaGVpZ2h0OiAoMCwgZW5jb2RpbmdzXzEubWF5KShpbnRoZWxwZXJzXzEuc21hbGxJbnRUb0FwaSwgcGFyYW1zLmhlaWdodCksXG4gICAgICAgIHByb3ZlOiBwYXJhbXMucHJvdmUsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGVuY29kZUJyb2FkY2FzdFR4UGFyYW1zKHBhcmFtcykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR4OiAoMCwgZW5jb2RpbmdfMS50b0Jhc2U2NCkoKDAsIGVuY29kaW5nc18xLmFzc2VydE5vdEVtcHR5KShwYXJhbXMudHgpKSxcbiAgICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlVHhQYXJhbXMocGFyYW1zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaGFzaDogKDAsIGVuY29kaW5nXzEudG9CYXNlNjQpKCgwLCBlbmNvZGluZ3NfMS5hc3NlcnROb3RFbXB0eSkocGFyYW1zLmhhc2gpKSxcbiAgICAgICAgcHJvdmU6IHBhcmFtcy5wcm92ZSxcbiAgICB9O1xufVxuZnVuY3Rpb24gZW5jb2RlVHhTZWFyY2hQYXJhbXMocGFyYW1zKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcXVlcnk6IHBhcmFtcy5xdWVyeSxcbiAgICAgICAgcHJvdmU6IHBhcmFtcy5wcm92ZSxcbiAgICAgICAgcGFnZTogKDAsIGVuY29kaW5nc18xLm1heSkoaW50aGVscGVyc18xLnNtYWxsSW50VG9BcGksIHBhcmFtcy5wYWdlKSxcbiAgICAgICAgcGVyX3BhZ2U6ICgwLCBlbmNvZGluZ3NfMS5tYXkpKGludGhlbHBlcnNfMS5zbWFsbEludFRvQXBpLCBwYXJhbXMucGVyX3BhZ2UpLFxuICAgICAgICBvcmRlcl9ieTogcGFyYW1zLm9yZGVyX2J5LFxuICAgIH07XG59XG5mdW5jdGlvbiBlbmNvZGVWYWxpZGF0b3JzUGFyYW1zKHBhcmFtcykge1xuICAgIHJldHVybiB7XG4gICAgICAgIGhlaWdodDogKDAsIGVuY29kaW5nc18xLm1heSkoaW50aGVscGVyc18xLnNtYWxsSW50VG9BcGksIHBhcmFtcy5oZWlnaHQpLFxuICAgICAgICBwYWdlOiAoMCwgZW5jb2RpbmdzXzEubWF5KShpbnRoZWxwZXJzXzEuc21hbGxJbnRUb0FwaSwgcGFyYW1zLnBhZ2UpLFxuICAgICAgICBwZXJfcGFnZTogKDAsIGVuY29kaW5nc18xLm1heSkoaW50aGVscGVyc18xLnNtYWxsSW50VG9BcGksIHBhcmFtcy5wZXJfcGFnZSksXG4gICAgfTtcbn1cbmNsYXNzIFBhcmFtcyB7XG4gICAgc3RhdGljIGVuY29kZUFiY2lJbmZvKHJlcSkge1xuICAgICAgICByZXR1cm4gKDAsIGpzb25ycGNfMS5jcmVhdGVKc29uUnBjUmVxdWVzdCkocmVxLm1ldGhvZCk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVBYmNpUXVlcnkocmVxKSB7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShyZXEubWV0aG9kLCBlbmNvZGVBYmNpUXVlcnlQYXJhbXMocmVxLnBhcmFtcykpO1xuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlQmxvY2socmVxKSB7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShyZXEubWV0aG9kLCBlbmNvZGVIZWlnaHRQYXJhbShyZXEucGFyYW1zKSk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVCbG9ja2NoYWluKHJlcSkge1xuICAgICAgICByZXR1cm4gKDAsIGpzb25ycGNfMS5jcmVhdGVKc29uUnBjUmVxdWVzdCkocmVxLm1ldGhvZCwgZW5jb2RlQmxvY2tjaGFpblJlcXVlc3RQYXJhbXMocmVxLnBhcmFtcykpO1xuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlQmxvY2tSZXN1bHRzKHJlcSkge1xuICAgICAgICByZXR1cm4gKDAsIGpzb25ycGNfMS5jcmVhdGVKc29uUnBjUmVxdWVzdCkocmVxLm1ldGhvZCwgZW5jb2RlSGVpZ2h0UGFyYW0ocmVxLnBhcmFtcykpO1xuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlQmxvY2tTZWFyY2gocmVxKSB7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShyZXEubWV0aG9kLCBlbmNvZGVCbG9ja1NlYXJjaFBhcmFtcyhyZXEucGFyYW1zKSk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVCcm9hZGNhc3RUeChyZXEpIHtcbiAgICAgICAgcmV0dXJuICgwLCBqc29ucnBjXzEuY3JlYXRlSnNvblJwY1JlcXVlc3QpKHJlcS5tZXRob2QsIGVuY29kZUJyb2FkY2FzdFR4UGFyYW1zKHJlcS5wYXJhbXMpKTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZUNvbW1pdChyZXEpIHtcbiAgICAgICAgcmV0dXJuICgwLCBqc29ucnBjXzEuY3JlYXRlSnNvblJwY1JlcXVlc3QpKHJlcS5tZXRob2QsIGVuY29kZUhlaWdodFBhcmFtKHJlcS5wYXJhbXMpKTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZUdlbmVzaXMocmVxKSB7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShyZXEubWV0aG9kKTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZUhlYWx0aChyZXEpIHtcbiAgICAgICAgcmV0dXJuICgwLCBqc29ucnBjXzEuY3JlYXRlSnNvblJwY1JlcXVlc3QpKHJlcS5tZXRob2QpO1xuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlTnVtVW5jb25maXJtZWRUeHMocmVxKSB7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShyZXEubWV0aG9kKTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZVN0YXR1cyhyZXEpIHtcbiAgICAgICAgcmV0dXJuICgwLCBqc29ucnBjXzEuY3JlYXRlSnNvblJwY1JlcXVlc3QpKHJlcS5tZXRob2QpO1xuICAgIH1cbiAgICBzdGF0aWMgZW5jb2RlU3Vic2NyaWJlKHJlcSkge1xuICAgICAgICBjb25zdCBldmVudFRhZyA9IHsga2V5OiBcInRtLmV2ZW50XCIsIHZhbHVlOiByZXEucXVlcnkudHlwZSB9O1xuICAgICAgICBjb25zdCBxdWVyeSA9IHJlcXVlc3RzLmJ1aWxkUXVlcnkoeyB0YWdzOiBbZXZlbnRUYWddLCByYXc6IHJlcS5xdWVyeS5yYXcgfSk7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShcInN1YnNjcmliZVwiLCB7IHF1ZXJ5OiBxdWVyeSB9KTtcbiAgICB9XG4gICAgc3RhdGljIGVuY29kZVR4KHJlcSkge1xuICAgICAgICByZXR1cm4gKDAsIGpzb25ycGNfMS5jcmVhdGVKc29uUnBjUmVxdWVzdCkocmVxLm1ldGhvZCwgZW5jb2RlVHhQYXJhbXMocmVxLnBhcmFtcykpO1xuICAgIH1cbiAgICAvLyBUT0RPOiBlbmNvZGUgcGFyYW1zIGZvciBxdWVyeSBzdHJpbmc/Pz9cbiAgICBzdGF0aWMgZW5jb2RlVHhTZWFyY2gocmVxKSB7XG4gICAgICAgIHJldHVybiAoMCwganNvbnJwY18xLmNyZWF0ZUpzb25ScGNSZXF1ZXN0KShyZXEubWV0aG9kLCBlbmNvZGVUeFNlYXJjaFBhcmFtcyhyZXEucGFyYW1zKSk7XG4gICAgfVxuICAgIHN0YXRpYyBlbmNvZGVWYWxpZGF0b3JzKHJlcSkge1xuICAgICAgICByZXR1cm4gKDAsIGpzb25ycGNfMS5jcmVhdGVKc29uUnBjUmVxdWVzdCkocmVxLm1ldGhvZCwgZW5jb2RlVmFsaWRhdG9yc1BhcmFtcyhyZXEucGFyYW1zKSk7XG4gICAgfVxufVxuZXhwb3J0cy5QYXJhbXMgPSBQYXJhbXM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXF1ZXN0cy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Responses = exports.decodeValidatorInfo = exports.decodeValidatorGenesis = exports.decodeValidatorUpdate = exports.decodeEvent = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\nconst utils_1 = __webpack_require__(/*! @cosmjs/utils */ \"(ssr)/./node_modules/@cosmjs/utils/build/index.js\");\nconst dates_1 = __webpack_require__(/*! ../../dates */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/dates.js\");\nconst inthelpers_1 = __webpack_require__(/*! ../../inthelpers */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/inthelpers.js\");\nconst types_1 = __webpack_require__(/*! ../../types */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/types.js\");\nconst encodings_1 = __webpack_require__(/*! ../encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js\");\nconst hasher_1 = __webpack_require__(/*! ../hasher */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js\");\nfunction decodeAbciInfo(data) {\n    return {\n        data: data.data,\n        lastBlockHeight: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.last_block_height),\n        lastBlockAppHash: (0, encodings_1.may)(encoding_1.fromBase64, data.last_block_app_hash),\n    };\n}\nfunction decodeQueryProof(data) {\n    return {\n        ops: data.ops.map((op) => ({\n            type: op.type,\n            key: (0, encoding_1.fromBase64)(op.key),\n            data: (0, encoding_1.fromBase64)(op.data),\n        })),\n    };\n}\nfunction decodeAbciQuery(data) {\n    return {\n        key: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.key ?? \"\")),\n        value: (0, encoding_1.fromBase64)((0, encodings_1.assertString)(data.value ?? \"\")),\n        proof: (0, encodings_1.may)(decodeQueryProof, data.proofOps),\n        height: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.height),\n        code: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.code),\n        codespace: (0, encodings_1.assertString)(data.codespace ?? \"\"),\n        index: (0, encodings_1.may)(inthelpers_1.apiToSmallInt, data.index),\n        log: data.log,\n        info: (0, encodings_1.assertString)(data.info ?? \"\"),\n    };\n}\nfunction decodeEventAttribute(attribute) {\n    return {\n        key: (0, encodings_1.assertNotEmpty)(attribute.key),\n        value: attribute.value ?? \"\",\n    };\n}\nfunction decodeAttributes(attributes) {\n    return (0, encodings_1.assertArray)(attributes).map(decodeEventAttribute);\n}\nfunction decodeEvent(event) {\n    return {\n        type: event.type,\n        attributes: event.attributes ? decodeAttributes(event.attributes) : [],\n    };\n}\nexports.decodeEvent = decodeEvent;\nfunction decodeEvents(events) {\n    return (0, encodings_1.assertArray)(events).map(decodeEvent);\n}\nfunction decodeTxData(data) {\n    return {\n        code: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.code ?? 0)),\n        codespace: data.codespace,\n        log: data.log,\n        data: (0, encodings_1.may)(encoding_1.fromBase64, data.data),\n        events: data.events ? decodeEvents(data.events) : [],\n        gasWanted: (0, inthelpers_1.apiToBigInt)(data.gas_wanted ?? \"0\"),\n        gasUsed: (0, inthelpers_1.apiToBigInt)(data.gas_used ?? \"0\"),\n    };\n}\nfunction decodePubkey(data) {\n    if (\"Sum\" in data) {\n        // we don't need to check type because we're checking algorithm\n        const [[algorithm, value]] = Object.entries(data.Sum.value);\n        (0, utils_1.assert)(algorithm === \"ed25519\" || algorithm === \"secp256k1\", `unknown pubkey type: ${algorithm}`);\n        return {\n            algorithm,\n            data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(value)),\n        };\n    }\n    else {\n        switch (data.type) {\n            // go-amino special code\n            case \"tendermint/PubKeyEd25519\":\n                return {\n                    algorithm: \"ed25519\",\n                    data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value)),\n                };\n            case \"tendermint/PubKeySecp256k1\":\n                return {\n                    algorithm: \"secp256k1\",\n                    data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.value)),\n                };\n            default:\n                throw new Error(`unknown pubkey type: ${data.type}`);\n        }\n    }\n}\n/**\n * Note: we do not parse block.time_iota_ms for now because of this CHANGELOG entry\n *\n * > Add time_iota_ms to block's consensus parameters (not exposed to the application)\n * https://github.com/tendermint/tendermint/blob/master/CHANGELOG.md#v0310\n */\nfunction decodeBlockParams(data) {\n    return {\n        maxBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_bytes)),\n        maxGas: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_gas)),\n    };\n}\nfunction decodeEvidenceParams(data) {\n    return {\n        maxAgeNumBlocks: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_num_blocks)),\n        maxAgeDuration: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.max_age_duration)),\n    };\n}\nfunction decodeConsensusParams(data) {\n    return {\n        block: decodeBlockParams((0, encodings_1.assertObject)(data.block)),\n        evidence: decodeEvidenceParams((0, encodings_1.assertObject)(data.evidence)),\n    };\n}\nfunction decodeValidatorUpdate(data) {\n    return {\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)(data.power ?? \"0\"),\n    };\n}\nexports.decodeValidatorUpdate = decodeValidatorUpdate;\nfunction decodeBlockResults(data) {\n    return {\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        results: (data.txs_results || []).map(decodeTxData),\n        validatorUpdates: (data.validator_updates || []).map(decodeValidatorUpdate),\n        consensusUpdates: (0, encodings_1.may)(decodeConsensusParams, data.consensus_param_updates),\n        beginBlockEvents: decodeEvents(data.begin_block_events || []),\n        endBlockEvents: decodeEvents(data.end_block_events || []),\n    };\n}\nfunction decodeBlockId(data) {\n    return {\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        parts: {\n            total: (0, encodings_1.assertNotEmpty)(data.parts.total),\n            hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.parts.hash)),\n        },\n    };\n}\nfunction decodeBlockVersion(data) {\n    return {\n        block: (0, inthelpers_1.apiToSmallInt)(data.block),\n        app: (0, inthelpers_1.apiToSmallInt)(data.app ?? 0),\n    };\n}\nfunction decodeHeader(data) {\n    return {\n        version: decodeBlockVersion(data.version),\n        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        time: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.time)),\n        // When there is no last block ID (i.e. this block's height is 1), we get an empty structure like this:\n        // { hash: '', parts: { total: 0, hash: '' } }\n        lastBlockId: data.last_block_id.hash ? decodeBlockId(data.last_block_id) : null,\n        lastCommitHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_commit_hash)),\n        dataHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.data_hash)),\n        validatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.validators_hash)),\n        nextValidatorsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.next_validators_hash)),\n        consensusHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.consensus_hash)),\n        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),\n        lastResultsHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.last_results_hash)),\n        evidenceHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.evidence_hash)),\n        proposerAddress: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.proposer_address)),\n    };\n}\nfunction decodeBlockMeta(data) {\n    return {\n        blockId: decodeBlockId(data.block_id),\n        blockSize: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_size)),\n        header: decodeHeader(data.header),\n        numTxs: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.num_txs)),\n    };\n}\nfunction decodeBlockchain(data) {\n    return {\n        lastHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.last_height)),\n        blockMetas: (0, encodings_1.assertArray)(data.block_metas).map(decodeBlockMeta),\n    };\n}\nfunction decodeBroadcastTxSync(data) {\n    return {\n        ...decodeTxData(data),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n    };\n}\nfunction decodeBroadcastTxCommit(data) {\n    return {\n        height: (0, inthelpers_1.apiToSmallInt)(data.height),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        checkTx: decodeTxData((0, encodings_1.assertObject)(data.check_tx)),\n        deliverTx: (0, encodings_1.may)(decodeTxData, data.deliver_tx),\n    };\n}\nfunction decodeBlockIdFlag(blockIdFlag) {\n    (0, utils_1.assert)(blockIdFlag in types_1.BlockIdFlag);\n    return blockIdFlag;\n}\nfunction decodeCommitSignature(data) {\n    return {\n        blockIdFlag: decodeBlockIdFlag(data.block_id_flag),\n        validatorAddress: data.validator_address ? (0, encoding_1.fromHex)(data.validator_address) : undefined,\n        timestamp: data.timestamp ? (0, dates_1.fromRfc3339WithNanoseconds)(data.timestamp) : undefined,\n        signature: data.signature ? (0, encoding_1.fromBase64)(data.signature) : undefined,\n    };\n}\nfunction decodeCommit(data) {\n    return {\n        blockId: decodeBlockId((0, encodings_1.assertObject)(data.block_id)),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        round: (0, inthelpers_1.apiToSmallInt)(data.round),\n        signatures: (0, encodings_1.assertArray)(data.signatures).map(decodeCommitSignature),\n    };\n}\nfunction decodeCommitResponse(data) {\n    return {\n        canonical: (0, encodings_1.assertBoolean)(data.canonical),\n        header: decodeHeader(data.signed_header.header),\n        commit: decodeCommit(data.signed_header.commit),\n    };\n}\nfunction decodeValidatorGenesis(data) {\n    return {\n        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.power)),\n    };\n}\nexports.decodeValidatorGenesis = decodeValidatorGenesis;\nfunction decodeGenesis(data) {\n    return {\n        genesisTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.genesis_time)),\n        chainId: (0, encodings_1.assertNotEmpty)(data.chain_id),\n        consensusParams: decodeConsensusParams(data.consensus_params),\n        validators: data.validators ? (0, encodings_1.assertArray)(data.validators).map(decodeValidatorGenesis) : [],\n        appHash: (0, encoding_1.fromHex)((0, encodings_1.assertSet)(data.app_hash)),\n        appState: data.app_state,\n    };\n}\nfunction decodeValidatorInfo(data) {\n    return {\n        pubkey: decodePubkey((0, encodings_1.assertObject)(data.pub_key)),\n        votingPower: (0, inthelpers_1.apiToBigInt)((0, encodings_1.assertNotEmpty)(data.voting_power)),\n        address: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.address)),\n        proposerPriority: data.proposer_priority ? (0, inthelpers_1.apiToSmallInt)(data.proposer_priority) : undefined,\n    };\n}\nexports.decodeValidatorInfo = decodeValidatorInfo;\nfunction decodeNodeInfo(data) {\n    return {\n        id: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.id)),\n        listenAddr: (0, encodings_1.assertNotEmpty)(data.listen_addr),\n        network: (0, encodings_1.assertNotEmpty)(data.network),\n        version: (0, encodings_1.assertString)(data.version),\n        channels: (0, encodings_1.assertString)(data.channels),\n        moniker: (0, encodings_1.assertNotEmpty)(data.moniker),\n        other: (0, encodings_1.dictionaryToStringMap)(data.other),\n        protocolVersion: {\n            app: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.app)),\n            block: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.block)),\n            p2p: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.protocol_version.p2p)),\n        },\n    };\n}\nfunction decodeSyncInfo(data) {\n    const earliestBlockHeight = data.earliest_block_height\n        ? (0, inthelpers_1.apiToSmallInt)(data.earliest_block_height)\n        : undefined;\n    const earliestBlockTime = data.earliest_block_time\n        ? (0, dates_1.fromRfc3339WithNanoseconds)(data.earliest_block_time)\n        : undefined;\n    return {\n        earliestAppHash: data.earliest_app_hash ? (0, encoding_1.fromHex)(data.earliest_app_hash) : undefined,\n        earliestBlockHash: data.earliest_block_hash ? (0, encoding_1.fromHex)(data.earliest_block_hash) : undefined,\n        earliestBlockHeight: earliestBlockHeight || undefined,\n        earliestBlockTime: earliestBlockTime?.getTime() ? earliestBlockTime : undefined,\n        latestBlockHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_block_hash)),\n        latestAppHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.latest_app_hash)),\n        latestBlockTime: (0, dates_1.fromRfc3339WithNanoseconds)((0, encodings_1.assertNotEmpty)(data.latest_block_time)),\n        latestBlockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.latest_block_height)),\n        catchingUp: (0, encodings_1.assertBoolean)(data.catching_up),\n    };\n}\nfunction decodeStatus(data) {\n    return {\n        nodeInfo: decodeNodeInfo(data.node_info),\n        syncInfo: decodeSyncInfo(data.sync_info),\n        validatorInfo: decodeValidatorInfo(data.validator_info),\n    };\n}\nfunction decodeTxProof(data) {\n    return {\n        data: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.data)),\n        rootHash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.root_hash)),\n        proof: {\n            total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.total)),\n            index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.proof.index)),\n            leafHash: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.proof.leaf_hash)),\n            aunts: (0, encodings_1.assertArray)(data.proof.aunts).map(encoding_1.fromBase64),\n        },\n    };\n}\nfunction decodeTxResponse(data) {\n    return {\n        tx: (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx)),\n        result: decodeTxData((0, encodings_1.assertObject)(data.tx_result)),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n        index: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNumber)(data.index)),\n        hash: (0, encoding_1.fromHex)((0, encodings_1.assertNotEmpty)(data.hash)),\n        proof: (0, encodings_1.may)(decodeTxProof, data.proof),\n    };\n}\nfunction decodeTxSearch(data) {\n    return {\n        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),\n        txs: (0, encodings_1.assertArray)(data.txs).map(decodeTxResponse),\n    };\n}\nfunction decodeTxEvent(data) {\n    const tx = (0, encoding_1.fromBase64)((0, encodings_1.assertNotEmpty)(data.tx));\n    return {\n        tx: tx,\n        hash: (0, hasher_1.hashTx)(tx),\n        result: decodeTxData(data.result),\n        height: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.height)),\n    };\n}\nfunction decodeValidators(data) {\n    return {\n        blockHeight: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.block_height)),\n        validators: (0, encodings_1.assertArray)(data.validators).map(decodeValidatorInfo),\n        count: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.count)),\n        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),\n    };\n}\nfunction decodeBlock(data) {\n    return {\n        header: decodeHeader((0, encodings_1.assertObject)(data.header)),\n        // For the block at height 1, last commit is not set. This is represented in an empty object like this:\n        // { height: '0', round: 0, block_id: { hash: '', parts: [Object] }, signatures: [] }\n        lastCommit: data.last_commit.block_id.hash ? decodeCommit((0, encodings_1.assertObject)(data.last_commit)) : null,\n        txs: data.data.txs ? (0, encodings_1.assertArray)(data.data.txs).map(encoding_1.fromBase64) : [],\n        // Lift up .evidence.evidence to just .evidence\n        // See https://github.com/tendermint/tendermint/issues/7697\n        evidence: data.evidence?.evidence ?? [],\n    };\n}\nfunction decodeBlockResponse(data) {\n    return {\n        blockId: decodeBlockId(data.block_id),\n        block: decodeBlock(data.block),\n    };\n}\nfunction decodeBlockSearch(data) {\n    return {\n        totalCount: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_count)),\n        blocks: (0, encodings_1.assertArray)(data.blocks).map(decodeBlockResponse),\n    };\n}\nfunction decodeNumUnconfirmedTxs(data) {\n    return {\n        total: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total)),\n        totalBytes: (0, inthelpers_1.apiToSmallInt)((0, encodings_1.assertNotEmpty)(data.total_bytes)),\n    };\n}\nclass Responses {\n    static decodeAbciInfo(response) {\n        return decodeAbciInfo((0, encodings_1.assertObject)(response.result.response));\n    }\n    static decodeAbciQuery(response) {\n        return decodeAbciQuery((0, encodings_1.assertObject)(response.result.response));\n    }\n    static decodeBlock(response) {\n        return decodeBlockResponse(response.result);\n    }\n    static decodeBlockResults(response) {\n        return decodeBlockResults(response.result);\n    }\n    static decodeBlockSearch(response) {\n        return decodeBlockSearch(response.result);\n    }\n    static decodeBlockchain(response) {\n        return decodeBlockchain(response.result);\n    }\n    static decodeBroadcastTxSync(response) {\n        return decodeBroadcastTxSync(response.result);\n    }\n    static decodeBroadcastTxAsync(response) {\n        return Responses.decodeBroadcastTxSync(response);\n    }\n    static decodeBroadcastTxCommit(response) {\n        return decodeBroadcastTxCommit(response.result);\n    }\n    static decodeCommit(response) {\n        return decodeCommitResponse(response.result);\n    }\n    static decodeGenesis(response) {\n        return decodeGenesis((0, encodings_1.assertObject)(response.result.genesis));\n    }\n    static decodeHealth() {\n        return null;\n    }\n    static decodeNumUnconfirmedTxs(response) {\n        return decodeNumUnconfirmedTxs(response.result);\n    }\n    static decodeStatus(response) {\n        return decodeStatus(response.result);\n    }\n    static decodeNewBlockEvent(event) {\n        return decodeBlock(event.data.value.block);\n    }\n    static decodeNewBlockHeaderEvent(event) {\n        return decodeHeader(event.data.value.header);\n    }\n    static decodeTxEvent(event) {\n        return decodeTxEvent(event.data.value.TxResult);\n    }\n    static decodeTx(response) {\n        return decodeTxResponse(response.result);\n    }\n    static decodeTxSearch(response) {\n        return decodeTxSearch(response.result);\n    }\n    static decodeValidators(response) {\n        return decodeValidators(response.result);\n    }\n}\nexports.Responses = Responses;\n//# sourceMappingURL=responses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/responses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.encodeBlockId = exports.encodeVersion = exports.encodeBytes = exports.encodeTime = exports.encodeUvarint = exports.encodeString = exports.dictionaryToStringMap = exports.may = exports.assertNotEmpty = exports.assertObject = exports.assertArray = exports.assertNumber = exports.assertString = exports.assertBoolean = exports.assertSet = void 0;\nconst encoding_1 = __webpack_require__(/*! @cosmjs/encoding */ \"(ssr)/./node_modules/@cosmjs/encoding/build/index.js\");\n/**\n * A runtime checker that ensures a given value is set (i.e. not undefined or null)\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n */\nfunction assertSet(value) {\n    if (value === undefined) {\n        throw new Error(\"Value must not be undefined\");\n    }\n    if (value === null) {\n        throw new Error(\"Value must not be null\");\n    }\n    return value;\n}\nexports.assertSet = assertSet;\n/**\n * A runtime checker that ensures a given value is a boolean\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertBoolean(value) {\n    assertSet(value);\n    if (typeof value !== \"boolean\") {\n        throw new Error(\"Value must be a boolean\");\n    }\n    return value;\n}\nexports.assertBoolean = assertBoolean;\n/**\n * A runtime checker that ensures a given value is a string.\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertString(value) {\n    assertSet(value);\n    if (typeof value !== \"string\") {\n        throw new Error(\"Value must be a string\");\n    }\n    return value;\n}\nexports.assertString = assertString;\n/**\n * A runtime checker that ensures a given value is a number\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertNumber(value) {\n    assertSet(value);\n    if (typeof value !== \"number\") {\n        throw new Error(\"Value must be a number\");\n    }\n    return value;\n}\nexports.assertNumber = assertNumber;\n/**\n * A runtime checker that ensures a given value is an array\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertArray(value) {\n    assertSet(value);\n    if (!Array.isArray(value)) {\n        throw new Error(\"Value must be a an array\");\n    }\n    return value;\n}\nexports.assertArray = assertArray;\n/**\n * A runtime checker that ensures a given value is an object in the sense of JSON\n * (an unordered collection of key–value pairs where the keys are strings)\n *\n * This is used when you want to verify that data at runtime matches the expected type.\n * This implies assertSet.\n */\nfunction assertObject(value) {\n    assertSet(value);\n    if (typeof value !== \"object\") {\n        throw new Error(\"Value must be an object\");\n    }\n    // Exclude special kind of objects like Array, Date or Uint8Array\n    // Object.prototype.toString() returns a specified value:\n    // http://www.ecma-international.org/ecma-262/7.0/index.html#sec-object.prototype.tostring\n    if (Object.prototype.toString.call(value) !== \"[object Object]\") {\n        throw new Error(\"Value must be a simple object\");\n    }\n    return value;\n}\nexports.assertObject = assertObject;\n/**\n * Throws an error if value matches the empty value for the\n * given type (array/string of length 0, number of value 0, ...)\n *\n * Otherwise returns the value.\n *\n * This implies assertSet\n */\nfunction assertNotEmpty(value) {\n    assertSet(value);\n    if (typeof value === \"number\" && value === 0) {\n        throw new Error(\"must provide a non-zero value\");\n    }\n    else if (value.length === 0) {\n        throw new Error(\"must provide a non-empty value\");\n    }\n    return value;\n}\nexports.assertNotEmpty = assertNotEmpty;\n// may will run the transform if value is defined, otherwise returns undefined\nfunction may(transform, value) {\n    return value === undefined || value === null ? undefined : transform(value);\n}\nexports.may = may;\nfunction dictionaryToStringMap(obj) {\n    const out = new Map();\n    for (const key of Object.keys(obj)) {\n        const value = obj[key];\n        if (typeof value !== \"string\") {\n            throw new Error(\"Found dictionary value of type other than string\");\n        }\n        out.set(key, value);\n    }\n    return out;\n}\nexports.dictionaryToStringMap = dictionaryToStringMap;\n// Encodings needed for hashing block headers\n// Several of these functions are inspired by https://github.com/nomic-io/js-tendermint/blob/tendermint-0.30/src/\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L193-L195\nfunction encodeString(s) {\n    const utf8 = (0, encoding_1.toUtf8)(s);\n    return Uint8Array.from([utf8.length, ...utf8]);\n}\nexports.encodeString = encodeString;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L79-L87\nfunction encodeUvarint(n) {\n    return n >= 0x80\n        ? // eslint-disable-next-line no-bitwise\n            Uint8Array.from([(n & 0xff) | 0x80, ...encodeUvarint(n >> 7)])\n        : // eslint-disable-next-line no-bitwise\n            Uint8Array.from([n & 0xff]);\n}\nexports.encodeUvarint = encodeUvarint;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L134-L178\nfunction encodeTime(time) {\n    const milliseconds = time.getTime();\n    const seconds = Math.floor(milliseconds / 1000);\n    const secondsArray = seconds ? [0x08, ...encodeUvarint(seconds)] : new Uint8Array();\n    const nanoseconds = (time.nanoseconds || 0) + (milliseconds % 1000) * 1e6;\n    const nanosecondsArray = nanoseconds ? [0x10, ...encodeUvarint(nanoseconds)] : new Uint8Array();\n    return Uint8Array.from([...secondsArray, ...nanosecondsArray]);\n}\nexports.encodeTime = encodeTime;\n// See https://github.com/tendermint/go-amino/blob/v0.15.0/encoder.go#L180-L187\nfunction encodeBytes(bytes) {\n    // Since we're only dealing with short byte arrays we don't need a full VarBuffer implementation yet\n    if (bytes.length >= 0x80)\n        throw new Error(\"Not implemented for byte arrays of length 128 or more\");\n    return bytes.length ? Uint8Array.from([bytes.length, ...bytes]) : new Uint8Array();\n}\nexports.encodeBytes = encodeBytes;\nfunction encodeVersion(version) {\n    const blockArray = version.block\n        ? Uint8Array.from([0x08, ...encodeUvarint(version.block)])\n        : new Uint8Array();\n    const appArray = version.app ? Uint8Array.from([0x10, ...encodeUvarint(version.app)]) : new Uint8Array();\n    return Uint8Array.from([...blockArray, ...appArray]);\n}\nexports.encodeVersion = encodeVersion;\nfunction encodeBlockId(blockId) {\n    return Uint8Array.from([\n        0x0a,\n        blockId.hash.length,\n        ...blockId.hash,\n        0x12,\n        blockId.parts.hash.length + 4,\n        0x08,\n        blockId.parts.total,\n        0x12,\n        blockId.parts.hash.length,\n        ...blockId.parts.hash,\n    ]);\n}\nexports.encodeBlockId = encodeBlockId;\n//# sourceMappingURL=encodings.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hashBlock = exports.hashTx = void 0;\nconst crypto_1 = __webpack_require__(/*! @cosmjs/crypto */ \"(ssr)/./node_modules/@cosmjs/crypto/build/index.js\");\nconst encodings_1 = __webpack_require__(/*! ./encodings */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/encodings.js\");\n// hash is sha256\n// https://github.com/tendermint/tendermint/blob/master/UPGRADING.md#v0260\nfunction hashTx(tx) {\n    return (0, crypto_1.sha256)(tx);\n}\nexports.hashTx = hashTx;\nfunction getSplitPoint(n) {\n    if (n < 1)\n        throw new Error(\"Cannot split an empty tree\");\n    const largestPowerOf2 = 2 ** Math.floor(Math.log2(n));\n    return largestPowerOf2 < n ? largestPowerOf2 : largestPowerOf2 / 2;\n}\nfunction hashLeaf(leaf) {\n    const hash = new crypto_1.Sha256(Uint8Array.from([0]));\n    hash.update(leaf);\n    return hash.digest();\n}\nfunction hashInner(left, right) {\n    const hash = new crypto_1.Sha256(Uint8Array.from([1]));\n    hash.update(left);\n    hash.update(right);\n    return hash.digest();\n}\n// See https://github.com/tendermint/tendermint/blob/v0.31.8/docs/spec/blockchain/encoding.md#merkleroot\n// Note: the hashes input may not actually be hashes, especially before a recursive call\nfunction hashTree(hashes) {\n    switch (hashes.length) {\n        case 0:\n            throw new Error(\"Cannot hash empty tree\");\n        case 1:\n            return hashLeaf(hashes[0]);\n        default: {\n            const slicePoint = getSplitPoint(hashes.length);\n            const left = hashTree(hashes.slice(0, slicePoint));\n            const right = hashTree(hashes.slice(slicePoint));\n            return hashInner(left, right);\n        }\n    }\n}\nfunction hashBlock(header) {\n    if (!header.lastBlockId) {\n        throw new Error(\"Hashing a block header with no last block ID (i.e. header at height 1) is not supported. If you need this, contributions are welcome. Please add documentation and test vectors for this case.\");\n    }\n    const encodedFields = [\n        (0, encodings_1.encodeVersion)(header.version),\n        (0, encodings_1.encodeString)(header.chainId),\n        (0, encodings_1.encodeUvarint)(header.height),\n        (0, encodings_1.encodeTime)(header.time),\n        (0, encodings_1.encodeBlockId)(header.lastBlockId),\n        (0, encodings_1.encodeBytes)(header.lastCommitHash),\n        (0, encodings_1.encodeBytes)(header.dataHash),\n        (0, encodings_1.encodeBytes)(header.validatorsHash),\n        (0, encodings_1.encodeBytes)(header.nextValidatorsHash),\n        (0, encodings_1.encodeBytes)(header.consensusHash),\n        (0, encodings_1.encodeBytes)(header.appHash),\n        (0, encodings_1.encodeBytes)(header.lastResultsHash),\n        (0, encodings_1.encodeBytes)(header.evidenceHash),\n        (0, encodings_1.encodeBytes)(header.proposerAddress),\n    ];\n    return hashTree(encodedFields);\n}\nexports.hashBlock = hashBlock;\n//# sourceMappingURL=hasher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvaGFzaGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLGNBQWM7QUFDbEMsaUJBQWlCLG1CQUFPLENBQUMsMEVBQWdCO0FBQ3pDLG9CQUFvQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdGVuZGVybWludDM3L2hhc2hlci5qcz82ZmQwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5oYXNoQmxvY2sgPSBleHBvcnRzLmhhc2hUeCA9IHZvaWQgMDtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcIkBjb3NtanMvY3J5cHRvXCIpO1xuY29uc3QgZW5jb2RpbmdzXzEgPSByZXF1aXJlKFwiLi9lbmNvZGluZ3NcIik7XG4vLyBoYXNoIGlzIHNoYTI1NlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL21hc3Rlci9VUEdSQURJTkcubWQjdjAyNjBcbmZ1bmN0aW9uIGhhc2hUeCh0eCkge1xuICAgIHJldHVybiAoMCwgY3J5cHRvXzEuc2hhMjU2KSh0eCk7XG59XG5leHBvcnRzLmhhc2hUeCA9IGhhc2hUeDtcbmZ1bmN0aW9uIGdldFNwbGl0UG9pbnQobikge1xuICAgIGlmIChuIDwgMSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IHNwbGl0IGFuIGVtcHR5IHRyZWVcIik7XG4gICAgY29uc3QgbGFyZ2VzdFBvd2VyT2YyID0gMiAqKiBNYXRoLmZsb29yKE1hdGgubG9nMihuKSk7XG4gICAgcmV0dXJuIGxhcmdlc3RQb3dlck9mMiA8IG4gPyBsYXJnZXN0UG93ZXJPZjIgOiBsYXJnZXN0UG93ZXJPZjIgLyAyO1xufVxuZnVuY3Rpb24gaGFzaExlYWYobGVhZikge1xuICAgIGNvbnN0IGhhc2ggPSBuZXcgY3J5cHRvXzEuU2hhMjU2KFVpbnQ4QXJyYXkuZnJvbShbMF0pKTtcbiAgICBoYXNoLnVwZGF0ZShsZWFmKTtcbiAgICByZXR1cm4gaGFzaC5kaWdlc3QoKTtcbn1cbmZ1bmN0aW9uIGhhc2hJbm5lcihsZWZ0LCByaWdodCkge1xuICAgIGNvbnN0IGhhc2ggPSBuZXcgY3J5cHRvXzEuU2hhMjU2KFVpbnQ4QXJyYXkuZnJvbShbMV0pKTtcbiAgICBoYXNoLnVwZGF0ZShsZWZ0KTtcbiAgICBoYXNoLnVwZGF0ZShyaWdodCk7XG4gICAgcmV0dXJuIGhhc2guZGlnZXN0KCk7XG59XG4vLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC9ibG9iL3YwLjMxLjgvZG9jcy9zcGVjL2Jsb2NrY2hhaW4vZW5jb2RpbmcubWQjbWVya2xlcm9vdFxuLy8gTm90ZTogdGhlIGhhc2hlcyBpbnB1dCBtYXkgbm90IGFjdHVhbGx5IGJlIGhhc2hlcywgZXNwZWNpYWxseSBiZWZvcmUgYSByZWN1cnNpdmUgY2FsbFxuZnVuY3Rpb24gaGFzaFRyZWUoaGFzaGVzKSB7XG4gICAgc3dpdGNoIChoYXNoZXMubGVuZ3RoKSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBoYXNoIGVtcHR5IHRyZWVcIik7XG4gICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgIHJldHVybiBoYXNoTGVhZihoYXNoZXNbMF0pO1xuICAgICAgICBkZWZhdWx0OiB7XG4gICAgICAgICAgICBjb25zdCBzbGljZVBvaW50ID0gZ2V0U3BsaXRQb2ludChoYXNoZXMubGVuZ3RoKTtcbiAgICAgICAgICAgIGNvbnN0IGxlZnQgPSBoYXNoVHJlZShoYXNoZXMuc2xpY2UoMCwgc2xpY2VQb2ludCkpO1xuICAgICAgICAgICAgY29uc3QgcmlnaHQgPSBoYXNoVHJlZShoYXNoZXMuc2xpY2Uoc2xpY2VQb2ludCkpO1xuICAgICAgICAgICAgcmV0dXJuIGhhc2hJbm5lcihsZWZ0LCByaWdodCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiBoYXNoQmxvY2soaGVhZGVyKSB7XG4gICAgaWYgKCFoZWFkZXIubGFzdEJsb2NrSWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiSGFzaGluZyBhIGJsb2NrIGhlYWRlciB3aXRoIG5vIGxhc3QgYmxvY2sgSUQgKGkuZS4gaGVhZGVyIGF0IGhlaWdodCAxKSBpcyBub3Qgc3VwcG9ydGVkLiBJZiB5b3UgbmVlZCB0aGlzLCBjb250cmlidXRpb25zIGFyZSB3ZWxjb21lLiBQbGVhc2UgYWRkIGRvY3VtZW50YXRpb24gYW5kIHRlc3QgdmVjdG9ycyBmb3IgdGhpcyBjYXNlLlwiKTtcbiAgICB9XG4gICAgY29uc3QgZW5jb2RlZEZpZWxkcyA9IFtcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZVZlcnNpb24pKGhlYWRlci52ZXJzaW9uKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZVN0cmluZykoaGVhZGVyLmNoYWluSWQpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlVXZhcmludCkoaGVhZGVyLmhlaWdodCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVUaW1lKShoZWFkZXIudGltZSksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCbG9ja0lkKShoZWFkZXIubGFzdEJsb2NrSWQpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5sYXN0Q29tbWl0SGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmRhdGFIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIudmFsaWRhdG9yc0hhc2gpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5uZXh0VmFsaWRhdG9yc0hhc2gpLFxuICAgICAgICAoMCwgZW5jb2RpbmdzXzEuZW5jb2RlQnl0ZXMpKGhlYWRlci5jb25zZW5zdXNIYXNoKSxcbiAgICAgICAgKDAsIGVuY29kaW5nc18xLmVuY29kZUJ5dGVzKShoZWFkZXIuYXBwSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmxhc3RSZXN1bHRzSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLmV2aWRlbmNlSGFzaCksXG4gICAgICAgICgwLCBlbmNvZGluZ3NfMS5lbmNvZGVCeXRlcykoaGVhZGVyLnByb3Bvc2VyQWRkcmVzcyksXG4gICAgXTtcbiAgICByZXR1cm4gaGFzaFRyZWUoZW5jb2RlZEZpZWxkcyk7XG59XG5leHBvcnRzLmhhc2hCbG9jayA9IGhhc2hCbG9jaztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWhhc2hlci5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/hasher.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n// Note: all exports in this module are publicly available via\n// `import { tendermint37 } from \"@cosmjs/tendermint-rpc\"`\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tendermint37Client = exports.VoteType = exports.broadcastTxSyncSuccess = exports.broadcastTxCommitSuccess = exports.SubscriptionEventType = exports.Method = void 0;\nvar requests_1 = __webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js\");\nObject.defineProperty(exports, \"Method\", ({ enumerable: true, get: function () { return requests_1.Method; } }));\nObject.defineProperty(exports, \"SubscriptionEventType\", ({ enumerable: true, get: function () { return requests_1.SubscriptionEventType; } }));\nvar responses_1 = __webpack_require__(/*! ./responses */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js\");\nObject.defineProperty(exports, \"broadcastTxCommitSuccess\", ({ enumerable: true, get: function () { return responses_1.broadcastTxCommitSuccess; } }));\nObject.defineProperty(exports, \"broadcastTxSyncSuccess\", ({ enumerable: true, get: function () { return responses_1.broadcastTxSyncSuccess; } }));\nObject.defineProperty(exports, \"VoteType\", ({ enumerable: true, get: function () { return responses_1.VoteType; } }));\nvar tendermint37client_1 = __webpack_require__(/*! ./tendermint37client */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js\");\nObject.defineProperty(exports, \"Tendermint37Client\", ({ enumerable: true, get: function () { return tendermint37client_1.Tendermint37Client; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLGFBQWEsZUFBZTtBQUM1Qiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMEJBQTBCLEdBQUcsZ0JBQWdCLEdBQUcsOEJBQThCLEdBQUcsZ0NBQWdDLEdBQUcsNkJBQTZCLEdBQUcsY0FBYztBQUNsSyxpQkFBaUIsbUJBQU8sQ0FBQyw4RkFBWTtBQUNyQywwQ0FBeUMsRUFBRSxxQ0FBcUMsNkJBQTZCLEVBQUM7QUFDOUcseURBQXdELEVBQUUscUNBQXFDLDRDQUE0QyxFQUFDO0FBQzVJLGtCQUFrQixtQkFBTyxDQUFDLGdHQUFhO0FBQ3ZDLDREQUEyRCxFQUFFLHFDQUFxQyxnREFBZ0QsRUFBQztBQUNuSiwwREFBeUQsRUFBRSxxQ0FBcUMsOENBQThDLEVBQUM7QUFDL0ksNENBQTJDLEVBQUUscUNBQXFDLGdDQUFnQyxFQUFDO0FBQ25ILDJCQUEyQixtQkFBTyxDQUFDLGtIQUFzQjtBQUN6RCxzREFBcUQsRUFBRSxxQ0FBcUMsbURBQW1ELEVBQUM7QUFDaEoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdGVuZGVybWludDM3L2luZGV4LmpzP2Q5MDkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG4vLyBOb3RlOiBhbGwgZXhwb3J0cyBpbiB0aGlzIG1vZHVsZSBhcmUgcHVibGljbHkgYXZhaWxhYmxlIHZpYVxuLy8gYGltcG9ydCB7IHRlbmRlcm1pbnQzNyB9IGZyb20gXCJAY29zbWpzL3RlbmRlcm1pbnQtcnBjXCJgXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlRlbmRlcm1pbnQzN0NsaWVudCA9IGV4cG9ydHMuVm90ZVR5cGUgPSBleHBvcnRzLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MgPSBleHBvcnRzLmJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzcyA9IGV4cG9ydHMuU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0gZXhwb3J0cy5NZXRob2QgPSB2b2lkIDA7XG52YXIgcmVxdWVzdHNfMSA9IHJlcXVpcmUoXCIuL3JlcXVlc3RzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiTWV0aG9kXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiByZXF1ZXN0c18xLk1ldGhvZDsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlN1YnNjcmlwdGlvbkV2ZW50VHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVxdWVzdHNfMS5TdWJzY3JpcHRpb25FdmVudFR5cGU7IH0gfSk7XG52YXIgcmVzcG9uc2VzXzEgPSByZXF1aXJlKFwiLi9yZXNwb25zZXNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJicm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlc18xLmJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzczsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImJyb2FkY2FzdFR4U3luY1N1Y2Nlc3NcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHJlc3BvbnNlc18xLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3M7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJWb3RlVHlwZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcmVzcG9uc2VzXzEuVm90ZVR5cGU7IH0gfSk7XG52YXIgdGVuZGVybWludDM3Y2xpZW50XzEgPSByZXF1aXJlKFwiLi90ZW5kZXJtaW50MzdjbGllbnRcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZW5kZXJtaW50MzdDbGllbnRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRlbmRlcm1pbnQzN2NsaWVudF8xLlRlbmRlcm1pbnQzN0NsaWVudDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/* eslint-disable @typescript-eslint/naming-convention */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildQuery = exports.SubscriptionEventType = exports.Method = void 0;\n/**\n * RPC methods as documented in https://docs.tendermint.com/master/rpc/\n *\n * Enum raw value must match the spelling in the \"shell\" example call (snake_case)\n */\nvar Method;\n(function (Method) {\n    Method[\"AbciInfo\"] = \"abci_info\";\n    Method[\"AbciQuery\"] = \"abci_query\";\n    Method[\"Block\"] = \"block\";\n    /** Get block headers for minHeight <= height <= maxHeight. */\n    Method[\"Blockchain\"] = \"blockchain\";\n    Method[\"BlockResults\"] = \"block_results\";\n    Method[\"BlockSearch\"] = \"block_search\";\n    Method[\"BroadcastTxAsync\"] = \"broadcast_tx_async\";\n    Method[\"BroadcastTxSync\"] = \"broadcast_tx_sync\";\n    Method[\"BroadcastTxCommit\"] = \"broadcast_tx_commit\";\n    Method[\"Commit\"] = \"commit\";\n    Method[\"Genesis\"] = \"genesis\";\n    Method[\"Health\"] = \"health\";\n    Method[\"NumUnconfirmedTxs\"] = \"num_unconfirmed_txs\";\n    Method[\"Status\"] = \"status\";\n    Method[\"Subscribe\"] = \"subscribe\";\n    Method[\"Tx\"] = \"tx\";\n    Method[\"TxSearch\"] = \"tx_search\";\n    Method[\"Validators\"] = \"validators\";\n    Method[\"Unsubscribe\"] = \"unsubscribe\";\n})(Method = exports.Method || (exports.Method = {}));\n/**\n * Raw values must match the tendermint event name\n *\n * @see https://godoc.org/github.com/tendermint/tendermint/types#pkg-constants\n */\nvar SubscriptionEventType;\n(function (SubscriptionEventType) {\n    SubscriptionEventType[\"NewBlock\"] = \"NewBlock\";\n    SubscriptionEventType[\"NewBlockHeader\"] = \"NewBlockHeader\";\n    SubscriptionEventType[\"Tx\"] = \"Tx\";\n})(SubscriptionEventType = exports.SubscriptionEventType || (exports.SubscriptionEventType = {}));\nfunction buildQuery(components) {\n    const tags = components.tags ? components.tags : [];\n    const tagComponents = tags.map((tag) => `${tag.key}='${tag.value}'`);\n    const rawComponents = components.raw ? [components.raw] : [];\n    return [...tagComponents, ...rawComponents].join(\" AND \");\n}\nexports.buildQuery = buildQuery;\n//# sourceMappingURL=requests.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvcmVxdWVzdHMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyw2QkFBNkIsR0FBRyxjQUFjO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOEJBQThCLGNBQWMsS0FBSztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNERBQTRELDZCQUE2QixLQUFLO0FBQy9GO0FBQ0E7QUFDQSwrQ0FBK0MsUUFBUSxJQUFJLFVBQVU7QUFDckU7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3RlbmRlcm1pbnQzNy9yZXF1ZXN0cy5qcz8wZDYwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25hbWluZy1jb252ZW50aW9uICovXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmJ1aWxkUXVlcnkgPSBleHBvcnRzLlN1YnNjcmlwdGlvbkV2ZW50VHlwZSA9IGV4cG9ydHMuTWV0aG9kID0gdm9pZCAwO1xuLyoqXG4gKiBSUEMgbWV0aG9kcyBhcyBkb2N1bWVudGVkIGluIGh0dHBzOi8vZG9jcy50ZW5kZXJtaW50LmNvbS9tYXN0ZXIvcnBjL1xuICpcbiAqIEVudW0gcmF3IHZhbHVlIG11c3QgbWF0Y2ggdGhlIHNwZWxsaW5nIGluIHRoZSBcInNoZWxsXCIgZXhhbXBsZSBjYWxsIChzbmFrZV9jYXNlKVxuICovXG52YXIgTWV0aG9kO1xuKGZ1bmN0aW9uIChNZXRob2QpIHtcbiAgICBNZXRob2RbXCJBYmNpSW5mb1wiXSA9IFwiYWJjaV9pbmZvXCI7XG4gICAgTWV0aG9kW1wiQWJjaVF1ZXJ5XCJdID0gXCJhYmNpX3F1ZXJ5XCI7XG4gICAgTWV0aG9kW1wiQmxvY2tcIl0gPSBcImJsb2NrXCI7XG4gICAgLyoqIEdldCBibG9jayBoZWFkZXJzIGZvciBtaW5IZWlnaHQgPD0gaGVpZ2h0IDw9IG1heEhlaWdodC4gKi9cbiAgICBNZXRob2RbXCJCbG9ja2NoYWluXCJdID0gXCJibG9ja2NoYWluXCI7XG4gICAgTWV0aG9kW1wiQmxvY2tSZXN1bHRzXCJdID0gXCJibG9ja19yZXN1bHRzXCI7XG4gICAgTWV0aG9kW1wiQmxvY2tTZWFyY2hcIl0gPSBcImJsb2NrX3NlYXJjaFwiO1xuICAgIE1ldGhvZFtcIkJyb2FkY2FzdFR4QXN5bmNcIl0gPSBcImJyb2FkY2FzdF90eF9hc3luY1wiO1xuICAgIE1ldGhvZFtcIkJyb2FkY2FzdFR4U3luY1wiXSA9IFwiYnJvYWRjYXN0X3R4X3N5bmNcIjtcbiAgICBNZXRob2RbXCJCcm9hZGNhc3RUeENvbW1pdFwiXSA9IFwiYnJvYWRjYXN0X3R4X2NvbW1pdFwiO1xuICAgIE1ldGhvZFtcIkNvbW1pdFwiXSA9IFwiY29tbWl0XCI7XG4gICAgTWV0aG9kW1wiR2VuZXNpc1wiXSA9IFwiZ2VuZXNpc1wiO1xuICAgIE1ldGhvZFtcIkhlYWx0aFwiXSA9IFwiaGVhbHRoXCI7XG4gICAgTWV0aG9kW1wiTnVtVW5jb25maXJtZWRUeHNcIl0gPSBcIm51bV91bmNvbmZpcm1lZF90eHNcIjtcbiAgICBNZXRob2RbXCJTdGF0dXNcIl0gPSBcInN0YXR1c1wiO1xuICAgIE1ldGhvZFtcIlN1YnNjcmliZVwiXSA9IFwic3Vic2NyaWJlXCI7XG4gICAgTWV0aG9kW1wiVHhcIl0gPSBcInR4XCI7XG4gICAgTWV0aG9kW1wiVHhTZWFyY2hcIl0gPSBcInR4X3NlYXJjaFwiO1xuICAgIE1ldGhvZFtcIlZhbGlkYXRvcnNcIl0gPSBcInZhbGlkYXRvcnNcIjtcbiAgICBNZXRob2RbXCJVbnN1YnNjcmliZVwiXSA9IFwidW5zdWJzY3JpYmVcIjtcbn0pKE1ldGhvZCA9IGV4cG9ydHMuTWV0aG9kIHx8IChleHBvcnRzLk1ldGhvZCA9IHt9KSk7XG4vKipcbiAqIFJhdyB2YWx1ZXMgbXVzdCBtYXRjaCB0aGUgdGVuZGVybWludCBldmVudCBuYW1lXG4gKlxuICogQHNlZSBodHRwczovL2dvZG9jLm9yZy9naXRodWIuY29tL3RlbmRlcm1pbnQvdGVuZGVybWludC90eXBlcyNwa2ctY29uc3RhbnRzXG4gKi9cbnZhciBTdWJzY3JpcHRpb25FdmVudFR5cGU7XG4oZnVuY3Rpb24gKFN1YnNjcmlwdGlvbkV2ZW50VHlwZSkge1xuICAgIFN1YnNjcmlwdGlvbkV2ZW50VHlwZVtcIk5ld0Jsb2NrXCJdID0gXCJOZXdCbG9ja1wiO1xuICAgIFN1YnNjcmlwdGlvbkV2ZW50VHlwZVtcIk5ld0Jsb2NrSGVhZGVyXCJdID0gXCJOZXdCbG9ja0hlYWRlclwiO1xuICAgIFN1YnNjcmlwdGlvbkV2ZW50VHlwZVtcIlR4XCJdID0gXCJUeFwiO1xufSkoU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0gZXhwb3J0cy5TdWJzY3JpcHRpb25FdmVudFR5cGUgfHwgKGV4cG9ydHMuU3Vic2NyaXB0aW9uRXZlbnRUeXBlID0ge30pKTtcbmZ1bmN0aW9uIGJ1aWxkUXVlcnkoY29tcG9uZW50cykge1xuICAgIGNvbnN0IHRhZ3MgPSBjb21wb25lbnRzLnRhZ3MgPyBjb21wb25lbnRzLnRhZ3MgOiBbXTtcbiAgICBjb25zdCB0YWdDb21wb25lbnRzID0gdGFncy5tYXAoKHRhZykgPT4gYCR7dGFnLmtleX09JyR7dGFnLnZhbHVlfSdgKTtcbiAgICBjb25zdCByYXdDb21wb25lbnRzID0gY29tcG9uZW50cy5yYXcgPyBbY29tcG9uZW50cy5yYXddIDogW107XG4gICAgcmV0dXJuIFsuLi50YWdDb21wb25lbnRzLCAuLi5yYXdDb21wb25lbnRzXS5qb2luKFwiIEFORCBcIik7XG59XG5leHBvcnRzLmJ1aWxkUXVlcnkgPSBidWlsZFF1ZXJ5O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cmVxdWVzdHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.VoteType = exports.broadcastTxCommitSuccess = exports.broadcastTxSyncSuccess = void 0;\n/**\n * Returns true iff transaction made it successfully into the transaction pool\n */\nfunction broadcastTxSyncSuccess(res) {\n    // code must be 0 on success\n    return res.code === 0;\n}\nexports.broadcastTxSyncSuccess = broadcastTxSyncSuccess;\n/**\n * Returns true iff transaction made it successfully into a block\n * (i.e. success in `check_tx` and `deliver_tx` field)\n */\nfunction broadcastTxCommitSuccess(response) {\n    // code must be 0 on success\n    // deliverTx may be present but empty on failure\n    return response.checkTx.code === 0 && !!response.deliverTx && response.deliverTx.code === 0;\n}\nexports.broadcastTxCommitSuccess = broadcastTxCommitSuccess;\n/**\n * raw values from https://github.com/tendermint/tendermint/blob/dfa9a9a30a666132425b29454e90a472aa579a48/types/vote.go#L44\n */\nvar VoteType;\n(function (VoteType) {\n    VoteType[VoteType[\"PreVote\"] = 1] = \"PreVote\";\n    VoteType[VoteType[\"PreCommit\"] = 2] = \"PreCommit\";\n})(VoteType = exports.VoteType || (exports.VoteType = {}));\n//# sourceMappingURL=responses.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvcmVzcG9uc2VzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQixHQUFHLGdDQUFnQyxHQUFHLDhCQUE4QjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGtDQUFrQyxnQkFBZ0IsS0FBSztBQUN4RCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50MzcvcmVzcG9uc2VzLmpzPzgxMmUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlZvdGVUeXBlID0gZXhwb3J0cy5icm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3MgPSBleHBvcnRzLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MgPSB2b2lkIDA7XG4vKipcbiAqIFJldHVybnMgdHJ1ZSBpZmYgdHJhbnNhY3Rpb24gbWFkZSBpdCBzdWNjZXNzZnVsbHkgaW50byB0aGUgdHJhbnNhY3Rpb24gcG9vbFxuICovXG5mdW5jdGlvbiBicm9hZGNhc3RUeFN5bmNTdWNjZXNzKHJlcykge1xuICAgIC8vIGNvZGUgbXVzdCBiZSAwIG9uIHN1Y2Nlc3NcbiAgICByZXR1cm4gcmVzLmNvZGUgPT09IDA7XG59XG5leHBvcnRzLmJyb2FkY2FzdFR4U3luY1N1Y2Nlc3MgPSBicm9hZGNhc3RUeFN5bmNTdWNjZXNzO1xuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWZmIHRyYW5zYWN0aW9uIG1hZGUgaXQgc3VjY2Vzc2Z1bGx5IGludG8gYSBibG9ja1xuICogKGkuZS4gc3VjY2VzcyBpbiBgY2hlY2tfdHhgIGFuZCBgZGVsaXZlcl90eGAgZmllbGQpXG4gKi9cbmZ1bmN0aW9uIGJyb2FkY2FzdFR4Q29tbWl0U3VjY2VzcyhyZXNwb25zZSkge1xuICAgIC8vIGNvZGUgbXVzdCBiZSAwIG9uIHN1Y2Nlc3NcbiAgICAvLyBkZWxpdmVyVHggbWF5IGJlIHByZXNlbnQgYnV0IGVtcHR5IG9uIGZhaWx1cmVcbiAgICByZXR1cm4gcmVzcG9uc2UuY2hlY2tUeC5jb2RlID09PSAwICYmICEhcmVzcG9uc2UuZGVsaXZlclR4ICYmIHJlc3BvbnNlLmRlbGl2ZXJUeC5jb2RlID09PSAwO1xufVxuZXhwb3J0cy5icm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3MgPSBicm9hZGNhc3RUeENvbW1pdFN1Y2Nlc3M7XG4vKipcbiAqIHJhdyB2YWx1ZXMgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vdGVuZGVybWludC90ZW5kZXJtaW50L2Jsb2IvZGZhOWE5YTMwYTY2NjEzMjQyNWIyOTQ1NGU5MGE0NzJhYTU3OWE0OC90eXBlcy92b3RlLmdvI0w0NFxuICovXG52YXIgVm90ZVR5cGU7XG4oZnVuY3Rpb24gKFZvdGVUeXBlKSB7XG4gICAgVm90ZVR5cGVbVm90ZVR5cGVbXCJQcmVWb3RlXCJdID0gMV0gPSBcIlByZVZvdGVcIjtcbiAgICBWb3RlVHlwZVtWb3RlVHlwZVtcIlByZUNvbW1pdFwiXSA9IDJdID0gXCJQcmVDb21taXRcIjtcbn0pKFZvdGVUeXBlID0gZXhwb3J0cy5Wb3RlVHlwZSB8fCAoZXhwb3J0cy5Wb3RlVHlwZSA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZXNwb25zZXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/responses.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js ***!
  \**************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Tendermint37Client = void 0;\nconst jsonrpc_1 = __webpack_require__(/*! ../jsonrpc */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/jsonrpc.js\");\nconst rpcclients_1 = __webpack_require__(/*! ../rpcclients */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/rpcclients/index.js\");\nconst adaptor_1 = __webpack_require__(/*! ./adaptor */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/adaptor/index.js\");\nconst requests = __importStar(__webpack_require__(/*! ./requests */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/requests.js\"));\nclass Tendermint37Client {\n    /**\n     * Creates a new Tendermint client for the given endpoint.\n     *\n     * Uses HTTP when the URL schema is http or https. Uses WebSockets otherwise.\n     */\n    static async connect(endpoint) {\n        let rpcClient;\n        if (typeof endpoint === \"object\") {\n            rpcClient = new rpcclients_1.HttpClient(endpoint);\n        }\n        else {\n            const useHttp = endpoint.startsWith(\"http://\") || endpoint.startsWith(\"https://\");\n            rpcClient = useHttp ? new rpcclients_1.HttpClient(endpoint) : new rpcclients_1.WebsocketClient(endpoint);\n        }\n        // For some very strange reason I don't understand, tests start to fail on some systems\n        // (our CI) when skipping the status call before doing other queries. Sleeping a little\n        // while did not help. Thus we query the version as a way to say \"hi\" to the backend,\n        // even in cases where we don't use the result.\n        const _version = await this.detectVersion(rpcClient);\n        return Tendermint37Client.create(rpcClient);\n    }\n    /**\n     * Creates a new Tendermint client given an RPC client.\n     */\n    static async create(rpcClient) {\n        return new Tendermint37Client(rpcClient);\n    }\n    static async detectVersion(client) {\n        const req = (0, jsonrpc_1.createJsonRpcRequest)(requests.Method.Status);\n        const response = await client.execute(req);\n        const result = response.result;\n        if (!result || !result.node_info) {\n            throw new Error(\"Unrecognized format for status response\");\n        }\n        const version = result.node_info.version;\n        if (typeof version !== \"string\") {\n            throw new Error(\"Unrecognized version format: must be string\");\n        }\n        return version;\n    }\n    /**\n     * Use `Tendermint37Client.connect` or `Tendermint37Client.create` to create an instance.\n     */\n    constructor(client) {\n        this.client = client;\n    }\n    disconnect() {\n        this.client.disconnect();\n    }\n    async abciInfo() {\n        const query = { method: requests.Method.AbciInfo };\n        return this.doCall(query, adaptor_1.Params.encodeAbciInfo, adaptor_1.Responses.decodeAbciInfo);\n    }\n    async abciQuery(params) {\n        const query = { params: params, method: requests.Method.AbciQuery };\n        return this.doCall(query, adaptor_1.Params.encodeAbciQuery, adaptor_1.Responses.decodeAbciQuery);\n    }\n    async block(height) {\n        const query = { method: requests.Method.Block, params: { height: height } };\n        return this.doCall(query, adaptor_1.Params.encodeBlock, adaptor_1.Responses.decodeBlock);\n    }\n    async blockResults(height) {\n        const query = {\n            method: requests.Method.BlockResults,\n            params: { height: height },\n        };\n        return this.doCall(query, adaptor_1.Params.encodeBlockResults, adaptor_1.Responses.decodeBlockResults);\n    }\n    /**\n     * Search for events that are in a block.\n     *\n     * NOTE\n     * This method will error on any node that is running a Tendermint version lower than 0.34.9.\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/block_search\n     */\n    async blockSearch(params) {\n        const query = { params: params, method: requests.Method.BlockSearch };\n        const resp = await this.doCall(query, adaptor_1.Params.encodeBlockSearch, adaptor_1.Responses.decodeBlockSearch);\n        return {\n            ...resp,\n            // make sure we sort by height, as tendermint may be sorting by string value of the height\n            blocks: [...resp.blocks].sort((a, b) => a.block.header.height - b.block.header.height),\n        };\n    }\n    // this should paginate through all blockSearch options to ensure it returns all results.\n    // starts with page 1 or whatever was provided (eg. to start on page 7)\n    //\n    // NOTE\n    // This method will error on any node that is running a Tendermint version lower than 0.34.9.\n    async blockSearchAll(params) {\n        let page = params.page || 1;\n        const blocks = [];\n        let done = false;\n        while (!done) {\n            const resp = await this.blockSearch({ ...params, page: page });\n            blocks.push(...resp.blocks);\n            if (blocks.length < resp.totalCount) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        // make sure we sort by height, as tendermint may be sorting by string value of the height\n        // and the earlier items may be in a higher page than the later items\n        blocks.sort((a, b) => a.block.header.height - b.block.header.height);\n        return {\n            totalCount: blocks.length,\n            blocks: blocks,\n        };\n    }\n    /**\n     * Queries block headers filtered by minHeight <= height <= maxHeight.\n     *\n     * @param minHeight The minimum height to be included in the result. Defaults to 0.\n     * @param maxHeight The maximum height to be included in the result. Defaults to infinity.\n     */\n    async blockchain(minHeight, maxHeight) {\n        const query = {\n            method: requests.Method.Blockchain,\n            params: {\n                minHeight: minHeight,\n                maxHeight: maxHeight,\n            },\n        };\n        return this.doCall(query, adaptor_1.Params.encodeBlockchain, adaptor_1.Responses.decodeBlockchain);\n    }\n    /**\n     * Broadcast transaction to mempool and wait for response\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_sync\n     */\n    async broadcastTxSync(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxSync };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxSync);\n    }\n    /**\n     * Broadcast transaction to mempool and do not wait for result\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_async\n     */\n    async broadcastTxAsync(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxAsync };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxAsync);\n    }\n    /**\n     * Broadcast transaction to mempool and wait for block\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Tx/broadcast_tx_commit\n     */\n    async broadcastTxCommit(params) {\n        const query = { params: params, method: requests.Method.BroadcastTxCommit };\n        return this.doCall(query, adaptor_1.Params.encodeBroadcastTx, adaptor_1.Responses.decodeBroadcastTxCommit);\n    }\n    async commit(height) {\n        const query = { method: requests.Method.Commit, params: { height: height } };\n        return this.doCall(query, adaptor_1.Params.encodeCommit, adaptor_1.Responses.decodeCommit);\n    }\n    async genesis() {\n        const query = { method: requests.Method.Genesis };\n        return this.doCall(query, adaptor_1.Params.encodeGenesis, adaptor_1.Responses.decodeGenesis);\n    }\n    async health() {\n        const query = { method: requests.Method.Health };\n        return this.doCall(query, adaptor_1.Params.encodeHealth, adaptor_1.Responses.decodeHealth);\n    }\n    async numUnconfirmedTxs() {\n        const query = { method: requests.Method.NumUnconfirmedTxs };\n        return this.doCall(query, adaptor_1.Params.encodeNumUnconfirmedTxs, adaptor_1.Responses.decodeNumUnconfirmedTxs);\n    }\n    async status() {\n        const query = { method: requests.Method.Status };\n        return this.doCall(query, adaptor_1.Params.encodeStatus, adaptor_1.Responses.decodeStatus);\n    }\n    subscribeNewBlock() {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: { type: requests.SubscriptionEventType.NewBlock },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeNewBlockEvent);\n    }\n    subscribeNewBlockHeader() {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: { type: requests.SubscriptionEventType.NewBlockHeader },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeNewBlockHeaderEvent);\n    }\n    subscribeTx(query) {\n        const request = {\n            method: requests.Method.Subscribe,\n            query: {\n                type: requests.SubscriptionEventType.Tx,\n                raw: query,\n            },\n        };\n        return this.subscribe(request, adaptor_1.Responses.decodeTxEvent);\n    }\n    /**\n     * Get a single transaction by hash\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/tx\n     */\n    async tx(params) {\n        const query = { params: params, method: requests.Method.Tx };\n        return this.doCall(query, adaptor_1.Params.encodeTx, adaptor_1.Responses.decodeTx);\n    }\n    /**\n     * Search for transactions that are in a block\n     *\n     * @see https://docs.tendermint.com/master/rpc/#/Info/tx_search\n     */\n    async txSearch(params) {\n        const query = { params: params, method: requests.Method.TxSearch };\n        return this.doCall(query, adaptor_1.Params.encodeTxSearch, adaptor_1.Responses.decodeTxSearch);\n    }\n    // this should paginate through all txSearch options to ensure it returns all results.\n    // starts with page 1 or whatever was provided (eg. to start on page 7)\n    async txSearchAll(params) {\n        let page = params.page || 1;\n        const txs = [];\n        let done = false;\n        while (!done) {\n            const resp = await this.txSearch({ ...params, page: page });\n            txs.push(...resp.txs);\n            if (txs.length < resp.totalCount) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        return {\n            totalCount: txs.length,\n            txs: txs,\n        };\n    }\n    async validators(params) {\n        const query = {\n            method: requests.Method.Validators,\n            params: params,\n        };\n        return this.doCall(query, adaptor_1.Params.encodeValidators, adaptor_1.Responses.decodeValidators);\n    }\n    async validatorsAll(height) {\n        const validators = [];\n        let page = 1;\n        let done = false;\n        let blockHeight = height;\n        while (!done) {\n            const response = await this.validators({\n                per_page: 50,\n                height: blockHeight,\n                page: page,\n            });\n            validators.push(...response.validators);\n            blockHeight = blockHeight || response.blockHeight;\n            if (validators.length < response.total) {\n                page++;\n            }\n            else {\n                done = true;\n            }\n        }\n        return {\n            // NOTE: Default value is for type safety but this should always be set\n            blockHeight: blockHeight ?? 0,\n            count: validators.length,\n            total: validators.length,\n            validators: validators,\n        };\n    }\n    // doCall is a helper to handle the encode/call/decode logic\n    async doCall(request, encode, decode) {\n        const req = encode(request);\n        const result = await this.client.execute(req);\n        return decode(result);\n    }\n    subscribe(request, decode) {\n        if (!(0, rpcclients_1.instanceOfRpcStreamingClient)(this.client)) {\n            throw new Error(\"This RPC client type cannot subscribe to events\");\n        }\n        const req = adaptor_1.Params.encodeSubscribe(request);\n        const eventStream = this.client.listen(req);\n        return eventStream.map((event) => {\n            return decode(event);\n        });\n    }\n}\nexports.Tendermint37Client = Tendermint37Client;\n//# sourceMappingURL=tendermint37client.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/tendermint37client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.connectComet = exports.isComet38Client = exports.isTendermint37Client = exports.isTendermint34Client = void 0;\nconst comet38_1 = __webpack_require__(/*! ./comet38 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/comet38/index.js\");\nconst tendermint34_1 = __webpack_require__(/*! ./tendermint34 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint34/index.js\");\nconst tendermint37_1 = __webpack_require__(/*! ./tendermint37 */ \"(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermint37/index.js\");\nfunction isTendermint34Client(client) {\n    return client instanceof tendermint34_1.Tendermint34Client;\n}\nexports.isTendermint34Client = isTendermint34Client;\nfunction isTendermint37Client(client) {\n    return client instanceof tendermint37_1.Tendermint37Client;\n}\nexports.isTendermint37Client = isTendermint37Client;\nfunction isComet38Client(client) {\n    return client instanceof comet38_1.Comet38Client;\n}\nexports.isComet38Client = isComet38Client;\n/**\n * Auto-detects the version of the backend and uses a suitable client.\n */\nasync function connectComet(endpoint) {\n    // Tendermint/CometBFT 0.34/0.37/0.38 auto-detection. Starting with 0.37 we seem to get reliable versions again 🎉\n    // Using 0.34 as the fallback.\n    let out;\n    const tm37Client = await tendermint37_1.Tendermint37Client.connect(endpoint);\n    const version = (await tm37Client.status()).nodeInfo.version;\n    if (version.startsWith(\"0.37.\")) {\n        out = tm37Client;\n    }\n    else if (version.startsWith(\"0.38.\")) {\n        tm37Client.disconnect();\n        out = await comet38_1.Comet38Client.connect(endpoint);\n    }\n    else {\n        tm37Client.disconnect();\n        out = await tendermint34_1.Tendermint34Client.connect(endpoint);\n    }\n    return out;\n}\nexports.connectComet = connectComet;\n//# sourceMappingURL=tendermintclient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90ZW5kZXJtaW50Y2xpZW50LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQixHQUFHLHVCQUF1QixHQUFHLDRCQUE0QixHQUFHLDRCQUE0QjtBQUM1RyxrQkFBa0IsbUJBQU8sQ0FBQyxxRkFBVztBQUNyQyx1QkFBdUIsbUJBQU8sQ0FBQywrRkFBZ0I7QUFDL0MsdUJBQXVCLG1CQUFPLENBQUMsK0ZBQWdCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3RlbmRlcm1pbnQtcnBjL2J1aWxkL3RlbmRlcm1pbnRjbGllbnQuanM/ODkxMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuY29ubmVjdENvbWV0ID0gZXhwb3J0cy5pc0NvbWV0MzhDbGllbnQgPSBleHBvcnRzLmlzVGVuZGVybWludDM3Q2xpZW50ID0gZXhwb3J0cy5pc1RlbmRlcm1pbnQzNENsaWVudCA9IHZvaWQgMDtcbmNvbnN0IGNvbWV0MzhfMSA9IHJlcXVpcmUoXCIuL2NvbWV0MzhcIik7XG5jb25zdCB0ZW5kZXJtaW50MzRfMSA9IHJlcXVpcmUoXCIuL3RlbmRlcm1pbnQzNFwiKTtcbmNvbnN0IHRlbmRlcm1pbnQzN18xID0gcmVxdWlyZShcIi4vdGVuZGVybWludDM3XCIpO1xuZnVuY3Rpb24gaXNUZW5kZXJtaW50MzRDbGllbnQoY2xpZW50KSB7XG4gICAgcmV0dXJuIGNsaWVudCBpbnN0YW5jZW9mIHRlbmRlcm1pbnQzNF8xLlRlbmRlcm1pbnQzNENsaWVudDtcbn1cbmV4cG9ydHMuaXNUZW5kZXJtaW50MzRDbGllbnQgPSBpc1RlbmRlcm1pbnQzNENsaWVudDtcbmZ1bmN0aW9uIGlzVGVuZGVybWludDM3Q2xpZW50KGNsaWVudCkge1xuICAgIHJldHVybiBjbGllbnQgaW5zdGFuY2VvZiB0ZW5kZXJtaW50MzdfMS5UZW5kZXJtaW50MzdDbGllbnQ7XG59XG5leHBvcnRzLmlzVGVuZGVybWludDM3Q2xpZW50ID0gaXNUZW5kZXJtaW50MzdDbGllbnQ7XG5mdW5jdGlvbiBpc0NvbWV0MzhDbGllbnQoY2xpZW50KSB7XG4gICAgcmV0dXJuIGNsaWVudCBpbnN0YW5jZW9mIGNvbWV0MzhfMS5Db21ldDM4Q2xpZW50O1xufVxuZXhwb3J0cy5pc0NvbWV0MzhDbGllbnQgPSBpc0NvbWV0MzhDbGllbnQ7XG4vKipcbiAqIEF1dG8tZGV0ZWN0cyB0aGUgdmVyc2lvbiBvZiB0aGUgYmFja2VuZCBhbmQgdXNlcyBhIHN1aXRhYmxlIGNsaWVudC5cbiAqL1xuYXN5bmMgZnVuY3Rpb24gY29ubmVjdENvbWV0KGVuZHBvaW50KSB7XG4gICAgLy8gVGVuZGVybWludC9Db21ldEJGVCAwLjM0LzAuMzcvMC4zOCBhdXRvLWRldGVjdGlvbi4gU3RhcnRpbmcgd2l0aCAwLjM3IHdlIHNlZW0gdG8gZ2V0IHJlbGlhYmxlIHZlcnNpb25zIGFnYWluIPCfjolcbiAgICAvLyBVc2luZyAwLjM0IGFzIHRoZSBmYWxsYmFjay5cbiAgICBsZXQgb3V0O1xuICAgIGNvbnN0IHRtMzdDbGllbnQgPSBhd2FpdCB0ZW5kZXJtaW50MzdfMS5UZW5kZXJtaW50MzdDbGllbnQuY29ubmVjdChlbmRwb2ludCk7XG4gICAgY29uc3QgdmVyc2lvbiA9IChhd2FpdCB0bTM3Q2xpZW50LnN0YXR1cygpKS5ub2RlSW5mby52ZXJzaW9uO1xuICAgIGlmICh2ZXJzaW9uLnN0YXJ0c1dpdGgoXCIwLjM3LlwiKSkge1xuICAgICAgICBvdXQgPSB0bTM3Q2xpZW50O1xuICAgIH1cbiAgICBlbHNlIGlmICh2ZXJzaW9uLnN0YXJ0c1dpdGgoXCIwLjM4LlwiKSkge1xuICAgICAgICB0bTM3Q2xpZW50LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgb3V0ID0gYXdhaXQgY29tZXQzOF8xLkNvbWV0MzhDbGllbnQuY29ubmVjdChlbmRwb2ludCk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0bTM3Q2xpZW50LmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgb3V0ID0gYXdhaXQgdGVuZGVybWludDM0XzEuVGVuZGVybWludDM0Q2xpZW50LmNvbm5lY3QoZW5kcG9pbnQpO1xuICAgIH1cbiAgICByZXR1cm4gb3V0O1xufVxuZXhwb3J0cy5jb25uZWN0Q29tZXQgPSBjb25uZWN0Q29tZXQ7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10ZW5kZXJtaW50Y2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/tendermintclient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/types.js":
/*!************************************************************!*\
  !*** ./node_modules/@cosmjs/tendermint-rpc/build/types.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n// Types in this file are exported outside of the @cosmjs/tendermint-rpc package,\n// e.g. as part of a request or response\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BlockIdFlag = void 0;\nvar BlockIdFlag;\n(function (BlockIdFlag) {\n    BlockIdFlag[BlockIdFlag[\"Unknown\"] = 0] = \"Unknown\";\n    BlockIdFlag[BlockIdFlag[\"Absent\"] = 1] = \"Absent\";\n    BlockIdFlag[BlockIdFlag[\"Commit\"] = 2] = \"Commit\";\n    BlockIdFlag[BlockIdFlag[\"Nil\"] = 3] = \"Nil\";\n    BlockIdFlag[BlockIdFlag[\"Unrecognized\"] = -1] = \"Unrecognized\";\n})(BlockIdFlag = exports.BlockIdFlag || (exports.BlockIdFlag = {}));\n//# sourceMappingURL=types.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy90ZW5kZXJtaW50LXJwYy9idWlsZC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0MsbUJBQW1CLEtBQUs7QUFDakUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9vcGVuLXByby1uZXh0Ly4vbm9kZV9tb2R1bGVzL0Bjb3NtanMvdGVuZGVybWludC1ycGMvYnVpbGQvdHlwZXMuanM/YTNiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbi8vIFR5cGVzIGluIHRoaXMgZmlsZSBhcmUgZXhwb3J0ZWQgb3V0c2lkZSBvZiB0aGUgQGNvc21qcy90ZW5kZXJtaW50LXJwYyBwYWNrYWdlLFxuLy8gZS5nLiBhcyBwYXJ0IG9mIGEgcmVxdWVzdCBvciByZXNwb25zZVxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5CbG9ja0lkRmxhZyA9IHZvaWQgMDtcbnZhciBCbG9ja0lkRmxhZztcbihmdW5jdGlvbiAoQmxvY2tJZEZsYWcpIHtcbiAgICBCbG9ja0lkRmxhZ1tCbG9ja0lkRmxhZ1tcIlVua25vd25cIl0gPSAwXSA9IFwiVW5rbm93blwiO1xuICAgIEJsb2NrSWRGbGFnW0Jsb2NrSWRGbGFnW1wiQWJzZW50XCJdID0gMV0gPSBcIkFic2VudFwiO1xuICAgIEJsb2NrSWRGbGFnW0Jsb2NrSWRGbGFnW1wiQ29tbWl0XCJdID0gMl0gPSBcIkNvbW1pdFwiO1xuICAgIEJsb2NrSWRGbGFnW0Jsb2NrSWRGbGFnW1wiTmlsXCJdID0gM10gPSBcIk5pbFwiO1xuICAgIEJsb2NrSWRGbGFnW0Jsb2NrSWRGbGFnW1wiVW5yZWNvZ25pemVkXCJdID0gLTFdID0gXCJVbnJlY29nbml6ZWRcIjtcbn0pKEJsb2NrSWRGbGFnID0gZXhwb3J0cy5CbG9ja0lkRmxhZyB8fCAoZXhwb3J0cy5CbG9ja0lkRmxhZyA9IHt9KSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/tendermint-rpc/build/types.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/arrays.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/arrays.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.arrayContentStartsWith = exports.arrayContentEquals = void 0;\n/**\n * Compares the content of two arrays-like objects for equality.\n *\n * Equality is defined as having equal length and element values, where element equality means `===` returning `true`.\n *\n * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.\n * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.\n */\nfunction arrayContentEquals(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (let i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.arrayContentEquals = arrayContentEquals;\n/**\n * Checks if `a` starts with the contents of `b`.\n *\n * This requires equality of the element values, where element equality means `===` returning `true`.\n *\n * This allows you to compare the content of a Buffer, Uint8Array or number[], ignoring the specific type.\n * As a consequence, this returns different results than Jasmine's `toEqual`, which ensures elements have the same type.\n */\nfunction arrayContentStartsWith(a, b) {\n    if (a.length < b.length)\n        return false;\n    for (let i = 0; i < b.length; ++i) {\n        if (a[i] !== b[i])\n            return false;\n    }\n    return true;\n}\nexports.arrayContentStartsWith = arrayContentStartsWith;\n//# sourceMappingURL=arrays.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9hcnJheXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsOEJBQThCLEdBQUcsMEJBQTBCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsY0FBYztBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3V0aWxzL2J1aWxkL2FycmF5cy5qcz81YWEwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hcnJheUNvbnRlbnRTdGFydHNXaXRoID0gZXhwb3J0cy5hcnJheUNvbnRlbnRFcXVhbHMgPSB2b2lkIDA7XG4vKipcbiAqIENvbXBhcmVzIHRoZSBjb250ZW50IG9mIHR3byBhcnJheXMtbGlrZSBvYmplY3RzIGZvciBlcXVhbGl0eS5cbiAqXG4gKiBFcXVhbGl0eSBpcyBkZWZpbmVkIGFzIGhhdmluZyBlcXVhbCBsZW5ndGggYW5kIGVsZW1lbnQgdmFsdWVzLCB3aGVyZSBlbGVtZW50IGVxdWFsaXR5IG1lYW5zIGA9PT1gIHJldHVybmluZyBgdHJ1ZWAuXG4gKlxuICogVGhpcyBhbGxvd3MgeW91IHRvIGNvbXBhcmUgdGhlIGNvbnRlbnQgb2YgYSBCdWZmZXIsIFVpbnQ4QXJyYXkgb3IgbnVtYmVyW10sIGlnbm9yaW5nIHRoZSBzcGVjaWZpYyB0eXBlLlxuICogQXMgYSBjb25zZXF1ZW5jZSwgdGhpcyByZXR1cm5zIGRpZmZlcmVudCByZXN1bHRzIHRoYW4gSmFzbWluZSdzIGB0b0VxdWFsYCwgd2hpY2ggZW5zdXJlcyBlbGVtZW50cyBoYXZlIHRoZSBzYW1lIHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGFycmF5Q29udGVudEVxdWFscyhhLCBiKSB7XG4gICAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aClcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYS5sZW5ndGg7ICsraSkge1xuICAgICAgICBpZiAoYVtpXSAhPT0gYltpXSlcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5leHBvcnRzLmFycmF5Q29udGVudEVxdWFscyA9IGFycmF5Q29udGVudEVxdWFscztcbi8qKlxuICogQ2hlY2tzIGlmIGBhYCBzdGFydHMgd2l0aCB0aGUgY29udGVudHMgb2YgYGJgLlxuICpcbiAqIFRoaXMgcmVxdWlyZXMgZXF1YWxpdHkgb2YgdGhlIGVsZW1lbnQgdmFsdWVzLCB3aGVyZSBlbGVtZW50IGVxdWFsaXR5IG1lYW5zIGA9PT1gIHJldHVybmluZyBgdHJ1ZWAuXG4gKlxuICogVGhpcyBhbGxvd3MgeW91IHRvIGNvbXBhcmUgdGhlIGNvbnRlbnQgb2YgYSBCdWZmZXIsIFVpbnQ4QXJyYXkgb3IgbnVtYmVyW10sIGlnbm9yaW5nIHRoZSBzcGVjaWZpYyB0eXBlLlxuICogQXMgYSBjb25zZXF1ZW5jZSwgdGhpcyByZXR1cm5zIGRpZmZlcmVudCByZXN1bHRzIHRoYW4gSmFzbWluZSdzIGB0b0VxdWFsYCwgd2hpY2ggZW5zdXJlcyBlbGVtZW50cyBoYXZlIHRoZSBzYW1lIHR5cGUuXG4gKi9cbmZ1bmN0aW9uIGFycmF5Q29udGVudFN0YXJ0c1dpdGgoYSwgYikge1xuICAgIGlmIChhLmxlbmd0aCA8IGIubGVuZ3RoKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBiLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmIChhW2ldICE9PSBiW2ldKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydHMuYXJyYXlDb250ZW50U3RhcnRzV2l0aCA9IGFycmF5Q29udGVudFN0YXJ0c1dpdGg7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcnJheXMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/arrays.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/assert.js":
/*!****************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/assert.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = void 0;\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction assert(condition, msg) {\n    if (!condition) {\n        throw new Error(msg || \"condition is not truthy\");\n    }\n}\nexports.assert = assert;\nfunction assertDefined(value, msg) {\n    if (value === undefined) {\n        throw new Error(msg ?? \"value is undefined\");\n    }\n}\nexports.assertDefined = assertDefined;\nfunction assertDefinedAndNotNull(value, msg) {\n    if (value === undefined || value === null) {\n        throw new Error(msg ?? \"value is undefined or null\");\n    }\n}\nexports.assertDefinedAndNotNull = assertDefinedAndNotNull;\n//# sourceMappingURL=assert.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9hc3NlcnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCLEdBQUcscUJBQXFCLEdBQUcsY0FBYztBQUN4RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3V0aWxzL2J1aWxkL2Fzc2VydC5qcz84NzhmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hc3NlcnREZWZpbmVkQW5kTm90TnVsbCA9IGV4cG9ydHMuYXNzZXJ0RGVmaW5lZCA9IGV4cG9ydHMuYXNzZXJ0ID0gdm9pZCAwO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9leHBsaWNpdC1tb2R1bGUtYm91bmRhcnktdHlwZXNcbmZ1bmN0aW9uIGFzc2VydChjb25kaXRpb24sIG1zZykge1xuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cgfHwgXCJjb25kaXRpb24gaXMgbm90IHRydXRoeVwiKTtcbiAgICB9XG59XG5leHBvcnRzLmFzc2VydCA9IGFzc2VydDtcbmZ1bmN0aW9uIGFzc2VydERlZmluZWQodmFsdWUsIG1zZykge1xuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtc2cgPz8gXCJ2YWx1ZSBpcyB1bmRlZmluZWRcIik7XG4gICAgfVxufVxuZXhwb3J0cy5hc3NlcnREZWZpbmVkID0gYXNzZXJ0RGVmaW5lZDtcbmZ1bmN0aW9uIGFzc2VydERlZmluZWRBbmROb3ROdWxsKHZhbHVlLCBtc2cpIHtcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCB8fCB2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobXNnID8/IFwidmFsdWUgaXMgdW5kZWZpbmVkIG9yIG51bGxcIik7XG4gICAgfVxufVxuZXhwb3J0cy5hc3NlcnREZWZpbmVkQW5kTm90TnVsbCA9IGFzc2VydERlZmluZWRBbmROb3ROdWxsO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXNzZXJ0LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/assert.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/index.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isUint8Array = exports.isNonNullObject = exports.isDefined = exports.sleep = exports.assertDefinedAndNotNull = exports.assertDefined = exports.assert = exports.arrayContentStartsWith = exports.arrayContentEquals = void 0;\nvar arrays_1 = __webpack_require__(/*! ./arrays */ \"(ssr)/./node_modules/@cosmjs/utils/build/arrays.js\");\nObject.defineProperty(exports, \"arrayContentEquals\", ({ enumerable: true, get: function () { return arrays_1.arrayContentEquals; } }));\nObject.defineProperty(exports, \"arrayContentStartsWith\", ({ enumerable: true, get: function () { return arrays_1.arrayContentStartsWith; } }));\nvar assert_1 = __webpack_require__(/*! ./assert */ \"(ssr)/./node_modules/@cosmjs/utils/build/assert.js\");\nObject.defineProperty(exports, \"assert\", ({ enumerable: true, get: function () { return assert_1.assert; } }));\nObject.defineProperty(exports, \"assertDefined\", ({ enumerable: true, get: function () { return assert_1.assertDefined; } }));\nObject.defineProperty(exports, \"assertDefinedAndNotNull\", ({ enumerable: true, get: function () { return assert_1.assertDefinedAndNotNull; } }));\nvar sleep_1 = __webpack_require__(/*! ./sleep */ \"(ssr)/./node_modules/@cosmjs/utils/build/sleep.js\");\nObject.defineProperty(exports, \"sleep\", ({ enumerable: true, get: function () { return sleep_1.sleep; } }));\nvar typechecks_1 = __webpack_require__(/*! ./typechecks */ \"(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js\");\nObject.defineProperty(exports, \"isDefined\", ({ enumerable: true, get: function () { return typechecks_1.isDefined; } }));\nObject.defineProperty(exports, \"isNonNullObject\", ({ enumerable: true, get: function () { return typechecks_1.isNonNullObject; } }));\nObject.defineProperty(exports, \"isUint8Array\", ({ enumerable: true, get: function () { return typechecks_1.isUint8Array; } }));\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx1QkFBdUIsR0FBRyxpQkFBaUIsR0FBRyxhQUFhLEdBQUcsK0JBQStCLEdBQUcscUJBQXFCLEdBQUcsY0FBYyxHQUFHLDhCQUE4QixHQUFHLDBCQUEwQjtBQUMzTixlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakMsc0RBQXFELEVBQUUscUNBQXFDLHVDQUF1QyxFQUFDO0FBQ3BJLDBEQUF5RCxFQUFFLHFDQUFxQywyQ0FBMkMsRUFBQztBQUM1SSxlQUFlLG1CQUFPLENBQUMsb0VBQVU7QUFDakMsMENBQXlDLEVBQUUscUNBQXFDLDJCQUEyQixFQUFDO0FBQzVHLGlEQUFnRCxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUMxSCwyREFBMEQsRUFBRSxxQ0FBcUMsNENBQTRDLEVBQUM7QUFDOUksY0FBYyxtQkFBTyxDQUFDLGtFQUFTO0FBQy9CLHlDQUF3QyxFQUFFLHFDQUFxQyx5QkFBeUIsRUFBQztBQUN6RyxtQkFBbUIsbUJBQU8sQ0FBQyw0RUFBYztBQUN6Qyw2Q0FBNEMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDdEgsbURBQWtELEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQ2xJLGdEQUErQyxFQUFFLHFDQUFxQyxxQ0FBcUMsRUFBQztBQUM1SCIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9pbmRleC5qcz8yYTJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pc1VpbnQ4QXJyYXkgPSBleHBvcnRzLmlzTm9uTnVsbE9iamVjdCA9IGV4cG9ydHMuaXNEZWZpbmVkID0gZXhwb3J0cy5zbGVlcCA9IGV4cG9ydHMuYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGwgPSBleHBvcnRzLmFzc2VydERlZmluZWQgPSBleHBvcnRzLmFzc2VydCA9IGV4cG9ydHMuYXJyYXlDb250ZW50U3RhcnRzV2l0aCA9IGV4cG9ydHMuYXJyYXlDb250ZW50RXF1YWxzID0gdm9pZCAwO1xudmFyIGFycmF5c18xID0gcmVxdWlyZShcIi4vYXJyYXlzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXJyYXlDb250ZW50RXF1YWxzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhcnJheXNfMS5hcnJheUNvbnRlbnRFcXVhbHM7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhcnJheUNvbnRlbnRTdGFydHNXaXRoXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhcnJheXNfMS5hcnJheUNvbnRlbnRTdGFydHNXaXRoOyB9IH0pO1xudmFyIGFzc2VydF8xID0gcmVxdWlyZShcIi4vYXNzZXJ0XCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXNzZXJ0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhc3NlcnRfMS5hc3NlcnQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJhc3NlcnREZWZpbmVkXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBhc3NlcnRfMS5hc3NlcnREZWZpbmVkOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiYXNzZXJ0RGVmaW5lZEFuZE5vdE51bGxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFzc2VydF8xLmFzc2VydERlZmluZWRBbmROb3ROdWxsOyB9IH0pO1xudmFyIHNsZWVwXzEgPSByZXF1aXJlKFwiLi9zbGVlcFwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcInNsZWVwXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBzbGVlcF8xLnNsZWVwOyB9IH0pO1xudmFyIHR5cGVjaGVja3NfMSA9IHJlcXVpcmUoXCIuL3R5cGVjaGVja3NcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc0RlZmluZWRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVjaGVja3NfMS5pc0RlZmluZWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc05vbk51bGxPYmplY3RcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVjaGVja3NfMS5pc05vbk51bGxPYmplY3Q7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJpc1VpbnQ4QXJyYXlcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHR5cGVjaGVja3NfMS5pc1VpbnQ4QXJyYXk7IH0gfSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/sleep.js":
/*!***************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/sleep.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sleep = void 0;\nasync function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nexports.sleep = sleep;\n//# sourceMappingURL=sleep.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC9zbGVlcC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb3Blbi1wcm8tbmV4dC8uL25vZGVfbW9kdWxlcy9AY29zbWpzL3V0aWxzL2J1aWxkL3NsZWVwLmpzPzE5MGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnNsZWVwID0gdm9pZCAwO1xuYXN5bmMgZnVuY3Rpb24gc2xlZXAobXMpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgbXMpKTtcbn1cbmV4cG9ydHMuc2xlZXAgPSBzbGVlcDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNsZWVwLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/sleep.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js":
/*!********************************************************!*\
  !*** ./node_modules/@cosmjs/utils/build/typechecks.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.isDefined = exports.isUint8Array = exports.isNonNullObject = void 0;\n/**\n * Checks if data is a non-null object (i.e. matches the TypeScript object type).\n *\n * Note: this returns true for arrays, which are objects in JavaScript\n * even though array and object are different types in JSON.\n *\n * @see https://www.typescriptlang.org/docs/handbook/basic-types.html#object\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isNonNullObject(data) {\n    return typeof data === \"object\" && data !== null;\n}\nexports.isNonNullObject = isNonNullObject;\n/**\n * Checks if data is an Uint8Array. Note: Buffer is treated as not a Uint8Array\n */\nfunction isUint8Array(data) {\n    if (!isNonNullObject(data))\n        return false;\n    // Avoid instanceof check which is unreliable in some JS environments\n    // https://medium.com/@simonwarta/limitations-of-the-instanceof-operator-f4bcdbe7a400\n    // Use check that was discussed in https://github.com/crypto-browserify/pbkdf2/pull/81\n    if (Object.prototype.toString.call(data) !== \"[object Uint8Array]\")\n        return false;\n    if (typeof Buffer !== \"undefined\" && typeof Buffer.isBuffer !== \"undefined\") {\n        // Buffer.isBuffer is available at runtime\n        if (Buffer.isBuffer(data))\n            return false;\n    }\n    return true;\n}\nexports.isUint8Array = isUint8Array;\n/**\n * Checks if input is not undefined in a TypeScript-friendly way.\n *\n * This is convenient to use in e.g. `Array.filter` as it will convert\n * the type of a `Array<Foo | undefined>` to `Array<Foo>`.\n */\nfunction isDefined(value) {\n    return value !== undefined;\n}\nexports.isDefined = isDefined;\n//# sourceMappingURL=typechecks.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC90eXBlY2hlY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlCQUFpQixHQUFHLG9CQUFvQixHQUFHLHVCQUF1QjtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL29wZW4tcHJvLW5leHQvLi9ub2RlX21vZHVsZXMvQGNvc21qcy91dGlscy9idWlsZC90eXBlY2hlY2tzLmpzP2Q1N2YiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmlzRGVmaW5lZCA9IGV4cG9ydHMuaXNVaW50OEFycmF5ID0gZXhwb3J0cy5pc05vbk51bGxPYmplY3QgPSB2b2lkIDA7XG4vKipcbiAqIENoZWNrcyBpZiBkYXRhIGlzIGEgbm9uLW51bGwgb2JqZWN0IChpLmUuIG1hdGNoZXMgdGhlIFR5cGVTY3JpcHQgb2JqZWN0IHR5cGUpLlxuICpcbiAqIE5vdGU6IHRoaXMgcmV0dXJucyB0cnVlIGZvciBhcnJheXMsIHdoaWNoIGFyZSBvYmplY3RzIGluIEphdmFTY3JpcHRcbiAqIGV2ZW4gdGhvdWdoIGFycmF5IGFuZCBvYmplY3QgYXJlIGRpZmZlcmVudCB0eXBlcyBpbiBKU09OLlxuICpcbiAqIEBzZWUgaHR0cHM6Ly93d3cudHlwZXNjcmlwdGxhbmcub3JnL2RvY3MvaGFuZGJvb2svYmFzaWMtdHlwZXMuaHRtbCNvYmplY3RcbiAqL1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9iYW4tdHlwZXNcbmZ1bmN0aW9uIGlzTm9uTnVsbE9iamVjdChkYXRhKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBkYXRhID09PSBcIm9iamVjdFwiICYmIGRhdGEgIT09IG51bGw7XG59XG5leHBvcnRzLmlzTm9uTnVsbE9iamVjdCA9IGlzTm9uTnVsbE9iamVjdDtcbi8qKlxuICogQ2hlY2tzIGlmIGRhdGEgaXMgYW4gVWludDhBcnJheS4gTm90ZTogQnVmZmVyIGlzIHRyZWF0ZWQgYXMgbm90IGEgVWludDhBcnJheVxuICovXG5mdW5jdGlvbiBpc1VpbnQ4QXJyYXkoZGF0YSkge1xuICAgIGlmICghaXNOb25OdWxsT2JqZWN0KGRhdGEpKVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgLy8gQXZvaWQgaW5zdGFuY2VvZiBjaGVjayB3aGljaCBpcyB1bnJlbGlhYmxlIGluIHNvbWUgSlMgZW52aXJvbm1lbnRzXG4gICAgLy8gaHR0cHM6Ly9tZWRpdW0uY29tL0BzaW1vbndhcnRhL2xpbWl0YXRpb25zLW9mLXRoZS1pbnN0YW5jZW9mLW9wZXJhdG9yLWY0YmNkYmU3YTQwMFxuICAgIC8vIFVzZSBjaGVjayB0aGF0IHdhcyBkaXNjdXNzZWQgaW4gaHR0cHM6Ly9naXRodWIuY29tL2NyeXB0by1icm93c2VyaWZ5L3Bia2RmMi9wdWxsLzgxXG4gICAgaWYgKE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChkYXRhKSAhPT0gXCJbb2JqZWN0IFVpbnQ4QXJyYXldXCIpXG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICBpZiAodHlwZW9mIEJ1ZmZlciAhPT0gXCJ1bmRlZmluZWRcIiAmJiB0eXBlb2YgQnVmZmVyLmlzQnVmZmVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIC8vIEJ1ZmZlci5pc0J1ZmZlciBpcyBhdmFpbGFibGUgYXQgcnVudGltZVxuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGRhdGEpKVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbmV4cG9ydHMuaXNVaW50OEFycmF5ID0gaXNVaW50OEFycmF5O1xuLyoqXG4gKiBDaGVja3MgaWYgaW5wdXQgaXMgbm90IHVuZGVmaW5lZCBpbiBhIFR5cGVTY3JpcHQtZnJpZW5kbHkgd2F5LlxuICpcbiAqIFRoaXMgaXMgY29udmVuaWVudCB0byB1c2UgaW4gZS5nLiBgQXJyYXkuZmlsdGVyYCBhcyBpdCB3aWxsIGNvbnZlcnRcbiAqIHRoZSB0eXBlIG9mIGEgYEFycmF5PEZvbyB8IHVuZGVmaW5lZD5gIHRvIGBBcnJheTxGb28+YC5cbiAqL1xuZnVuY3Rpb24gaXNEZWZpbmVkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQ7XG59XG5leHBvcnRzLmlzRGVmaW5lZCA9IGlzRGVmaW5lZDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXR5cGVjaGVja3MuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@cosmjs/utils/build/typechecks.js\n");

/***/ })

};
;