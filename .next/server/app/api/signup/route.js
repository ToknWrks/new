"use strict";(()=>{var e={};e.id=538,e.ids=[538],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},84770:e=>{e.exports=require("crypto")},67743:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>x,patchFetch:()=>A,requestAsyncStorage:()=>m,routeModule:()=>l,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g});var n={};t.r(n),t.d(n,{POST:()=>c});var s=t(49303),a=t(88716),o=t(60670),i=t(87070),p=t(42023),u=t.n(p),d=t(62237);async function c(e){let{name:r,email:t,password:n}=await e.json(),s=await u().hash(n,10);try{let e=process.env.DATABASE_URL;if(!e)throw Error("DATABASE_URL is not defined");let n=(0,d.qn)(e),a=await n`
      INSERT INTO "User" (name, email, password)
      VALUES (${r}, ${t}, ${s})
      RETURNING id, name, email;
    `;return i.NextResponse.json(a[0],{status:201})}catch(e){return console.error("Error creating user:",e),i.NextResponse.json({error:"Error creating user"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/signup/route",pathname:"/api/signup",filename:"route",bundlePath:"app/api/signup/route"},resolvedPagePath:"/Users/lancepitman/toknWrks-new/new/app/api/signup/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:m,staticGenerationAsyncStorage:g,serverHooks:h}=l,x="/api/signup/route";function A(){return(0,o.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:g})}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),n=r.X(0,[948,415,23],()=>t(67743));module.exports=n})();