"use strict";(()=>{var e={};e.id=148,e.ids=[148],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},22329:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>h,patchFetch:()=>m,requestAsyncStorage:()=>c,routeModule:()=>d,serverHooks:()=>w,staticGenerationAsyncStorage:()=>l});var s={};r.r(s),r.d(s,{POST:()=>u});var a=r(49303),n=r(88716),o=r(60670),p=r(87070),i=r(62237);async function u(e){let{claimId:t,tokensSwapped:r,tokensUnswapped:s,txHash:a}=await e.json();try{let e=process.env.DATABASE_URL;if(!e)throw Error("DATABASE_URL is not defined");let n=(0,i.qn)(e),o=await n`
      INSERT INTO swaps (claim_id, tokens_swapped, tokens_unswapped, tx_hash)
      VALUES (${t}, ${r}, ${s}, ${a})
      RETURNING *;
    `;return p.NextResponse.json(o[0],{status:201})}catch(e){return console.error(e),p.NextResponse.json({error:"Internal Server Error"},{status:500})}}let d=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/swaps/route",pathname:"/api/swaps",filename:"route",bundlePath:"app/api/swaps/route"},resolvedPagePath:"/Users/lancepitman/toknWrks-new/new/app/api/swaps/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:c,staticGenerationAsyncStorage:l,serverHooks:w}=d,h="/api/swaps/route";function m(){return(0,o.patchFetch)({serverHooks:w,staticGenerationAsyncStorage:l})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,415],()=>r(22329));module.exports=s})();